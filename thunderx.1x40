root@ca001-001:/home/ubuntu/cida/definitions# python
Python 2.7.6 (default, Mar 22 2014, 22:58:30) 
[GCC 4.8.2] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> 
>>> exit()
root@ca001-001:/home/ubuntu/cida/definitions# /home/ubuntu/ybd/ybd.py systems/build-system-armv8l64.morph armv8l64

0:15-07-04 07:12:17 [TOTAL] ybd.py starts, version HEAD 15-27-2-g62e5d07-dirty (15-27 + 2 commits) 
0:15-07-04 07:12:17 [TARGET] Target is /home/ubuntu/cida/definitions/systems/build-system-armv8l64.morph armv8l64
0:15-07-04 07:12:17 [DEFINITIONS] Parsing HEAD (No tag found) 
0:15-07-04 07:12:17 [DEFINITIONS] WARNING: problem loading ./schema/json-schema.json
0:15-07-04 07:12:17 [DEFINITIONS] WARNING: problem loading ./schema/definitions-schema.json
0:15-07-04 07:12:19 [ansible] WARNING: ansible contains ansible
0:15-07-04 07:12:19 [baserock-import] WARNING: baserock-import contains baserock-import
0:15-07-04 07:12:20 [cups] WARNING: cups contains cups
0:15-07-04 07:12:20 [cxmanage] WARNING: cxmanage contains cxmanage
0:15-07-04 07:12:20 [django] WARNING: django contains django
0:15-07-04 07:12:20 [enlightenment] WARNING: enlightenment contains enlightenment
0:15-07-04 07:12:20 [erlang] WARNING: erlang contains erlang
0:15-07-04 07:12:20 [gtk3] WARNING: gtk3 contains gtk3
0:15-07-04 07:12:20 [lorry-controller] WARNING: lorry-controller contains lorry-controller
0:15-07-04 07:12:20 [lorry] WARNING: lorry contains lorry
0:15-07-04 07:12:20 [lua] WARNING: lua contains lua
0:15-07-04 07:12:20 [orc] WARNING: multiple definitions of build-depends
0:15-07-04 07:12:20 [orc] ['strata/core.morph', 'strata/foundation.morph', 'strata/audio-bluetooth.morph', 'strata/multimedia-common.morph'] | ['strata/audio-bluetooth.morph', 'strata/multimedia-common.morph', 'strata/mesa-common.morph'] 
0:15-07-04 07:12:20 [orc] WARNING: multiple definitions of ref
0:15-07-04 07:12:20 [orc] b4f7fcaf99a4d952e59f2a9fa9286d24cc4b3a5a | 16e053b8f2359196fd50b111f1c10b93590f5cb9 
0:15-07-04 07:12:20 [orc] WARNING: multiple definitions of unpetrify-ref
0:15-07-04 07:12:20 [orc] baserock/morph | orc-0.4.22 
0:15-07-04 07:12:21 [ntpd] WARNING: ntpd contains ntpd
0:15-07-04 07:12:22 [qt4-tools] WARNING: qt4-tools contains qt4-tools
0:15-07-04 07:12:22 [ruby] WARNING: ruby contains ruby
0:15-07-04 07:12:22 [swift] WARNING: swift contains swift
0:15-07-04 07:12:22 [linux-user-chroot] WARNING: multiple definitions of build-depends
0:15-07-04 07:12:22 [linux-user-chroot] ['strata/core.morph', 'strata/python-core.morph'] | ['strata/core.morph'] 
0:15-07-04 07:12:22 [libepoxy] WARNING: multiple definitions of build-depends
0:15-07-04 07:12:22 [libepoxy] ['strata/gtk-deps.morph', 'strata/wayland-generic.morph'] | ['strata/foundation.morph', 'strata/libdrm-common.morph', 'strata/mesa-common.morph', 'strata/x-common.morph', 'strata/graphics-common.morph'] 
0:15-07-04 07:12:22 [xstatic] WARNING: xstatic contains xstatic
0:15-07-04 07:12:23 [zookeeper-client] WARNING: zookeeper-client contains zookeeper-client
0:15-07-04 07:12:23 [zookeeper-server] WARNING: zookeeper-server contains zookeeper-server
0:15-07-04 07:12:23 [zookeeper] WARNING: zookeeper contains zookeeper
0:15-07-04 07:12:29 [DEFINITIONS] Elapsed time 00:00:11
0:15-07-04 07:12:29 [CACHE-KEYS] Calculating 
0:15-07-04 07:12:29 [stage1-binutils] Cache_key is stage1-binutils.a9347f625e7d06c0e674192701329bfec799ee307be2e60d46877b762ce63f86
0:15-07-04 07:12:29 [stage1-gcc] Cache_key is stage1-gcc.da0a2535b0f62a86abdd1412c3110d21d0cf0760a3b695fe5e53079a7667d8bd
0:15-07-04 07:12:29 [stage2-linux-api-headers] Cache_key is stage2-linux-api-headers.2924aca6ee4871cf8d19ab77f35e1b5599bed435b02e4c884a9b59e34491d4bb
0:15-07-04 07:12:29 [stage2-glibc] Cache_key is stage2-glibc.97579f45b08fa08c93d992552a17395e9641c7fe9a6bccfaee43a50a906c635b
0:15-07-04 07:12:29 [stage2-libstdc++] Cache_key is stage2-libstdc++.355e45b6416c891e36565d0a4d52d91893d7be9bf7f549c1abffcf01f19f34ce
0:15-07-04 07:12:29 [stage2-binutils] Cache_key is stage2-binutils.3dc2f69a2963a95bc818328d78fc57b989ec1e3243b53404661a831af5251800
0:15-07-04 07:12:29 [stage2-gcc-fixed-headers] Cache_key is stage2-gcc-fixed-headers.ba44ea96e67b025734e0c5d7ed43db8868ce6080f4bbb3144bcd65d18794468b
0:15-07-04 07:12:29 [stage2-gcc] Cache_key is stage2-gcc.21e9e19fb8d1834ca3f259c4f605ce75f4d8998e1d95cb913989dfdf23564853
0:15-07-04 07:12:29 [stage2-busybox] Cache_key is stage2-busybox.2288420234b76a4c9fb4ab8acbf40e6b91ea5a30f49afce9b793ed2e572f7574
0:15-07-04 07:12:29 [stage2-fake-bash] Cache_key is stage2-fake-bash.e0b9fcea84d34d93cb3d990b16e2149d3bcb2738d1bb9a0aff93afab8d415d96
0:15-07-04 07:12:29 [stage2-fhs-dirs] Cache_key is stage2-fhs-dirs.26c4d487d57d7d53764405cb21dde54d9fb53868e086723da75d261e9432ad10
0:15-07-04 07:12:29 [stage2-gawk] Cache_key is stage2-gawk.12efca73ffd0d1a68df93bad69690a84902665163d2670f4045bc88617cbfa95
0:15-07-04 07:12:29 [stage2-make] Cache_key is stage2-make.1a3ddf3d8112e26bb8ac73b4a991b70946e1cc9e340eeb1c82962e68f3a7ec2b
0:15-07-04 07:12:29 [stage2-reset-specs] Cache_key is stage2-reset-specs.5a04e9fe687182a751891c05f082df35066f248ae2761ba44eb1b5c53cfe85ef
0:15-07-04 07:12:29 [fhs-dirs] Cache_key is fhs-dirs.d9da6ed26e63209c0a7b8059ee7622f5194487ce167da7c45a74c96802f54560
0:15-07-04 07:12:29 [linux-api-headers] Cache_key is linux-api-headers.384c89b18b7feaefbfd5e0f26617ffa2ca37511c08ef1f09e7f045a096a7758d
0:15-07-04 07:12:29 [glibc] Cache_key is glibc.0318edafdc6fc6832aed2c94c7704f6e08234582614f7efd61f7c01aafc46d6d
0:15-07-04 07:12:29 [zlib] Cache_key is zlib.417fa73fa8876c0f59ac9723e408b06ca97de1e578ec4277a4fd3a09073bc15d
0:15-07-04 07:12:29 [binutils] Cache_key is binutils.b19993a742c1e945794f61e13e547623fbfc4af372bfbbad441296e84881b0ee
0:15-07-04 07:12:29 [busybox] Cache_key is busybox.d89b49968293ffee169d8bd648197f15869c56595d95d36cafb468c343ece402
0:15-07-04 07:12:29 [gawk] Cache_key is gawk.81f3c5fada90969d73f65428ccc4bc96f5e204bbe2b169c7f7174b924627bda2
0:15-07-04 07:12:29 [m4-tarball] Cache_key is m4-tarball.7c876f611fe465a13a4734642f8c272fdd083372ef8f87e2a76734e2b061cf65
0:15-07-04 07:12:29 [gcc] Cache_key is gcc.c707194a2c12ab420155e44940db6c8ddc5eee9b2802393fe511ed87b3aec160
0:15-07-04 07:12:29 [make] Cache_key is make.a9f18a9bb53895b0fe893399c277803b194173239a5cdd6c563be8db5fe810cc
0:15-07-04 07:12:29 [ccache] Cache_key is ccache.5bed660e735e286b558e932eca4b8903b88e0d6e9aae8b6c5ff9fffb56a1c59d
0:15-07-04 07:12:29 [build-essential] Cache_key is build-essential.84d38c64321789981ff73617b6c12b553e153fe606e49d2b19bd304db9fcaae8
0:15-07-04 07:12:29 [sqlite3] Cache_key is sqlite3.a0d64ce8e08e02be45bbd4b7b9cf79d78cd97ef9ec7e120882a7e6f65fcd8962
0:15-07-04 07:12:29 [cmake] Cache_key is cmake.cb1cdb3a052883671bd735f25fc1a46dface04bc531a48158db33b726060ba67
0:15-07-04 07:12:29 [gdbm] Cache_key is gdbm.1994cf2e734d2a688919e18ad21125fd87df2ee1fe28541c696bebd4624da803
0:15-07-04 07:12:29 [mini-utils] Cache_key is mini-utils.2390ac7764b0bd6fc889490cf0c2b2a8b0a277d7be6c8a9b6bac7ceae2943c87
0:15-07-04 07:12:29 [ncurses] Cache_key is ncurses.ffb92125a2d0087c5bf4fb1466602f26908a2be6dff883e13770a7419047f5ba
0:15-07-04 07:12:29 [perl] Cache_key is perl.e2432e758e9c75fa62a0b6bd9a73d45aafb1a1cc15907bf89afac73650d9e940
0:15-07-04 07:12:29 [texinfo-tarball] Cache_key is texinfo-tarball.d05a7023a057f2440191ee906670f44bd865b2e6f295b7bf1bc6d5b06d922e62
0:15-07-04 07:12:29 [autoconf-tarball] Cache_key is autoconf-tarball.1bcd28601451cf9971f38e630544ede55ff333868210ee7440a746683d6a4022
0:15-07-04 07:12:29 [automake] Cache_key is automake.5ecea1e1e8854cd5b57e2dd1cd8a1be491d56d19cacfaf6928fb37b65608ff35
0:15-07-04 07:12:29 [help2man] Cache_key is help2man.f38decd7f00387c5b0f40003606fc30c3b8b572d9a75030509c13b5d5cb41a3e
0:15-07-04 07:12:29 [autoconf] Cache_key is autoconf.278e829c24d37b752078ef434ec68629f32008e71360ca2089b220f422b6d247
0:15-07-04 07:12:29 [libtool-tarball] Cache_key is libtool-tarball.4274705e81f9d6154390f0019cb620136a4fe7d9e1b28a1e0d75f85cef47a1ac
0:15-07-04 07:12:29 [libexpat] Cache_key is libexpat.1f6bf05db7131859d2d8dc137a3c44052f2a14c050913434492db8308ec78242
0:15-07-04 07:12:29 [gettext-tarball] Cache_key is gettext-tarball.3ceac18925fac6ff9174c1670a1cc3f4a56ef11888377ad4c8c3764835548216
0:15-07-04 07:12:29 [bash] Cache_key is bash.68a7a90d6f6d544eff3bf063595268011b5d4b954862c11278f12b6963fba748
0:15-07-04 07:12:29 [flex] Cache_key is flex.6bc421595e5928919cc16c979b506ba5f5fb140791e1c7785e607165348f416f
0:15-07-04 07:12:29 [openssl-new] Cache_key is openssl-new.b7164bda7e7409dc23bcfc0bc8a9f9e537f7cc10303eb149fb4f53a084b6d69f
0:15-07-04 07:12:29 [bzip2] Cache_key is bzip2.80c3c54985fa98f2f66c635a75df2caebe440509fae8d7b3319e5e5499546ee2
0:15-07-04 07:12:29 [readline] Cache_key is readline.22349d8227b9a31df22c92c6ca2b7c42bebc7a361d8d333704d56b30290d63d6
0:15-07-04 07:12:29 [cpython] Cache_key is cpython.b954f5743abc77b1a0a5342542f054963067fa94acb960a8261617abbdea0695
0:15-07-04 07:12:29 [cython] Cache_key is cython.2200721dd357a97c80926c782c8b2a2bd9a7a3b476af48a6ebc6a50140aab956
0:15-07-04 07:12:29 [gtk-doc-stub] Cache_key is gtk-doc-stub.d342ab15fe80ffd40b47811d8471774d7a1cae16e32dde212b54704e5a34b263
0:15-07-04 07:12:29 [bison] Cache_key is bison.1c2c924757d75d1d3cd5094ba9842153d374ea43160ba35979de68f8507c4655
0:15-07-04 07:12:29 [patch] Cache_key is patch.3f520ff8089013dd8b9ff8f2bcac987eff2f34771631a3dcf3dcd3721fb2ea1b
0:15-07-04 07:12:29 [xz] Cache_key is xz.1e83e70fd77b7207fc8d8f36bd9c269ff6f57865458855fc2e78a608cf2f4d0a
0:15-07-04 07:12:29 [libtool] Cache_key is libtool.42bb7ca52453a8d4c87d81ef5f879d30eccbac8b01c02a95afb615222b5756e5
0:15-07-04 07:12:29 [libxml2] Cache_key is libxml2.d677bfa76f93dda5ec7d10457e64cf41bf0df1f93ae7d3597a4cf57beef60b87
0:15-07-04 07:12:29 [ca-certificates] Cache_key is ca-certificates.3755c5e70ee6d94e0a58c3a872fd6400415b2d8d2bc4017f0dde54d9bdb9ea43
0:15-07-04 07:12:29 [curl] Cache_key is curl.6a326a874991af317a197d5946d8fbed05b13284c1ae6733ba34ba180492e16b
0:15-07-04 07:12:29 [XML-Parser] Cache_key is XML-Parser.a35bf49b59e66663a355c5cf0e515aa9d93431f7f8a3a48aa1c7222a07637014
0:15-07-04 07:12:29 [git] Cache_key is git.475ad783afda29f5b37a7c5cc0ca8b046a1733253baa2d17e9e40e41ad6ce504
0:15-07-04 07:12:29 [gperf] Cache_key is gperf.c7d15802a53237f6902fc2499b8cce5f01522aa2a67ba1d49a3dc202a39d51c4
0:15-07-04 07:12:29 [intltool] Cache_key is intltool.9e868fb281702687e3372d34238f07495c1e26cdbc74fed2ce4d5a0d16d84eec
0:15-07-04 07:12:29 [pkg-config] Cache_key is pkg-config.84f5acc0f39930274b883b0a466be35d8c0927f5b4adbbee3f3f2dc542398b5b
0:15-07-04 07:12:29 [attr] Cache_key is attr.3aa6440f3d97ddebed9e8ed346509297388da6ba9cc0ef5232eccb510c1ad8ff
0:15-07-04 07:12:29 [acl] Cache_key is acl.653497d33b85e472a5c4bf3f541c14e789c23af9e52d3554046b4f4d28db4a3e
0:15-07-04 07:12:29 [linux-pam] Cache_key is linux-pam.6cbd7f04de04afc4cbf7a2706cd300eea8fa681b35a31ae59bc98dbe096b3a21
0:15-07-04 07:12:29 [libcap2] Cache_key is libcap2.8df02c49eb6e1f7fb4d46936cec2d56dcc0eac595f141a30a16431e6ca81f6c6
0:15-07-04 07:12:29 [shadow] Cache_key is shadow.c01193d1f4b645c426cd72836e6671a172d86595e7273f2b792a033ab0f55c97
0:15-07-04 07:12:29 [util-linux] Cache_key is util-linux.b1f9cb178d5acabcc08e564689797730392b94ce3a926295ab829136edfe64bd
0:15-07-04 07:12:29 [bc] Cache_key is bc.aa843ca813feae52dc7b245e91f30030c72a701060db55ae8f128afeeb378096
0:15-07-04 07:12:29 [libxslt] Cache_key is libxslt.2b9bbf262627243a30c8cf63be6a7be7409836fa5d11401d7ce819d5b113668e
0:15-07-04 07:12:29 [gnome-common] Cache_key is gnome-common.95a4737e9b495a098dd86d3b4ccafaf09b8b45e55aa48c6a395d9c3fb5246b3f
0:15-07-04 07:12:29 [libffi] Cache_key is libffi.2f4fc14a07e1559b57d4e893523c2f9bf21eee1922a1e17d9e1a9f4ff438b3c9
0:15-07-04 07:12:29 [glib] Cache_key is glib.9dd482cbe1e94205bf86e71c6884af15cbcfa1169f65fbf057f894fb27beb8a4
0:15-07-04 07:12:29 [gobject-introspection] Cache_key is gobject-introspection.6dc120fbd03c1b31e5c4217767fc7d0eeb4141fe4c5315582b6d4a8682c5c501
0:15-07-04 07:12:29 [e2fsprogs] Cache_key is e2fsprogs.b1042d2ea66c48f120e2930e1596e3fa74931a4b5917b9e2562cc888752e5873
0:15-07-04 07:12:29 [core] Cache_key is core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3
0:15-07-04 07:12:29 [coreutils] Cache_key is coreutils.5b540116a6e9c02e437dfe2aec41a7bc643accbb777251f14dd28c11157b9bcf
0:15-07-04 07:12:29 [sed] Cache_key is sed.8618050f3245221c3f6e94f3f942866f9a5dff9c42f3f5bff29c169d4bcbb168
0:15-07-04 07:12:29 [diff] Cache_key is diff.6193fdb2e2c2929de8df380e60cd828d712bc78222b51af11bce6f0b691ff07c
0:15-07-04 07:12:29 [tar] Cache_key is tar.c1d917b7f83fadf212caaae75bf8d6e6c4768792c495454ab5cd7c228553b53f
0:15-07-04 07:12:29 [findutils] Cache_key is findutils.8c8102d3c49af41371569da277c70b97c41ffdb9b2f98b7a2825daccf3e07b94
0:15-07-04 07:12:29 [coreutils-common] Cache_key is coreutils-common.40a0127fe04f51dc3d6bb885fadffb65dac0b8abdb08f9f8f5aac203314546c8
0:15-07-04 07:12:29 [bash-completion] Cache_key is bash-completion.6df8d8a91392054a9cdfd5f61d79149f8d6c400d46a0c09564e14c261c84897a
0:15-07-04 07:12:29 [groff] Cache_key is groff.efd7eefb38e933cd2dd99b95c121c06ab640a39984253df167ce4216dcdb3400
0:15-07-04 07:12:29 [kmod] Cache_key is kmod.84e855f6b6ebf0f04e082887db50bdce530fa0f92e6c5e1659a90cbeea59df2a
0:15-07-04 07:12:29 [time-zone-database] Cache_key is time-zone-database.19be5723e5769fafe55c8bb11ce1cab649f3895e058b590c38907be7a991fc09
0:15-07-04 07:12:29 [pciutils] Cache_key is pciutils.ea2a63b7805c2d42cdda61509f7ccb6ecdc84fe7be136b86aab8baa6f9e44660
0:15-07-04 07:12:29 [dbus-pre] Cache_key is dbus-pre.9a38ee3b88d6978f9fe459f89aabc0c5387350a3731556f68d204e7b8e84b087
0:15-07-04 07:12:29 [libgpg-error] Cache_key is libgpg-error.14b0f7134bc27c3d6b718e0f1d996fa9fa2a42027f0e7fcabfff2a5c00513382
0:15-07-04 07:12:29 [libgcrypt] Cache_key is libgcrypt.d8da8558bef5a14e15934ddefc11f283bab40930c303d5c734e61d87a63bb82a
0:15-07-04 07:12:29 [systemd] Cache_key is systemd.931086a7169a30cecfd063b84c72c1deb0433a49c0612cc79c7a0ba71c9f3134
0:15-07-04 07:12:29 [libusb] Cache_key is libusb.ddfefd338baaa46a1134f00f9930c5d22f57b86455550e5244a9f6c99316a7f0
0:15-07-04 07:12:29 [usbutils] Cache_key is usbutils.f91279983dac75ddc1c79b2a60d83ca1f3604a29329838f79289407275e8164c
0:15-07-04 07:12:29 [lzo] Cache_key is lzo.f9854801c67b5fc21f0b0c9f29713c9c0c58b7ab0837c86e79e02aaa532d5bb0
0:15-07-04 07:12:29 [fuse] Cache_key is fuse.ad988060485d626b4cc3b20818742942d2307a028afc9d446db26510c1fa8ace
0:15-07-04 07:12:29 [btrfs-progs] Cache_key is btrfs-progs.611455f35530219bba715164685adb5430cde1822c3ea55e26f39d04cd25e576
0:15-07-04 07:12:29 [dbus] Cache_key is dbus.939b16ce939f1be5c11040c312a339e8b0a2a7dd9a0d8c4b3a97da031a25c5ce
0:15-07-04 07:12:29 [openssh] Cache_key is openssh.00f45d84e0517f738bca3fdb4baae32d47b7d539dbb7de6e8fc334be061f8bcd
0:15-07-04 07:12:29 [tbdiff] Cache_key is tbdiff.068917cb68620ea25d2c6b4a1641ec21553d01fb1e0dd012e12951170bebc5a5
0:15-07-04 07:12:29 [dbus-glib] Cache_key is dbus-glib.81319fcfd1a346169eb1d065be11e30bebe6e9ca4f0d375e6a61328be08a6367
0:15-07-04 07:12:29 [rsync] Cache_key is rsync.68c121e531de36c7104200196b79cd7e9bcf462297985845793ff7ca45646cf2
0:15-07-04 07:12:29 [foundation] Cache_key is foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360
0:15-07-04 07:12:29 [python-setuptools] Cache_key is python-setuptools.c0754f3142477adc07dd51a380727d2b56c036e9b0b19c24469c2a93532405a8
0:15-07-04 07:12:29 [mako] Cache_key is mako.424fe0f3bbd0272d32e694ab34626365ad920164237a3d8c601cabaac862217b
0:15-07-04 07:12:29 [pip] Cache_key is pip.68471b602f011719f9a14100455e820e0b4d3aaf45ff9913e6653b5e160f7863
0:15-07-04 07:12:29 [pbr] Cache_key is pbr.7ea3e259e1643cd0e90bb28525d97b7fac48880f9dbf63176641a246f4a2a5f3
0:15-07-04 07:12:29 [python-requests] Cache_key is python-requests.aa81fcce18aad909447a5df18944a4180ea80f0b73d845a833ce9fb12a44a563
0:15-07-04 07:12:29 [six] Cache_key is six.bcba0e5f97e252cd4a341c5bcd1a3465ad8d19516b3b1cfa1af3d038323f0755
0:15-07-04 07:12:29 [pyyaml] Cache_key is pyyaml.a55848bc8dccceefccc95075cd75b6d95cb876e6e5d468fea2a82f02d95b1d39
0:15-07-04 07:12:29 [python-lxml] Cache_key is python-lxml.4da2e2f42c0aee30b38feb9eac8334ee11a21f18b8f56ee959253f71f3e6e7d8
0:15-07-04 07:12:29 [python-markdown] Cache_key is python-markdown.b8aa00f205e64d7367883359e6d0bc6ef3cdae61e28dee8d9501424d0ebd95e7
0:15-07-04 07:12:29 [python-core] Cache_key is python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5
0:15-07-04 07:12:29 [linux-armv8l64-generic] Cache_key is linux-armv8l64-generic.91b1c8f2143a0f16a296f0bfa7e311ab6f52e083b0956dd9681b3cf3db2de88b
0:15-07-04 07:12:29 [bsp-armv8l64-generic] Cache_key is bsp-armv8l64-generic.dbef88663d503b33f76fb90cd5ad2156509a2e95a6f464cd8877513b56ff1101
0:15-07-04 07:12:29 [distcc] Cache_key is distcc.390081bb1f0ed8d838d2aedb5ad8cc7714da8051e5332dbfa16dea7ce5484835
0:15-07-04 07:12:29 [file] Cache_key is file.7cf8771d5052b4f8551e4b476a31dee3d89dc273c37e766c80e8e1b9f93fdfc4
0:15-07-04 07:12:29 [gdb] Cache_key is gdb.1d11228e128380ce46bd8a0a3cf32fadcde0e7c9e6ce7bd08080908385de3805
0:15-07-04 07:12:29 [linux-user-chroot] Cache_key is linux-user-chroot.8bb7175af83dbc51558cddf9b3bbc93f0d888a6307f9cef003ac0ac798b53b98
0:15-07-04 07:12:29 [lsof] Cache_key is lsof.336c789b7101d1faf79c93217a89e69b9300a31376b4bc775900807ffcc524f8
0:15-07-04 07:12:29 [strace] Cache_key is strace.a6218cfcc7798468a1cc17e906ab8a3927ca25991a5a07dad6b81ceafc7cb399
0:15-07-04 07:12:29 [vala-bootstrap] Cache_key is vala-bootstrap.12d7df4a2d238363158fbc84f1fa9a1a07bf5b76d5f1fb15e7570b6e5be9421a
0:15-07-04 07:12:29 [vala] Cache_key is vala.67761eb25ddc8102a0245dc78957e5a55d6cbbf12739a111f064ebbc8cca582f
0:15-07-04 07:12:29 [u-boot] Cache_key is u-boot.ec9986f826bd133ec6ee440c0ba978a1650178d4bcbe7a915a903bfa5924186d
0:15-07-04 07:12:29 [kexec-tools] Cache_key is kexec-tools.d3c8dfdd51b8b84fb3019ea6f0ba4039b3b4142a5b7fcd9bcdf86bc4602fe3bf
0:15-07-04 07:12:29 [device-tree-compiler] Cache_key is device-tree-compiler.b05118d1714601b8cc6f9a5a7f6a9ec274a938e2c904363ce0f973ba517c041a
0:15-07-04 07:12:29 [sudo] Cache_key is sudo.6fc6467df9f9ca96a17a828bb7e8b6e5b4886fe567fa3acfee810a50ca5a064f
0:15-07-04 07:12:29 [procps-ng] Cache_key is procps-ng.195f801fc1d909bd561814c235ccec040af4874a1d71be69fef5c7ee76018706
0:15-07-04 07:12:29 [ipmitool] Cache_key is ipmitool.ac7544c8a829692862044c6957434a19ee265f83e0d286ddb95de8209f12c525
0:15-07-04 07:12:29 [parted] Cache_key is parted.3c1cd3817b50dec3beed12190bb75121069fbe08aae04f5a930bfdb086cef337
0:15-07-04 07:12:29 [zip] Cache_key is zip.432c58de3a98f91cb895a5d93e62fed05b07f2c69bf0fe66e19d34f58649518a
0:15-07-04 07:12:29 [tools] Cache_key is tools.37037d7c27e1ec54728078a1d7ef5dead71c693a5bbd1401260fd1bf5061557b
0:15-07-04 07:12:29 [python-coveragepy] Cache_key is python-coveragepy.020c49424325293f65060c11fe17a28a0206f137fb85249bb1a64b1d7155c669
0:15-07-04 07:12:29 [python-coverage-test-runner] Cache_key is python-coverage-test-runner.b6b09257b838dbda6e9f4e3a277cabf5b7429d9be09fa990bfbe51db5e68dc81
0:15-07-04 07:12:29 [cliapp] Cache_key is cliapp.e68d7d362718a32abf93251638ce0fafe6f461e101cb4e05455a58938ca70e2c
0:15-07-04 07:12:29 [python-cliapp] Cache_key is python-cliapp.4be72763c46ba95ff15cc2a413d6c86f1038c44cceba7b907a096bd15f6da04b
0:15-07-04 07:12:29 [pygobject] Cache_key is pygobject.58ff8fb75318021c2abbd1cc1e9d75d04d096a65f4a9f8e0a615f0bfdc1013af
0:15-07-04 07:12:29 [python-pygobject] Cache_key is python-pygobject.c096bf161a5d048df9260c5f025747a04033fd36c77749d888cf7c787497c561
0:15-07-04 07:12:29 [bottle] Cache_key is bottle.7cffc5c5fa9ecb30e0e2b2ccde456af91462749e9d122ce0318dff1bdba6a6ed
0:15-07-04 07:12:29 [flup] Cache_key is flup.1258d1c11464ab069502d26fe084e8f440144e08d84b0d8389a5756a8ad215b8
0:15-07-04 07:12:29 [python-wsgi] Cache_key is python-wsgi.a3892e4f80115ebf50af1f647e3588f8772944ca31bd2ff7f23454e384785a80
0:15-07-04 07:12:29 [libsoup] Cache_key is libsoup.4da268817c9ad0278a9b13c5939ff818cd481e5cf69fcfbe861dd5fdd3e652c1
0:15-07-04 07:12:29 [libsoup-common] Cache_key is libsoup-common.fc8202498804601440068b87403b4350bb5b930aec1618f30cb3d1f4be188d7d
0:15-07-04 07:12:29 [libgsystem] Cache_key is libgsystem.fac16c365835bc12f1a053675690c70b4f829b6ceff093cd74c7e90b389da506
0:15-07-04 07:12:29 [ostree] Cache_key is ostree.00701e7592a3fbd0015973b7f1f91f0a721209cd64613285c7bf37c19437d893
0:15-07-04 07:12:29 [ostree-core] Cache_key is ostree-core.59d09c4a882ef1bd276c0c3c352fcd6ae2dd66668b2f62e9809effd0509a9b81
0:15-07-04 07:12:29 [python-ttystatus] Cache_key is python-ttystatus.2ff24bbbe8ad453552e4ba424aa26e63b5d058dd28bfab54348d2db941e2b717
0:15-07-04 07:12:29 [git-fat] Cache_key is git-fat.0443e6ab5f1b9a7fc0b538fc579a4a63d66377fd49c09c324d31607ac0f1ae8f
0:15-07-04 07:12:29 [pyfilesystem] Cache_key is pyfilesystem.018ffda87fb4839d09edc5e4017368ddb57cf913c1947d89f7b1dfe2665fef2d
0:15-07-04 07:12:29 [cmdtest] Cache_key is cmdtest.23c2e149bc9b6675d010a60e913a311eaf1d993fc2c1f4cd5b267db9e395a68b
0:15-07-04 07:12:29 [pylru] Cache_key is pylru.aedbd65fe5e0b029d4ba5a3a4bcb2684357a03a6cae771852df0582ca7071fbf
0:15-07-04 07:12:29 [morph] Cache_key is morph.2b155dc96275ae5330b99422ae51d11fd0bbc8aded401e700df3bdaab8d21c8c
0:15-07-04 07:12:29 [morph-utils] Cache_key is morph-utils.12161b7e957cf1e6339557bd5b656a86c7e34adc0aeaad84c3c9f6c0cafdf544
0:15-07-04 07:12:29 [libevent] Cache_key is libevent.7241487e4a03dce86b0fcfed4d6a3f44241bc07aefd9df8e3ed839182e36f009
0:15-07-04 07:12:29 [ti-rpc] Cache_key is ti-rpc.cc5664bb66a82802ff7f433182d98734c9833ebec66b9094bfd3a49e61435b67
0:15-07-04 07:12:29 [rpcbind] Cache_key is rpcbind.37783f8df483d35c76b17f5a7970a48a4bdc019a2e269e8bc6b2e2928f893c69
0:15-07-04 07:12:29 [nfs-utils] Cache_key is nfs-utils.1b7947749d6f13b14b6b8f174878c5f00f877866678b4008a74c329681eea7a6
0:15-07-04 07:12:29 [nfs] Cache_key is nfs.93c62fece6af784438eb2275e8ae4b7e751e296d5870b3a4bf41f49ba84e20c6
0:15-07-04 07:12:29 [pycrypto] Cache_key is pycrypto.5fd91e9f601ee2a8e9c6e267d7e50a228ccbd20372b9294839bfb54379b9a93e
0:15-07-04 07:12:29 [ecdsa] Cache_key is ecdsa.fa57f69c580f05f4a81b3f8696c3a45442e4eadf49874b315c4cb415cb785425
0:15-07-04 07:12:29 [paramiko] Cache_key is paramiko.7b8ba7c2e24fc8b691305fa568f0a218eec29872f478b86582649e934bbde3d8
0:15-07-04 07:12:29 [markupsafe] Cache_key is markupsafe.63a74b7183005fcfa3392f091d4a847d005819d7f8002f3d115ca152d01d77c5
0:15-07-04 07:12:29 [jinja2] Cache_key is jinja2.6da12aa52b4ace812db43b1895d90ef5c989c5ad5d390aea667bbe6f445e1be6
0:15-07-04 07:12:29 [python-json-pointer] Cache_key is python-json-pointer.739804d03a05ac75d406492663cc9bf1fd42c2c16798c5788f618b3a17e22a51
0:15-07-04 07:12:29 [python-json-patch] Cache_key is python-json-patch.2bc79dda70484a60be6ac56437b38fab902dc6294e2053974505ceda2ada3306
0:15-07-04 07:12:29 [python-prettytable] Cache_key is python-prettytable.ddfe89079af405b9546a566ec78b78025e79cbaf76a13a916a937e9a153bb702
0:15-07-04 07:12:29 [configobj] Cache_key is configobj.973d9a4606f2df5b42507dd02255057b1684596a911bd78b5f7a0389f0bb600c
0:15-07-04 07:12:29 [python-mimeparse] Cache_key is python-mimeparse.4bef21b9851ba2f9a6c7bcd766b2fa650d42526fbc3697962c0fbcf102864fd3
0:15-07-04 07:12:29 [kazoo] Cache_key is kazoo.ff42435250103f4bafae20950b63f34842f85550441a5b205756ef81f4afc299
0:15-07-04 07:12:29 [webob] Cache_key is webob.a7ef225476d075db63b97a242aa5278db5594658d31f7b053d2fb36668369b12
0:15-07-04 07:12:29 [python-decorator] Cache_key is python-decorator.c6a73e9a251184e3e0122939507777a6e59eb182ff23079b35dce95922f863a9
0:15-07-04 07:12:29 [networkx] Cache_key is networkx.083ee9dce99d41e057a18f476458208cd73079e07781b0e08c59e0aee0941efc
0:15-07-04 07:12:29 [boto] Cache_key is boto.19f5c5065af01e6ffe59aa4d08b2a0123d5ff9a4c4b4eea9764a87138674885f
0:15-07-04 07:12:29 [python-common] Cache_key is python-common.c21fc779cc7d2132ae5d2920abd7ed81d8c3024355a551b0b6208fad458a3e3c
0:15-07-04 07:12:29 [ansible] Cache_key is ansible.3ddcfe487123812fb3a0a44db2d71798a2f1c4812b274d58f3f09f34455c807d
0:15-07-04 07:12:29 [openstack-ansible-modules] Cache_key is openstack-ansible-modules.cf7805d8d98589dfd1dbe00aeb8f3b90a7e62be24ddc1c5aeac99a0915c06d1a
0:15-07-04 07:12:29 [ansible] Cache_key is ansible.febe4ccce3d0db5c539905cc0599eb477c066b95dd7d0fce8736e7027085e2cf
0:15-07-04 07:12:29 [python-cheetah] Cache_key is python-cheetah.80db2fa1cf4d5a2355137ce2fc9b42704407fb53f844b86b16e6accc32b26384
0:15-07-04 07:12:29 [cloud-init] Cache_key is cloud-init.21aa1361afe8d4c29bc0d2afb042267d021fcfe2762fdcdccd441737349d9b79
0:15-07-04 07:12:29 [cloudinit-support] Cache_key is cloudinit-support.19ff5f9f415e42590f273e6b7baa3ca024ea72e128f6805178f2e264c664cc2a
0:15-07-04 07:12:29 [pycparser] Cache_key is pycparser.3b495282f2ab4e72e9c1c230fcff94e217c9c1a8821e403a1887d6668121e1a0
0:15-07-04 07:12:29 [cffi] Cache_key is cffi.80c680d4ec53aa2898bc3f0d921be85dc2ef5deadd6ddf13ff0184df6b67219e
0:15-07-04 07:12:29 [pytz] Cache_key is pytz.41a9bde65ad610ffbe4fb09dea57e83bcf45fb3e28a8d69f058e3f85c8372fe9
0:15-07-04 07:12:29 [babel] Cache_key is babel.bf84774f58947883fa275bb57b3bd79fd34f06ddc9fbd597d07195ac1574888f
0:15-07-04 07:12:29 [enum34] Cache_key is enum34.7f834d9e5386d1ceaa3e26d0c133544ee8a1cc9519afdbe71d6a80b1780b0fa1
0:15-07-04 07:12:29 [pyasn1] Cache_key is pyasn1.fd448303368211e9dfa69f42465dfe20672def8973448cd96c7121862983b536
0:15-07-04 07:12:29 [cryptography] Cache_key is cryptography.7116cd0b068faaf0dd62338507d32ed0277b67b782c1876c1b420fb2b2f9b8a2
0:15-07-04 07:12:29 [pyiso8601] Cache_key is pyiso8601.b826dfa76c144de04d893a7a6ee9eaf7979227e2335cd674cfab4d165543e55a
0:15-07-04 07:12:29 [netaddr] Cache_key is netaddr.0c7a436d7bb0a8562c6b3e6489780432653f141777627a67e879c6bac07d30d0
0:15-07-04 07:12:29 [stevedore] Cache_key is stevedore.81f08c844e168a47a1e15467db1978d092b3091345e78a98ba94e5830ffdf403
0:15-07-04 07:12:29 [oslo-config] Cache_key is oslo-config.1cc977a7e9a7d9dd39726ae41f1a6dd39c1aadde93bcd374337837ac7d700563
0:15-07-04 07:12:29 [pyopenssl] Cache_key is pyopenssl.14ab614fc0906b18f2d4108aa2a21771200e150e820c19f0216e47130da08b7e
0:15-07-04 07:12:29 [oslo-i18n] Cache_key is oslo-i18n.585ce42bfe6bf9a464f0821792a44656e353a07a4f467c8f7fbe618334d11d54
0:15-07-04 07:12:29 [netifaces] Cache_key is netifaces.305a11e755bc4847176c36d155b206247f4f36b6cd3538dbcfaa32cfce52ca52
0:15-07-04 07:12:29 [oslo-utils] Cache_key is oslo-utils.67d871a165a343d32e360e5bdfd82cc067ae090fcb0ac0a2b997afc70a42828f
0:15-07-04 07:12:29 [futures] Cache_key is futures.101c9216a76acc7cd8cfecab5dc3e8388ef49b1d8086383090e06c863ff12579
0:15-07-04 07:12:29 [oslo-serialization] Cache_key is oslo-serialization.d592329ab68412853dc8292139235c5c0e894787cae0af9392d319a85137a292
0:15-07-04 07:12:29 [jsonschema] Cache_key is jsonschema.ab7bfe0bb337f26b4d4f74cd765273219d612bb4da0df2509828f61a1be7340e
0:15-07-04 07:12:29 [simplejson] Cache_key is simplejson.59ea6ffd1a3e4383d9113d5397209939ad98695fd078c02a2b46389b4b82192f
0:15-07-04 07:12:29 [greenlet] Cache_key is greenlet.c2d0c3b6cc217416c64cf4de7601aa0dee3e9d4657fa8cc2d767ec4f1c457b17
0:15-07-04 07:12:29 [eventlet] Cache_key is eventlet.e62b7eaaf4606761b176ce952c5aed72f24f817f2a9744719fcdfa86abbc51d0
0:15-07-04 07:12:29 [pastedeploy] Cache_key is pastedeploy.0c611592d78b997aa159a7f43448a7b3da7067234c83cefe3717c6a8a5ddc5d0
0:15-07-04 07:12:29 [openstack-common] Cache_key is openstack-common.30164cbea78dfb628bd2893e866c77b7a9497848cd15fed0c86b33cad3677502
0:15-07-04 07:12:29 [warlock] Cache_key is warlock.afbec457e78114030f7f83310eb19f75ffe678fd424849e6c73fb47f55676a12
0:15-07-04 07:12:29 [python-keystoneclient] Cache_key is python-keystoneclient.6bb5b76e3298918985261fe908ebd605aefcace468334d64f5e23b0935d1bcaa
0:15-07-04 07:12:29 [python-glanceclient] Cache_key is python-glanceclient.f7757a44b8e0ab6244c55ba8f9fc849d7602b1351da2c59f870eac7093d1775a
0:15-07-04 07:12:29 [python-novaclient] Cache_key is python-novaclient.68d38613c70d0870b3ec6d32b79ee9e3fe8026588764e786c531c4ddfc52d12a
0:15-07-04 07:12:29 [python-swiftclient] Cache_key is python-swiftclient.c8e2b5051b6f4b1818f620bc9dcb3537395c8d3ec2434ff6d96b7ad637b5e8e6
0:15-07-04 07:12:29 [python-troveclient] Cache_key is python-troveclient.d8f591435aa550d40d891606a0259fbb9334f9216c6e8860064b6e5eb3b4a04a
0:15-07-04 07:12:29 [python-cinderclient] Cache_key is python-cinderclient.74b51dbf7bd26f93457a9d87253cb11384685b18799e3d54fb7ba62185126c42
0:15-07-04 07:12:29 [pyparsing] Cache_key is pyparsing.d38af69c1b0118c13745c94e0476ea22530e1bd258ce4a2dc9b2bb3714238687
0:15-07-04 07:12:29 [cmd2] Cache_key is cmd2.34880f0bd31c6a476193d25fc70d43556f9cbb3cc710ab1c93e5085b5a952f85
0:15-07-04 07:12:29 [cliff] Cache_key is cliff.cfd57986120165043ca15df92851893f9b92518bb58607f1f78258031dd55e72
0:15-07-04 07:12:29 [tablib] Cache_key is tablib.9473a519efc458a85436fd798eabdd26cc1de48145f61e57fbc9181fd254ee37
0:15-07-04 07:12:29 [cliff-tablib] Cache_key is cliff-tablib.28a228e57091a49776042febd66241b637e5d4d922986b7fdfaf404c7135759f
0:15-07-04 07:12:29 [python-neutronclient] Cache_key is python-neutronclient.0c74432ca56fa957197f19157a2b580fc1d2df224766fc24efa30abae28dceaa
0:15-07-04 07:12:29 [python-ceilometerclient] Cache_key is python-ceilometerclient.4312e5e46c81fc8cc450a59f80d9b29bcedd6dd077d2b57732df33b456795528
0:15-07-04 07:12:29 [python-heatclient] Cache_key is python-heatclient.f9a6f969204ab5ec1eaa60d51e33dd9672de80a421110db25edccae259676a0c
0:15-07-04 07:12:29 [python-designateclient] Cache_key is python-designateclient.c07cff92e403bd29cefc6b89b5e474621d011169afaa8355a37faea69fa8b566
0:15-07-04 07:12:29 [python-barbicanclient] Cache_key is python-barbicanclient.fcbe3218cf46af229a2527b492a67ad1f2a2872ec0c1c9be0f0f7ea289ab3e06
0:15-07-04 07:12:29 [python-saharaclient] Cache_key is python-saharaclient.0c4c830fe12804539c228ed95953a730183d63d8e54f433590cddc2e5f2e0f73
0:15-07-04 07:12:29 [python-ironicclient] Cache_key is python-ironicclient.431e513bdcf022de4af308bcad3c12e02faef379879284aa6139e01adc657d8b
0:15-07-04 07:12:29 [argparse] Cache_key is argparse.f5a24e9afaa9a0eb11313545176c73cc9126e42247730a72b3466cadf9172d8c
0:15-07-04 07:12:29 [python-openstackclient] Cache_key is python-openstackclient.996f7770f98347e6cde0706f9b975147db4f0df2bc2ce783230a98ff92c00050
0:15-07-04 07:12:29 [os-client-config] Cache_key is os-client-config.7c5e69ba10b2b6fcad118a21ba8ec7408a6a26e961df1ef93ddec5c2890286ee
0:15-07-04 07:12:29 [appdirs] Cache_key is appdirs.ed4357439d3ffd23ca1c989f76ae9d54a3350283a7b3e33c5209642f9280f825
0:15-07-04 07:12:29 [openstack-clients] Cache_key is openstack-clients.7fb649e915d927f8b8f6c1e424d2f3d5fde5a0860357f6ef7397df3204cf7ecd
0:15-07-04 07:12:29 [nano] Cache_key is nano.4ecc16deda24f4ed3ea7f53dfa5bf87606c60ed6c8ccabf0768d885a7b9c3993
0:15-07-04 07:12:29 [vim] Cache_key is vim.9f8a7b5094980d84d48ea2ac08208ac0bd850ece27a4fea91ccde22c0c25c292
0:15-07-04 07:12:29 [pv] Cache_key is pv.5b2f9392189bf0fe6b6cfc8a0191b1b6dcb360d015ef97035383af6269da6826
0:15-07-04 07:12:29 [screen] Cache_key is screen.f736612d9e422db468ccb8cac8b3fc7c199781ced6d609f6bc4bbeb106f60d9c
0:15-07-04 07:12:29 [less] Cache_key is less.03cd392527f5298c5b86a5149327f4706dfbc7d7781504df05d089405b3d76b9
0:15-07-04 07:12:29 [git-review] Cache_key is git-review.fbbf2d79ce8a54beb98a519d15bb3eaa7d1b1e4100a526a31212dabbe429f3b3
0:15-07-04 07:12:29 [devtools] Cache_key is devtools.79bad0caa1afdef34470bb2d57565a5d922555015bb4af7e8c0e132baa218b74
0:15-07-04 07:12:29 [build-system-armv8l64] Cache_key is build-system-armv8l64.b60ff4e7ee165ce09e19b64f2ac3b90a750c44a5dbd9bef0c6b0fdf3a64307cb
0:15-07-04 07:12:29 [CACHE-KEYS] Elapsed time 00:00:00
0:15-07-04 07:12:29 [systems/build-system-armv8l64.morph] Sandbox using <module 'sandboxlib.chroot' from '/usr/local/lib/python2.7/dist-packages/sandboxlib/chroot.pyc'> 
0:15-07-04 07:12:29 [INSTANCES] I am instance 0
0:15-07-04 07:12:29 [build-system-armv8l64] Starting assembly 
0:15-07-04 07:12:29 [build-essential] Starting assembly 
0:15-07-04 07:12:29 [zlib] Starting assembly 
0:15-07-04 07:12:29 [stage2-fhs-dirs] Starting assembly 
0:15-07-04 07:12:29 [1/232/232] [stage2-fhs-dirs] Start build 
0:15-07-04 07:12:29 [1/232/232] [stage2-fhs-dirs] Git checkout baserock:baserock/fhs-dirs in /root/.cache/ybd/tmp/tmpObGT5k/stage2-fhs-dirs.build 
0:15-07-04 07:12:29 [1/232/232] [stage2-fhs-dirs] Upstream version 1218cbd3 (No tag found) 
0:15-07-04 07:12:29 [1/232/232] [stage2-fhs-dirs] Logging build commands to /root/.cache/ybd/artifacts/stage2-fhs-dirs.26c4d487d57d7d53764405cb21dde54d9fb53868e086723da75d261e9432ad10.build-log.0 
0:15-07-04 07:12:29 [1/232/232] [stage2-fhs-dirs] Running install-commands
0:15-07-04 07:12:29 [1/232/232] [stage2-fhs-dirs] Running command:
sh ./create-fhs-dirs "$DESTDIR" 
WARNING: Unable to set mounts=isolated in a chroot sandbox, falling back to mounts=undefined
WARNING: Unable to set network=isolated in a chroot sandbox, falling back to network=undefined
WARNING: Unable to set filesystem_writable_paths=['/root/.cache/ybd/tmp/tmpObGT5k/stage2-fhs-dirs.build', '/root/.cache/ybd/tmp/tmpObGT5k/stage2-fhs-dirs.inst', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 07:12:29 [1/232/232] [stage2-fhs-dirs] Running command:
rmdir "$DESTDIR/bin" 
0:15-07-04 07:12:30 [1/232/232] [stage2-fhs-dirs] Running command:
ln -s "$PREFIX/bin" "$DESTDIR/bin" 
0:15-07-04 07:12:30 [1/232/232] [stage2-fhs-dirs] Running command:
install -m 644 passwd "$DESTDIR/etc/passwd" 
0:15-07-04 07:12:30 [1/232/232] [stage2-fhs-dirs] Running command:
install -m 600 shadow "$DESTDIR/etc/shadow" 
0:15-07-04 07:12:30 [1/232/232] [stage2-fhs-dirs] Running command:
install -m 644 interfaces "$DESTDIR/etc/network/interfaces" 
0:15-07-04 07:12:30 [1/232/232] [stage2-fhs-dirs] Running command:
install -m 644 group "$DESTDIR/etc/group" 
0:15-07-04 07:12:30 [1/232/232] [stage2-fhs-dirs] Running command:
install -m 644 issue "$DESTDIR/etc/issue" 
0:15-07-04 07:12:30 [1/232/232] [stage2-fhs-dirs] Running command:
install -m 644 services "$DESTDIR/etc/services" 
0:15-07-04 07:12:30 [1/232/232] [stage2-fhs-dirs] Running command:
install -m 644 protocols "$DESTDIR/etc/protocols" 
0:15-07-04 07:12:30 [1/232/232] [stage2-fhs-dirs] Running command:
echo baserock > "$DESTDIR"/etc/hostname 
0:15-07-04 07:12:30 [1/232/232] [stage2-fhs-dirs] Running strip-commands
0:15-07-04 07:12:30 [1/232/232] [stage2-fhs-dirs] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 07:12:30 [1/232/232] [stage2-fhs-dirs] Creating device node /root/.cache/ybd/tmp/tmpObGT5k/stage2-fhs-dirs.inst/.//dev/console
0:15-07-04 07:12:30 [1/232/232] [stage2-fhs-dirs] Creating device node /root/.cache/ybd/tmp/tmpObGT5k/stage2-fhs-dirs.inst/.//dev/full
0:15-07-04 07:12:30 [1/232/232] [stage2-fhs-dirs] Creating device node /root/.cache/ybd/tmp/tmpObGT5k/stage2-fhs-dirs.inst/.//dev/null
0:15-07-04 07:12:30 [1/232/232] [stage2-fhs-dirs] Creating device node /root/.cache/ybd/tmp/tmpObGT5k/stage2-fhs-dirs.inst/.//dev/urandom
0:15-07-04 07:12:30 [1/232/232] [stage2-fhs-dirs] Creating device node /root/.cache/ybd/tmp/tmpObGT5k/stage2-fhs-dirs.inst/.//dev/zero
0:15-07-04 07:12:30 [1/232/232] [stage2-fhs-dirs] Creating cache artifact 
0:15-07-04 07:12:30 [1/232/232] [stage2-fhs-dirs] Now cached as stage2-fhs-dirs.26c4d487d57d7d53764405cb21dde54d9fb53868e086723da75d261e9432ad10
0:15-07-04 07:12:30 [1/232/232] [stage2-fhs-dirs] Cleaned up /root/.cache/ybd/tmp/tmpObGT5k
0:15-07-04 07:12:30 [1/232/232] [stage2-fhs-dirs] Elapsed time 00:00:00
0:15-07-04 07:12:30 [1/232/232] [zlib] Installing stage2-fhs-dirs.26c4d487d57d7d53764405cb21dde54d9fb53868e086723da75d261e9432ad10 
0:15-07-04 07:12:30 [1/232/232] [stage2-gcc] Starting assembly 
0:15-07-04 07:12:30 [1/232/232] [stage2-gcc-fixed-headers] Starting assembly 
0:15-07-04 07:12:30 [1/232/232] [stage2-glibc] Starting assembly 
0:15-07-04 07:12:30 [1/232/232] [stage1-binutils] Starting assembly 
0:15-07-04 07:12:30 [2/232/232] [stage1-binutils] Start build 
0:15-07-04 07:12:34 [2/232/232] [stage1-binutils] Git checkout upstream:binutils-tarball in /root/.cache/ybd/tmp/tmpMWcprL/stage1-binutils.build 
0:15-07-04 07:12:34 [2/232/232] [stage1-binutils] Upstream version 5500a97a binutils-2.25 (binutils-2.25 + 0 commits) 
0:15-07-04 07:12:35 [2/232/232] [stage1-binutils] Logging build commands to /root/.cache/ybd/artifacts/stage1-binutils.a9347f625e7d06c0e674192701329bfec799ee307be2e60d46877b762ce63f86.build-log.0 
0:15-07-04 07:12:35 [2/232/232] [stage1-binutils] Running configure-commands
0:15-07-04 07:12:35 [2/232/232] [stage1-binutils] Running command:
./configure --prefix="$PREFIX" --disable-nls --disable-werror \
  --build=$(sh config.guess) \
  --host=$(sh config.guess) \
  --target=$TARGET_STAGE1 \
  --with-sysroot=/nonexistentdir --with-lib-path="=$PREFIX/lib:=$PREFIX/lib64"
 
WARNING: Unable to set filesystem_writable_paths=['/root/.cache/ybd/tmp/tmpMWcprL/stage1-binutils.build', '/root/.cache/ybd/tmp/tmpMWcprL/stage1-binutils.inst', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 07:12:39 [2/232/232] [stage1-binutils] Running build-commands
0:15-07-04 07:12:39 [2/232/232] [stage1-binutils] Running command:
make 
0:15-07-04 07:13:56 [2/232/232] [stage1-binutils] Running install-commands
0:15-07-04 07:13:56 [2/232/232] [stage1-binutils] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 07:14:00 [2/232/232] [stage1-binutils] Running strip-commands
0:15-07-04 07:14:00 [2/232/232] [stage1-binutils] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 07:14:00 [2/232/232] [stage1-binutils] Creating cache artifact 
0:15-07-04 07:15:05 [2/232/232] [stage1-binutils] Now cached as stage1-binutils.a9347f625e7d06c0e674192701329bfec799ee307be2e60d46877b762ce63f86
0:15-07-04 07:15:08 [2/232/232] [stage1-binutils] Cleaned up /root/.cache/ybd/tmp/tmpMWcprL
0:15-07-04 07:15:08 [2/232/232] [stage1-binutils] Elapsed time 00:02:37
0:15-07-04 07:15:08 [2/232/232] [stage2-glibc] Installing stage1-binutils.a9347f625e7d06c0e674192701329bfec799ee307be2e60d46877b762ce63f86 
0:15-07-04 07:15:09 [2/232/232] [stage2-linux-api-headers] Starting assembly 
0:15-07-04 07:15:09 [2/232/232] [stage2-linux-api-headers] Installing stage1-binutils.a9347f625e7d06c0e674192701329bfec799ee307be2e60d46877b762ce63f86 
0:15-07-04 07:15:09 [2/232/232] [stage1-gcc] Starting assembly 
0:15-07-04 07:15:09 [2/232/232] [stage1-gcc] Installing stage1-binutils.a9347f625e7d06c0e674192701329bfec799ee307be2e60d46877b762ce63f86 
0:15-07-04 07:15:09 [3/232/232] [stage1-gcc] Start build 
0:15-07-04 07:15:43 [3/232/232] [stage1-gcc] Git checkout upstream:gcc-tarball in /root/.cache/ybd/tmp/tmpXQIEou/stage1-gcc.build 
0:15-07-04 07:15:44 [3/232/232] [stage1-gcc] Upstream version b3c9b176 (No tag found) 
0:15-07-04 07:15:50 [3/232/232] [stage1-gcc] Logging build commands to /root/.cache/ybd/artifacts/stage1-gcc.da0a2535b0f62a86abdd1412c3110d21d0cf0760a3b695fe5e53079a7667d8bd.build-log.0 
0:15-07-04 07:15:50 [3/232/232] [stage1-gcc] Running configure-commands
0:15-07-04 07:15:50 [3/232/232] [stage1-gcc] Running command:
sed -i -e '/k prot/a \
gcc_cv_libc_provides_ssp=yes
' gcc/configure
 
WARNING: Unable to set filesystem_writable_paths=['/root/.cache/ybd/tmp/tmpXQIEou/stage1-gcc.build', '/root/.cache/ybd/tmp/tmpXQIEou/stage1-gcc.inst', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 07:15:50 [3/232/232] [stage1-gcc] Running command:
mkdir o 
0:15-07-04 07:15:50 [3/232/232] [stage1-gcc] Running command:
case "$MORPH_ARCH" in
    armv7lhf) ARCH_FLAGS="--with-arch=armv7-a \
                          --with-cpu=cortex-a9 \
                          --with-tune=cortex-a9 \
                          --with-fpu=vfpv3-d16 \
                          --with-float=hard" ;;
    armv7*)   ARCH_FLAGS="--with-arch=armv7-a" ;;
esac

cd o && ../configure                                        \
          $ARCH_FLAGS                                       \
          --build=$(sh ../config.guess)                     \
          --host=$(sh ../config.guess)                      \
          --target=$TARGET_STAGE1                           \
          --prefix="$PREFIX"                                \
  `# [1]` --libdir="$PREFIX/lib"                            \
  `# [2]` --with-sysroot=/nonexistentdir                    \
          --with-newlib                                     \
  `# [3]` --with-local-prefix="$PREFIX"                     \
  `# [4]` --with-native-system-header-dir="$PREFIX/include" \
          --without-headers                                 \
          --disable-nls                                     \
          --disable-shared                                  \
          --disable-multilib                                \
  `# [5]` --disable-decimal-float                           \
  `# [5]` --disable-threads                                 \
  `# [5]` --disable-libatomic                               \
  `# [5]` --disable-libgomp                                 \
  `# [5]` --disable-libitm                                  \
  `# [5]` --disable-libquadmath                             \
  `# [5]` --disable-libsanitizer                            \
  `# [5]` --disable-libssp                                  \
  `# [5]` --disable-libvtv                                  \
  `# [5]` --disable-libcilkrts                              \
  `# [5]` --disable-libstdc++-v3                            \
          --enable-languages=c,c++
 
0:15-07-04 07:15:55 [3/232/232] [stage1-gcc] Running build-commands
0:15-07-04 07:15:55 [3/232/232] [stage1-gcc] Running command:
# GCC is not passing the correct host/target flags to GMP's configure
# script, which causes it to not use the machine-dependent code for
# the platform and use the generic one instead.  However, the generic
# code results on an undefined reference to `__gmpn_invert_limb' in
# ARMv7.  Fix the invocation of GMP's configure script so that GMP can
# use the machine-dependent code.
case "$MORPH_ARCH" in
    armv5*)   sed -i "s/--host=none/--host=armv5/" o/Makefile
              sed -i "s/--target=none/--target=armv5/" o/Makefile ;;
    armv7*)   sed -i "s/--host=none/--host=armv7a/" o/Makefile
              sed -i "s/--target=none/--target=armv7a/" o/Makefile ;;
esac
cd o && make
 
0:15-07-04 07:19:56 [3/232/232] [stage1-gcc] Running install-commands
0:15-07-04 07:19:56 [3/232/232] [stage1-gcc] Running command:
cd o && make DESTDIR="$DESTDIR" install 
0:15-07-04 07:20:02 [3/232/232] [stage1-gcc] Running strip-commands
0:15-07-04 07:20:02 [3/232/232] [stage1-gcc] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 07:20:02 [3/232/232] [stage1-gcc] Creating cache artifact 
0:15-07-04 07:23:49 [3/232/232] [stage1-gcc] Now cached as stage1-gcc.da0a2535b0f62a86abdd1412c3110d21d0cf0760a3b695fe5e53079a7667d8bd
0:15-07-04 07:24:02 [3/232/232] [stage1-gcc] Cleaned up /root/.cache/ybd/tmp/tmpXQIEou
0:15-07-04 07:24:02 [3/232/232] [stage1-gcc] Elapsed time 00:08:52
0:15-07-04 07:24:02 [3/232/232] [stage2-linux-api-headers] Installing stage1-gcc.da0a2535b0f62a86abdd1412c3110d21d0cf0760a3b695fe5e53079a7667d8bd 
0:15-07-04 07:24:07 [4/232/232] [stage2-linux-api-headers] Start build 
0:15-07-04 07:24:32 [4/232/232] [stage2-linux-api-headers] Git checkout upstream:linux in /root/.cache/ybd/tmp/tmpFW5JVM/stage2-linux-api-headers.build 
0:15-07-04 07:24:33 [4/232/232] [stage2-linux-api-headers] Upstream version 39a88044 v4.0 (v4.0 + 0 commits) 
0:15-07-04 07:24:36 [4/232/232] [stage2-linux-api-headers] Logging build commands to /root/.cache/ybd/artifacts/stage2-linux-api-headers.2924aca6ee4871cf8d19ab77f35e1b5599bed435b02e4c884a9b59e34491d4bb.build-log.0 
0:15-07-04 07:24:36 [4/232/232] [stage2-linux-api-headers] Running install-commands
0:15-07-04 07:24:36 [4/232/232] [stage2-linux-api-headers] Running command:
case "$MORPH_ARCH" in
    armv5l)
        ARCH="arm" ;;
    armv7b|armv7l|armv7lhf)
        ARCH="arm" ;;
    armv8l64|armv8b64)
        ARCH="arm64" ;;
    x86_32)
        ARCH="i386" ;;
    x86_64)
        ARCH="x86_64" ;;
    ppc64)
        ARCH="powerpc" ;;
    *)
        echo "Error: unsupported Morph architecture: $MORPH_ARCH" >&2
        exit 1
esac
ARCH=$ARCH make INSTALL_HDR_PATH=dest headers_install
 
WARNING: Unable to set filesystem_writable_paths=['/root/.cache/ybd/tmp/tmpFW5JVM/stage2-linux-api-headers.build', '/root/.cache/ybd/tmp/tmpFW5JVM/stage2-linux-api-headers.inst', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 07:24:59 [4/232/232] [stage2-linux-api-headers] Running command:
install -d "$DESTDIR${PREFIX-/usr}/include" 
0:15-07-04 07:24:59 [4/232/232] [stage2-linux-api-headers] Running command:
cp -r dest/include/* "$DESTDIR/${PREFIX-/usr}/include" 
0:15-07-04 07:24:59 [4/232/232] [stage2-linux-api-headers] Running strip-commands
0:15-07-04 07:24:59 [4/232/232] [stage2-linux-api-headers] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 07:24:59 [4/232/232] [stage2-linux-api-headers] Creating cache artifact 
0:15-07-04 07:25:01 [4/232/232] [stage2-linux-api-headers] Now cached as stage2-linux-api-headers.2924aca6ee4871cf8d19ab77f35e1b5599bed435b02e4c884a9b59e34491d4bb
0:15-07-04 07:25:09 [4/232/232] [stage2-linux-api-headers] Cleaned up /root/.cache/ybd/tmp/tmpFW5JVM
0:15-07-04 07:25:09 [4/232/232] [stage2-linux-api-headers] Elapsed time 00:10:00
0:15-07-04 07:25:09 [4/232/232] [stage2-glibc] Installing stage2-linux-api-headers.2924aca6ee4871cf8d19ab77f35e1b5599bed435b02e4c884a9b59e34491d4bb 
0:15-07-04 07:25:10 [5/232/232] [stage2-glibc] Start build 
0:15-07-04 07:25:16 [5/232/232] [stage2-glibc] Git checkout upstream:glibc in /root/.cache/ybd/tmp/tmpyNiBqc/stage2-glibc.build 
0:15-07-04 07:25:16 [5/232/232] [stage2-glibc] Upstream version 4e42b5b8 glibc-2.21 (glibc-2.21 + 0 commits) 
0:15-07-04 07:25:17 [5/232/232] [stage2-glibc] Logging build commands to /root/.cache/ybd/artifacts/stage2-glibc.97579f45b08fa08c93d992552a17395e9641c7fe9a6bccfaee43a50a906c635b.build-log.0 
0:15-07-04 07:25:17 [5/232/232] [stage2-glibc] Running configure-commands
0:15-07-04 07:25:17 [5/232/232] [stage2-glibc] Running command:
mkdir o 
WARNING: Unable to set filesystem_writable_paths=['/root/.cache/ybd/tmp/tmpyNiBqc/stage2-glibc.build', '/root/.cache/ybd/tmp/tmpyNiBqc/stage2-glibc.inst', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 07:25:17 [5/232/232] [stage2-glibc] Running command:
case "$MORPH_ARCH" in
    armv7*)
        ARCH_FLAGS="--without-fp" ;;
esac

export CFLAGS="-O2 $CFLAGS"; export CXX=false; \
cd o && ../configure \
  $ARCH_FLAGS \
  --build=$(../scripts/config.guess) --host=$TARGET_STAGE1 \
  --prefix="$PREFIX" \
  `# [1]` --libdir="$PREFIX/lib" \
  `# [2]` --with-headers="$(pwd)/../../$PREFIX/include" \
  `# [3]` --disable-profile  --enable-kernel=2.6.25 \
  `# [4]` libc_cv_c_cleanup=yes libc_cv_ctors_header=yes \
          libc_cv_forced_unwind=yes libc_cv_ssp=no
 
0:15-07-04 07:25:20 [5/232/232] [stage2-glibc] Running build-commands
0:15-07-04 07:25:20 [5/232/232] [stage2-glibc] Running command:
cd o && make localtime=UTC 
0:15-07-04 07:28:28 [5/232/232] [stage2-glibc] Running install-commands
0:15-07-04 07:28:28 [5/232/232] [stage2-glibc] Running command:
cd o && make install_root="$DESTDIR" localtime=UTC install 
0:15-07-04 07:30:30 [5/232/232] [stage2-glibc] Running command:
mkdir -p "$DESTDIR/etc" 
0:15-07-04 07:30:30 [5/232/232] [stage2-glibc] Running command:
mkdir -p "$DESTDIR/etc/ld.so.conf.d" 
0:15-07-04 07:30:30 [5/232/232] [stage2-glibc] Running command:
cat <<EOF > ld.so.conf
/lib
/usr/lib
/usr/local/lib
include /etc/ld.so.conf.d/*.conf
EOF
 
0:15-07-04 07:30:30 [5/232/232] [stage2-glibc] Running command:
install -m 644 -o root -g root ld.so.conf "$DESTDIR/etc/ld.so.conf" 
0:15-07-04 07:30:30 [5/232/232] [stage2-glibc] Running command:
# Fix up GCC to handle the sysroot containing glibc being in a different
# location for each chunk build.
#
# For headers, it's enough to pass -B in the CPPFLAGS. This would work for
# the startup files (crt*.o) as well, except where libtool is involved (in
# which case it strips -B out of your LDFLAGS before calling GCC). We get
# around this by making GCC locate them relative to the environment variable
# STAGE2_SYSROOT, which we can then set along with CPPFLAGS in each stage 2
# chunk build.
#
# We also force the use of the program loader at PREFIX/lib/ld.so instead
# of its usual home in /lib or /lib64, which is necessary for the output of
# stage 2 to work as a chroot when building stage 3.

sysroot="$(dirname "$(pwd)")"
specs_dir="$(dirname $($TARGET_STAGE1-gcc --print-libgcc-file-name))"
target_specs_dir="$DESTDIR/${specs_dir#$sysroot}"
mkdir -p "$target_specs_dir"

$TARGET_STAGE1-gcc -dumpspecs |
    sed -e "s@[gMS]\?crt[1in].o%s@%:getenv(STAGE2_SYSROOT $PREFIX/lib/&)@g" \
        -e "s@/lib\(64\)\?/ld@$PREFIX/lib/ld@g" \
    > "$target_specs_dir/specs-for-sysroot"

# NASTY HACK #
# We create a symlink to the actual specs here, so that later the
# symlink can be replaced with a dangling link.
#
# This is necessary as we need to have gcc use its internal specs,
# which can differ to the specs generated by `gcc -dumpspecs`.
#
# The dangling symlink will not make it onto the final system, just
# like all other bootstrap only components.
ln -s specs-for-sysroot "$target_specs_dir/specs"
 
0:15-07-04 07:30:30 [5/232/232] [stage2-glibc] Running command:
install -d $DESTDIR/lib 
0:15-07-04 07:30:30 [5/232/232] [stage2-glibc] Running command:
cpu=$(echo $TARGET | cut -d '-' -f 1)
case "$cpu" in
x86_64)
  install -d "$DESTDIR/lib64"
  ln -s "$PREFIX/lib/ld-linux-x86-64.so.2" \
        "$DESTDIR/lib64/ld-linux-x86-64.so.2" ;;
ppc64)
  install -d "$DESTDIR/lib64"
  ln -s "$PREFIX/lib/ld64.so.1" \
        "$DESTDIR/lib64/ld64.so.1" ;;
*)
  loader=$(basename $(ls "$DESTDIR$PREFIX"/lib/ld-linux*))
  [ -z $loader ] && loader=$(basename $(ls "$DESTDIR$PREFIX"/lib/ld.so*))
  [ -z $loader ] && ( echo "Bug in stage2-glibc ld.so symlinks" ; exit 1 )
  ln -s "$PREFIX/lib/$loader" "$DESTDIR/lib/$loader"
esac
 
0:15-07-04 07:30:30 [5/232/232] [stage2-glibc] Running strip-commands
0:15-07-04 07:30:30 [5/232/232] [stage2-glibc] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 07:30:30 [5/232/232] [stage2-glibc] Creating cache artifact 
0:15-07-04 07:30:50 [5/232/232] [stage2-glibc] Now cached as stage2-glibc.97579f45b08fa08c93d992552a17395e9641c7fe9a6bccfaee43a50a906c635b
0:15-07-04 07:30:54 [5/232/232] [stage2-glibc] Cleaned up /root/.cache/ybd/tmp/tmpyNiBqc
0:15-07-04 07:30:54 [5/232/232] [stage2-glibc] Elapsed time 00:18:23
0:15-07-04 07:30:54 [5/232/232] [stage2-gcc-fixed-headers] Installing stage2-glibc.97579f45b08fa08c93d992552a17395e9641c7fe9a6bccfaee43a50a906c635b 
0:15-07-04 07:30:55 [6/232/232] [stage2-gcc-fixed-headers] Start build 
0:15-07-04 07:31:30 [6/232/232] [stage2-gcc-fixed-headers] Git checkout upstream:gcc-tarball in /root/.cache/ybd/tmp/tmpSTAPJK/stage2-gcc-fixed-headers.build 
0:15-07-04 07:31:31 [6/232/232] [stage2-gcc-fixed-headers] Upstream version b3c9b176 (No tag found) 
0:15-07-04 07:31:37 [6/232/232] [stage2-gcc-fixed-headers] Logging build commands to /root/.cache/ybd/artifacts/stage2-gcc-fixed-headers.ba44ea96e67b025734e0c5d7ed43db8868ce6080f4bbb3144bcd65d18794468b.build-log.0 
0:15-07-04 07:31:37 [6/232/232] [stage2-gcc-fixed-headers] Running install-commands
0:15-07-04 07:31:37 [6/232/232] [stage2-gcc-fixed-headers] Running command:
libgcc_dir=$(dirname $($TARGET_STAGE1-gcc -print-libgcc-file-name))
sysroot="$(dirname "$(pwd)")"
target_libgcc_dir="${libgcc_dir#$sysroot}"
mkdir -p "$DESTDIR/$target_libgcc_dir/include-fixed"
cat "gcc/limitx.h" "gcc/glimits.h" "gcc/limity.h" \
    >"$DESTDIR/$target_libgcc_dir/include-fixed/limits.h"
 
WARNING: Unable to set filesystem_writable_paths=['/root/.cache/ybd/tmp/tmpSTAPJK/stage2-gcc-fixed-headers.build', '/root/.cache/ybd/tmp/tmpSTAPJK/stage2-gcc-fixed-headers.inst', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 07:31:37 [6/232/232] [stage2-gcc-fixed-headers] Running strip-commands
0:15-07-04 07:31:37 [6/232/232] [stage2-gcc-fixed-headers] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 07:31:37 [6/232/232] [stage2-gcc-fixed-headers] Creating cache artifact 
0:15-07-04 07:31:37 [6/232/232] [stage2-gcc-fixed-headers] Now cached as stage2-gcc-fixed-headers.ba44ea96e67b025734e0c5d7ed43db8868ce6080f4bbb3144bcd65d18794468b
0:15-07-04 07:31:50 [6/232/232] [stage2-gcc-fixed-headers] Cleaned up /root/.cache/ybd/tmp/tmpSTAPJK
0:15-07-04 07:31:50 [6/232/232] [stage2-gcc-fixed-headers] Elapsed time 00:19:20
0:15-07-04 07:31:50 [6/232/232] [stage2-gcc] Installing stage2-gcc-fixed-headers.ba44ea96e67b025734e0c5d7ed43db8868ce6080f4bbb3144bcd65d18794468b 
0:15-07-04 07:31:51 [6/232/232] [stage2-libstdc++] Starting assembly 
0:15-07-04 07:31:51 [6/232/232] [stage2-libstdc++] Installing stage1-binutils.a9347f625e7d06c0e674192701329bfec799ee307be2e60d46877b762ce63f86 
0:15-07-04 07:31:51 [6/232/232] [stage2-libstdc++] Installing stage2-linux-api-headers.2924aca6ee4871cf8d19ab77f35e1b5599bed435b02e4c884a9b59e34491d4bb 
0:15-07-04 07:31:51 [6/232/232] [stage2-libstdc++] Installing stage2-glibc.97579f45b08fa08c93d992552a17395e9641c7fe9a6bccfaee43a50a906c635b 
0:15-07-04 07:31:51 [7/232/232] [stage2-libstdc++] Start build 
0:15-07-04 07:32:28 [7/232/232] [stage2-libstdc++] Git checkout upstream:gcc-tarball in /root/.cache/ybd/tmp/tmpulDTOm/stage2-libstdc++.build 
0:15-07-04 07:32:29 [7/232/232] [stage2-libstdc++] Upstream version b3c9b176 (No tag found) 
0:15-07-04 07:32:35 [7/232/232] [stage2-libstdc++] Logging build commands to /root/.cache/ybd/artifacts/stage2-libstdc++.355e45b6416c891e36565d0a4d52d91893d7be9bf7f549c1abffcf01f19f34ce.build-log.0 
0:15-07-04 07:32:35 [7/232/232] [stage2-libstdc++] Running configure-commands
0:15-07-04 07:32:35 [7/232/232] [stage2-libstdc++] Running command:
mkdir o 
WARNING: Unable to set filesystem_writable_paths=['/root/.cache/ybd/tmp/tmpulDTOm/stage2-libstdc++.build', '/root/.cache/ybd/tmp/tmpulDTOm/stage2-libstdc++.inst', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 07:32:35 [7/232/232] [stage2-libstdc++] Running command:
export STAGE2_SYSROOT="$(dirname $(pwd))"
# -fPIC must be given, otherwise it will not be possible to create
# shared libraries linked to libstdc++
export CPPFLAGS="--sysroot=$STAGE2_SYSROOT -fPIC"
export LDFLAGS="--sysroot=$STAGE2_SYSROOT"
cd o && ../libstdc++-v3/configure                           \
          --build=$(sh ../config.guess)                     \
          --host="$TARGET_STAGE1"                           \
          --target="$TARGET_STAGE1"                         \
          --prefix="$PREFIX"                                \
          --disable-nls                                     \
          --disable-shared                                  \
          --disable-multilib                                \
  `# [1]` --disable-libstdcxx-threads                       \
  `# [2]` --disable-libstdcxx-pch                           \
  `# [3]` --with-gxx-include-dir=/tools/"$TARGET_STAGE1"/include/c++/4.9.2
 
0:15-07-04 07:33:07 [7/232/232] [stage2-libstdc++] Running build-commands
0:15-07-04 07:33:07 [7/232/232] [stage2-libstdc++] Running command:
cd o && make 
0:15-07-04 07:33:20 [7/232/232] [stage2-libstdc++] Running install-commands
0:15-07-04 07:33:20 [7/232/232] [stage2-libstdc++] Running command:
cd o && make DESTDIR="$DESTDIR" install 
0:15-07-04 07:33:23 [7/232/232] [stage2-libstdc++] Running strip-commands
0:15-07-04 07:33:23 [7/232/232] [stage2-libstdc++] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 07:33:23 [7/232/232] [stage2-libstdc++] Creating cache artifact 
0:15-07-04 07:33:30 [7/232/232] [stage2-libstdc++] Now cached as stage2-libstdc++.355e45b6416c891e36565d0a4d52d91893d7be9bf7f549c1abffcf01f19f34ce
0:15-07-04 07:33:42 [7/232/232] [stage2-libstdc++] Cleaned up /root/.cache/ybd/tmp/tmpulDTOm
0:15-07-04 07:33:42 [7/232/232] [stage2-libstdc++] Elapsed time 00:01:51
0:15-07-04 07:33:42 [7/232/232] [stage2-gcc] Installing stage2-libstdc++.355e45b6416c891e36565d0a4d52d91893d7be9bf7f549c1abffcf01f19f34ce 
0:15-07-04 07:33:43 [8/232/232] [stage2-gcc] Start build 
0:15-07-04 07:34:18 [8/232/232] [stage2-gcc] Git checkout upstream:gcc-tarball in /root/.cache/ybd/tmp/tmpa2UbJN/stage2-gcc.build 
0:15-07-04 07:34:19 [8/232/232] [stage2-gcc] Upstream version b3c9b176 (No tag found) 
0:15-07-04 07:34:25 [8/232/232] [stage2-gcc] Logging build commands to /root/.cache/ybd/artifacts/stage2-gcc.21e9e19fb8d1834ca3f259c4f605ce75f4d8998e1d95cb913989dfdf23564853.build-log.0 
0:15-07-04 07:34:25 [8/232/232] [stage2-gcc] Running configure-commands
0:15-07-04 07:34:25 [8/232/232] [stage2-gcc] Running command:
mkdir o 
WARNING: Unable to set filesystem_writable_paths=['/root/.cache/ybd/tmp/tmpa2UbJN/stage2-gcc.build', '/root/.cache/ybd/tmp/tmpa2UbJN/stage2-gcc.inst', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 07:34:25 [8/232/232] [stage2-gcc] Running command:
case "$MORPH_ARCH" in
    armv7lhf) ARCH_FLAGS="--with-arch=armv7-a \
                          --with-cpu=cortex-a9 \
                          --with-tune=cortex-a9 \
                          --with-fpu=vfpv3-d16 \
                          --with-float=hard" ;;
    armv7*)   ARCH_FLAGS="--with-arch=armv7-a" ;;
esac
export STAGE2_SYSROOT="$(dirname $(pwd))"
export CC="$TARGET_STAGE1-gcc --sysroot=$STAGE2_SYSROOT"
export CXX="$TARGET_STAGE1-g++ --sysroot=$STAGE2_SYSROOT"
export AR="$TARGET_STAGE1-ar"
export RANLIB="$TARGET_STAGE1-ranlib"
cd o && ../configure                                         \
          $ARCH_FLAGS                                        \
          --build=$(sh ../config.guess)                      \
  `# [1]` --host=$TARGET_STAGE1                              \
  `# [1]` --target=$TARGET_STAGE1                            \
          --prefix="$PREFIX"                                 \
  `# [2]` --libdir=$PREFIX/lib                               \
  `# [3]` --with-local-prefix=$PREFIX                        \
  `# [4]` --with-build-sysroot="$STAGE2_SYSROOT"             \
          --disable-bootstrap                                \
          --disable-nls                                      \
          --disable-multilib                                 \
          --disable-libgomp                                  \
          --disable-libstdcxx-pch                            \
          --enable-languages=c,c++
 
0:15-07-04 07:34:29 [8/232/232] [stage2-gcc] Running build-commands
0:15-07-04 07:34:29 [8/232/232] [stage2-gcc] Running command:
case "$MORPH_ARCH" in
    armv5*)   sed -i "s/--host=none/--host=armv5/" o/Makefile
              sed -i "s/--target=none/--target=armv5/" o/Makefile ;;
    armv7*)   sed -i "s/--host=none/--host=armv7a/" o/Makefile
              sed -i "s/--target=none/--target=armv7a/" o/Makefile ;;
esac
export STAGE2_SYSROOT="$(dirname $(pwd))"
cd o && make
 
0:15-07-04 07:40:02 [8/232/232] [stage2-gcc] Running install-commands
0:15-07-04 07:40:02 [8/232/232] [stage2-gcc] Running command:
cd o && make DESTDIR="$DESTDIR" install 
0:15-07-04 07:40:13 [8/232/232] [stage2-gcc] Running command:
if [ "$(echo $TARGET | cut -c -6)" = "x86_64" ]; then
  libdir=lib64
else
  libdir=lib
fi

install -d "$DESTDIR/lib"
ln -s "$PREFIX/$libdir/libgcc_s.so" "$DESTDIR/lib/"
ln -s "$PREFIX/$libdir/libgcc_s.so.1" "$DESTDIR/lib/"
 
0:15-07-04 07:40:13 [8/232/232] [stage2-gcc] Running strip-commands
0:15-07-04 07:40:13 [8/232/232] [stage2-gcc] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 07:40:13 [8/232/232] [stage2-gcc] Creating cache artifact 
0:15-07-04 07:44:35 [8/232/232] [stage2-gcc] Now cached as stage2-gcc.21e9e19fb8d1834ca3f259c4f605ce75f4d8998e1d95cb913989dfdf23564853
0:15-07-04 07:44:49 [8/232/232] [stage2-gcc] Cleaned up /root/.cache/ybd/tmp/tmpa2UbJN
0:15-07-04 07:44:49 [8/232/232] [stage2-gcc] Elapsed time 00:32:19
0:15-07-04 07:44:49 [8/232/232] [zlib] Installing stage2-gcc.21e9e19fb8d1834ca3f259c4f605ce75f4d8998e1d95cb913989dfdf23564853 
0:15-07-04 07:44:55 [8/232/232] [stage2-gawk] Starting assembly 
0:15-07-04 07:44:55 [8/232/232] [stage2-gawk] Installing stage2-linux-api-headers.2924aca6ee4871cf8d19ab77f35e1b5599bed435b02e4c884a9b59e34491d4bb 
0:15-07-04 07:44:55 [8/232/232] [stage2-gawk] Installing stage2-glibc.97579f45b08fa08c93d992552a17395e9641c7fe9a6bccfaee43a50a906c635b 
0:15-07-04 07:44:55 [9/232/232] [stage2-gawk] Start build 
0:15-07-04 07:44:56 [9/232/232] [stage2-gawk] Git checkout upstream:gawk in /root/.cache/ybd/tmp/tmp2eL1pe/stage2-gawk.build 
0:15-07-04 07:44:57 [9/232/232] [stage2-gawk] Upstream version 925f9363 eap4-last-fix-3-9-g925f936 (eap4-last-fix-3 + 9 commits) 
0:15-07-04 07:44:57 [9/232/232] [stage2-gawk] Logging build commands to /root/.cache/ybd/artifacts/stage2-gawk.12efca73ffd0d1a68df93bad69690a84902665163d2670f4045bc88617cbfa95.build-log.0 
0:15-07-04 07:44:57 [9/232/232] [stage2-gawk] Running configure-commands
0:15-07-04 07:44:57 [9/232/232] [stage2-gawk] Running command:
STAGE2_SYSROOT="$(dirname $(pwd))" CPPFLAGS="--sysroot=$STAGE2_SYSROOT" CXX=false LDFLAGS="--sysroot=$STAGE2_SYSROOT" ./configure --prefix="$PREFIX" --disable-nls --build=$(sh config.guess)  --host=$TARGET_STAGE1 
WARNING: Unable to set filesystem_writable_paths=['/root/.cache/ybd/tmp/tmp2eL1pe/stage2-gawk.build', '/root/.cache/ybd/tmp/tmp2eL1pe/stage2-gawk.inst', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 07:45:16 [9/232/232] [stage2-gawk] Running build-commands
0:15-07-04 07:45:16 [9/232/232] [stage2-gawk] Running command:
STAGE2_SYSROOT="$(dirname $(pwd))" make 
0:15-07-04 07:45:25 [9/232/232] [stage2-gawk] Running install-commands
0:15-07-04 07:45:25 [9/232/232] [stage2-gawk] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 07:45:27 [9/232/232] [stage2-gawk] Running strip-commands
0:15-07-04 07:45:27 [9/232/232] [stage2-gawk] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 07:45:27 [9/232/232] [stage2-gawk] Creating cache artifact 
0:15-07-04 07:45:30 [9/232/232] [stage2-gawk] Now cached as stage2-gawk.12efca73ffd0d1a68df93bad69690a84902665163d2670f4045bc88617cbfa95
0:15-07-04 07:45:31 [9/232/232] [stage2-gawk] Cleaned up /root/.cache/ybd/tmp/tmp2eL1pe
0:15-07-04 07:45:31 [9/232/232] [stage2-gawk] Elapsed time 00:00:35
0:15-07-04 07:45:31 [9/232/232] [zlib] Installing stage2-gawk.12efca73ffd0d1a68df93bad69690a84902665163d2670f4045bc88617cbfa95 
0:15-07-04 07:45:31 [9/232/232] [stage2-binutils] Starting assembly 
0:15-07-04 07:45:31 [9/232/232] [stage2-binutils] Installing stage1-gcc.da0a2535b0f62a86abdd1412c3110d21d0cf0760a3b695fe5e53079a7667d8bd 
0:15-07-04 07:45:31 [9/232/232] [stage2-binutils] Installing stage2-glibc.97579f45b08fa08c93d992552a17395e9641c7fe9a6bccfaee43a50a906c635b 
0:15-07-04 07:45:31 [10/232/232] [stage2-binutils] Start build 
0:15-07-04 07:45:36 [10/232/232] [stage2-binutils] Git checkout upstream:binutils-tarball in /root/.cache/ybd/tmp/tmpfZMx6x/stage2-binutils.build 
0:15-07-04 07:45:36 [10/232/232] [stage2-binutils] Upstream version 5500a97a binutils-2.25 (binutils-2.25 + 0 commits) 
0:15-07-04 07:45:37 [10/232/232] [stage2-binutils] Logging build commands to /root/.cache/ybd/artifacts/stage2-binutils.3dc2f69a2963a95bc818328d78fc57b989ec1e3243b53404661a831af5251800.build-log.0 
0:15-07-04 07:45:37 [10/232/232] [stage2-binutils] Running configure-commands
0:15-07-04 07:45:37 [10/232/232] [stage2-binutils] Running command:
export STAGE2_SYSROOT="$(dirname $(pwd))"
export CXX="$TARGET_STAGE1-g++ --sysroot=$STAGE2_SYSROOT"
# binutils has its own embedded libtool, which is old and strips out
# `--sysroot`.  Work around by modifying the compiler command to
# include the sysroot flag
export CC="$TARGET_STAGE1-gcc --sysroot=$STAGE2_SYSROOT"
./configure --prefix="$PREFIX" --disable-nls --disable-werror \
  --build=$(sh config.guess) \
  --host=$TARGET_STAGE1 \
  --target=$TARGET_STAGE1
 
WARNING: Unable to set filesystem_writable_paths=['/root/.cache/ybd/tmp/tmpfZMx6x/stage2-binutils.build', '/root/.cache/ybd/tmp/tmpfZMx6x/stage2-binutils.inst', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 07:45:41 [10/232/232] [stage2-binutils] Running build-commands
0:15-07-04 07:45:41 [10/232/232] [stage2-binutils] Running command:
export STAGE2_SYSROOT="$(dirname $(pwd))"
make
 
0:15-07-04 07:46:58 [10/232/232] [stage2-binutils] Running install-commands
0:15-07-04 07:46:58 [10/232/232] [stage2-binutils] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 07:47:02 [10/232/232] [stage2-binutils] Running strip-commands
0:15-07-04 07:47:02 [10/232/232] [stage2-binutils] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 07:47:02 [10/232/232] [stage2-binutils] Creating cache artifact 
0:15-07-04 07:48:25 [10/232/232] [stage2-binutils] Now cached as stage2-binutils.3dc2f69a2963a95bc818328d78fc57b989ec1e3243b53404661a831af5251800
0:15-07-04 07:48:27 [10/232/232] [stage2-binutils] Cleaned up /root/.cache/ybd/tmp/tmpfZMx6x
0:15-07-04 07:48:27 [10/232/232] [stage2-binutils] Elapsed time 00:02:56
0:15-07-04 07:48:27 [10/232/232] [zlib] Installing stage2-binutils.3dc2f69a2963a95bc818328d78fc57b989ec1e3243b53404661a831af5251800 
0:15-07-04 07:48:29 [10/232/232] [stage2-make] Starting assembly 
0:15-07-04 07:48:29 [10/232/232] [stage2-make] Installing stage2-glibc.97579f45b08fa08c93d992552a17395e9641c7fe9a6bccfaee43a50a906c635b 
0:15-07-04 07:48:29 [11/232/232] [stage2-make] Start build 
0:15-07-04 07:48:30 [11/232/232] [stage2-make] Git checkout upstream:make-tarball in /root/.cache/ybd/tmp/tmpD064dr/stage2-make.build 
0:15-07-04 07:48:30 [11/232/232] [stage2-make] Upstream version 4978d712 make-4.1-1-g4978d71 (make-4.1 + 1 commits) 
0:15-07-04 07:48:30 [11/232/232] [stage2-make] Logging build commands to /root/.cache/ybd/artifacts/stage2-make.1a3ddf3d8112e26bb8ac73b4a991b70946e1cc9e340eeb1c82962e68f3a7ec2b.build-log.0 
0:15-07-04 07:48:30 [11/232/232] [stage2-make] Running configure-commands
0:15-07-04 07:48:30 [11/232/232] [stage2-make] Running command:
STAGE2_SYSROOT="$(dirname $(pwd))" CPPFLAGS="--sysroot=$STAGE2_SYSROOT" CXX=false LDFLAGS="--sysroot=$STAGE2_SYSROOT" ./configure --prefix="$PREFIX" --disable-nls --build=$(sh config/config.guess) --host=$TARGET_STAGE1 
WARNING: Unable to set filesystem_writable_paths=['/root/.cache/ybd/tmp/tmpD064dr/stage2-make.build', '/root/.cache/ybd/tmp/tmpD064dr/stage2-make.inst', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 07:48:39 [11/232/232] [stage2-make] Running build-commands
0:15-07-04 07:48:39 [11/232/232] [stage2-make] Running command:
STAGE2_SYSROOT="$(dirname $(pwd))" make 
0:15-07-04 07:48:41 [11/232/232] [stage2-make] Running install-commands
0:15-07-04 07:48:41 [11/232/232] [stage2-make] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 07:48:42 [11/232/232] [stage2-make] Running strip-commands
0:15-07-04 07:48:42 [11/232/232] [stage2-make] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 07:48:42 [11/232/232] [stage2-make] Creating cache artifact 
0:15-07-04 07:48:43 [11/232/232] [stage2-make] Now cached as stage2-make.1a3ddf3d8112e26bb8ac73b4a991b70946e1cc9e340eeb1c82962e68f3a7ec2b
0:15-07-04 07:48:43 [11/232/232] [stage2-make] Cleaned up /root/.cache/ybd/tmp/tmpD064dr
0:15-07-04 07:48:43 [11/232/232] [stage2-make] Elapsed time 00:00:14
0:15-07-04 07:48:43 [11/232/232] [zlib] Installing stage2-make.1a3ddf3d8112e26bb8ac73b4a991b70946e1cc9e340eeb1c82962e68f3a7ec2b 
0:15-07-04 07:48:43 [11/232/232] [stage2-busybox] Starting assembly 
0:15-07-04 07:48:43 [11/232/232] [stage2-busybox] Installing stage2-linux-api-headers.2924aca6ee4871cf8d19ab77f35e1b5599bed435b02e4c884a9b59e34491d4bb 
0:15-07-04 07:48:43 [11/232/232] [stage2-busybox] Installing stage2-glibc.97579f45b08fa08c93d992552a17395e9641c7fe9a6bccfaee43a50a906c635b 
0:15-07-04 07:48:44 [12/232/232] [stage2-busybox] Start build 
0:15-07-04 07:48:44 [12/232/232] [stage2-busybox] Git checkout upstream:busybox in /root/.cache/ybd/tmp/tmp29WIZD/stage2-busybox.build 
0:15-07-04 07:48:44 [12/232/232] [stage2-busybox] Upstream version 1ecfe811 1_23_1 (1_23_1 + 0 commits) 
0:15-07-04 07:48:44 [12/232/232] [stage2-busybox] Logging build commands to /root/.cache/ybd/artifacts/stage2-busybox.2288420234b76a4c9fb4ab8acbf40e6b91ea5a30f49afce9b793ed2e572f7574.build-log.0 
0:15-07-04 07:48:44 [12/232/232] [stage2-busybox] Running configure-commands
0:15-07-04 07:48:44 [12/232/232] [stage2-busybox] Running command:
make HOSTCC="/usr/bin/gcc" CROSS_COMPILE=$TARGET_STAGE1- KCONFIG_NOTIMESTAMP=1 defconfig 
WARNING: Unable to set filesystem_writable_paths=['/root/.cache/ybd/tmp/tmp29WIZD/stage2-busybox.build', '/root/.cache/ybd/tmp/tmp29WIZD/stage2-busybox.inst', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
[ "$PREFIX" = /usr ] || sed -e 's/.*INSTALL_NO_USR.*/CONFIG_INSTALL_NO_USR=y/' -i .config 
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_AWK=y.*/# CONFIG_AWK is not set/' -i .config 
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_INETD=y.*/# CONFIG_INETD is not set/' -i .config 
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_PATCH=y.*/# CONFIG_PATCH is not set/' -i .config 
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_DEPMOD=y.*/# CONFIG_DEPMOD is not set/' -i .config 
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_INSMOD=y.*/# CONFIG_INSMOD is not set/' -i .config 
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_MODPROBE=y.*/# CONFIG_MODPROBE is not set/' -i .config 
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_MODPROBE_SMALL=y.*/# CONFIG_MODPROBE_SMALL is not set/' -i .config 
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_LSMOD=y.*/# CONFIG_LSMOD is not set/' -i .config 
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_RMMOD=y.*/# CONFIG_RMMOD is not set/' -i .config 
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_FEATURE_MOUNT_CIFS=y.*/# CONFIG_FEATURE_MOUNT_CIFS is not set/' -i .config 
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_FEATURE_EXTRA_QUIET=y.*/# CONFIG_FEATURE_EXTRA_QUIET is not set/' -i .config 
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_FEATURE_INIT_COREDUMPS=y.*/# CONFIG_FEATURE_INIT_COREDUMPS is not set/' -i .config 
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_FEATURE_INIT_SCTTY=y.*/# CONFIG_FEATURE_INIT_SCTTY is not set/' -i .config 
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_FEATURE_INIT_SYSLOG=y.*/# CONFIG_FEATURE_INIT_SYSLOG is not set/' -i .config 
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_FEATURE_INITRD=y.*/# CONFIG_FEATURE_INITRD is not set/' -i .config 
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_FEATURE_USE_INITTAB=y.*/# CONFIG_FEATURE_USE_INITTAB is not set/' -i .config 
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_FEATURE_MINIX2=y.*/# CONFIG_FEATURE_MINIX2 is not set/' -i .config 
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_FSCK_MINIX=y.*/# CONFIG_FSCK_MINIX is not set/' -i .config 
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_HALT=y.*/# CONFIG_HALT is not set/' -i .config 
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_INIT=y.*/# CONFIG_INIT is not set/' -i .config 
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_INIT_TERMINAL_TYPE=y.*/CONFIG_INIT_TERMINAL_TYPE=""/' -i .config 
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_LOSETUP=y.*/# CONFIG_LOSETUP is not set/' -i .config 
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_LSUSB=y.*/# CONFIG_LSUSB is not set/' -i .config 
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_LZMA=y.*/# CONFIG_LZMA is not set/' -i .config 
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_MKFS_EXT2=y.*/# CONFIG_MKFS_EXT2 is not set/' -i .config 
0:15-07-04 07:48:56 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_MKFS_MINIX=y.*/# CONFIG_MKFS_MINIX is not set/' -i .config 
0:15-07-04 07:48:57 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_RUNLEVEL=y.*/# CONFIG_RUNLEVEL is not set/' -i .config 
0:15-07-04 07:48:57 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_STRINGS=y.*/# CONFIG_STRINGS is not set/' -i .config 
0:15-07-04 07:48:57 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_UNLZMA=y.*/# CONFIG_UNLZMA is not set/' -i .config 
0:15-07-04 07:48:57 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_UNXZ=y.*/# CONFIG_UNXZ is not set/' -i .config 
0:15-07-04 07:48:57 [12/232/232] [stage2-busybox] Running command:
sed -e 's/CONFIG_XZ=y.*/# CONFIG_XZ is not set/' -i .config 
0:15-07-04 07:48:57 [12/232/232] [stage2-busybox] Running build-commands
0:15-07-04 07:48:57 [12/232/232] [stage2-busybox] Running command:
export STAGE2_SYSROOT="$(dirname $(pwd))"
export CPPFLAGS="--sysroot=$STAGE2_SYSROOT"
export LDFLAGS="--sysroot=$STAGE2_SYSROOT"
make HOSTCC="/usr/bin/gcc" CROSS_COMPILE=$TARGET_STAGE1- KCONFIG_NOTIMESTAMP=1
 
0:15-07-04 07:49:14 [12/232/232] [stage2-busybox] Running install-commands
0:15-07-04 07:49:14 [12/232/232] [stage2-busybox] Running command:
export STAGE2_SYSROOT="$(dirname $(pwd))"
export CPPFLAGS="--sysroot=$STAGE2_SYSROOT"
export LDFLAGS="--sysroot=$STAGE2_SYSROOT"
make CONFIG_PREFIX="$DESTDIR$PREFIX" \
     HOSTCC="/usr/bin/gcc" \
     CROSS_COMPILE=$TARGET_STAGE1- \
     KCONFIG_NOTIMESTAMP=1 install &&
chmod 6755 "$DESTDIR$PREFIX"/bin/busybox
 
0:15-07-04 07:49:20 [12/232/232] [stage2-busybox] Running strip-commands
0:15-07-04 07:49:20 [12/232/232] [stage2-busybox] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 07:49:20 [12/232/232] [stage2-busybox] Creating cache artifact 
0:15-07-04 07:49:21 [12/232/232] [stage2-busybox] Now cached as stage2-busybox.2288420234b76a4c9fb4ab8acbf40e6b91ea5a30f49afce9b793ed2e572f7574
0:15-07-04 07:49:22 [12/232/232] [stage2-busybox] Cleaned up /root/.cache/ybd/tmp/tmp29WIZD
0:15-07-04 07:49:22 [12/232/232] [stage2-busybox] Elapsed time 00:00:38
0:15-07-04 07:49:22 [12/232/232] [zlib] Installing stage2-busybox.2288420234b76a4c9fb4ab8acbf40e6b91ea5a30f49afce9b793ed2e572f7574 
0:15-07-04 07:49:22 [12/232/232] [glibc] Starting assembly 
0:15-07-04 07:49:22 [12/232/232] [glibc] Installing stage2-gawk.12efca73ffd0d1a68df93bad69690a84902665163d2670f4045bc88617cbfa95 
0:15-07-04 07:49:22 [12/232/232] [glibc] Installing stage2-fhs-dirs.26c4d487d57d7d53764405cb21dde54d9fb53868e086723da75d261e9432ad10 
0:15-07-04 07:49:22 [12/232/232] [glibc] Installing stage2-binutils.3dc2f69a2963a95bc818328d78fc57b989ec1e3243b53404661a831af5251800 
0:15-07-04 07:49:22 [12/232/232] [stage2-fake-bash] Starting assembly 
0:15-07-04 07:49:22 [13/232/232] [stage2-fake-bash] Start build 
0:15-07-04 07:49:24 [13/232/232] [stage2-fake-bash] Git checkout upstream:bash in /root/.cache/ybd/tmp/tmpzE_H6P/stage2-fake-bash.build 
0:15-07-04 07:49:24 [13/232/232] [stage2-fake-bash] Upstream version 3590145a bash-4.3-27-g3590145 (bash-4.3 + 27 commits) 
0:15-07-04 07:49:24 [13/232/232] [stage2-fake-bash] Logging build commands to /root/.cache/ybd/artifacts/stage2-fake-bash.e0b9fcea84d34d93cb3d990b16e2149d3bcb2738d1bb9a0aff93afab8d415d96.build-log.0 
0:15-07-04 07:49:24 [13/232/232] [stage2-fake-bash] Running install-commands
0:15-07-04 07:49:24 [13/232/232] [stage2-fake-bash] Running command:
printf '#!/bin/sh\nexec /bin/sh "$@"\n' | install -D /proc/self/fd/0 -m 755 "$DESTDIR$PREFIX/bin/bash" 
WARNING: Unable to set filesystem_writable_paths=['/root/.cache/ybd/tmp/tmpzE_H6P/stage2-fake-bash.build', '/root/.cache/ybd/tmp/tmpzE_H6P/stage2-fake-bash.inst', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 07:49:24 [13/232/232] [stage2-fake-bash] Running strip-commands
0:15-07-04 07:49:24 [13/232/232] [stage2-fake-bash] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 07:49:24 [13/232/232] [stage2-fake-bash] Creating cache artifact 
0:15-07-04 07:49:24 [13/232/232] [stage2-fake-bash] Now cached as stage2-fake-bash.e0b9fcea84d34d93cb3d990b16e2149d3bcb2738d1bb9a0aff93afab8d415d96
0:15-07-04 07:49:24 [13/232/232] [stage2-fake-bash] Cleaned up /root/.cache/ybd/tmp/tmpzE_H6P
0:15-07-04 07:49:24 [13/232/232] [stage2-fake-bash] Elapsed time 00:00:01
0:15-07-04 07:49:24 [13/232/232] [glibc] Installing stage2-fake-bash.e0b9fcea84d34d93cb3d990b16e2149d3bcb2738d1bb9a0aff93afab8d415d96 
0:15-07-04 07:49:24 [13/232/232] [glibc] Installing stage2-busybox.2288420234b76a4c9fb4ab8acbf40e6b91ea5a30f49afce9b793ed2e572f7574 
0:15-07-04 07:49:24 [13/232/232] [glibc] Installing stage2-gcc.21e9e19fb8d1834ca3f259c4f605ce75f4d8998e1d95cb913989dfdf23564853 
0:15-07-04 07:49:24 [13/232/232] [glibc] Installing stage2-make.1a3ddf3d8112e26bb8ac73b4a991b70946e1cc9e340eeb1c82962e68f3a7ec2b 
0:15-07-04 07:49:24 [13/232/232] [linux-api-headers] Starting assembly 
0:15-07-04 07:49:25 [13/232/232] [linux-api-headers] Installing stage2-binutils.3dc2f69a2963a95bc818328d78fc57b989ec1e3243b53404661a831af5251800 
0:15-07-04 07:49:25 [13/232/232] [linux-api-headers] Installing stage2-fhs-dirs.26c4d487d57d7d53764405cb21dde54d9fb53868e086723da75d261e9432ad10 
0:15-07-04 07:49:25 [13/232/232] [linux-api-headers] Installing stage2-busybox.2288420234b76a4c9fb4ab8acbf40e6b91ea5a30f49afce9b793ed2e572f7574 
0:15-07-04 07:49:25 [13/232/232] [linux-api-headers] Installing stage2-gcc.21e9e19fb8d1834ca3f259c4f605ce75f4d8998e1d95cb913989dfdf23564853 
0:15-07-04 07:49:25 [13/232/232] [linux-api-headers] Installing stage2-gawk.12efca73ffd0d1a68df93bad69690a84902665163d2670f4045bc88617cbfa95 
0:15-07-04 07:49:25 [13/232/232] [stage2-reset-specs] Starting assembly 
0:15-07-04 07:49:25 [13/232/232] [stage2-reset-specs] Installing stage1-gcc.da0a2535b0f62a86abdd1412c3110d21d0cf0760a3b695fe5e53079a7667d8bd 
0:15-07-04 07:49:25 [13/232/232] [stage2-reset-specs] Installing stage2-linux-api-headers.2924aca6ee4871cf8d19ab77f35e1b5599bed435b02e4c884a9b59e34491d4bb 
0:15-07-04 07:49:25 [13/232/232] [stage2-reset-specs] Installing stage2-glibc.97579f45b08fa08c93d992552a17395e9641c7fe9a6bccfaee43a50a906c635b 
0:15-07-04 07:49:26 [14/232/232] [stage2-reset-specs] Start build 
0:15-07-04 07:49:32 [14/232/232] [stage2-reset-specs] Git checkout upstream:glibc in /root/.cache/ybd/tmp/tmpSR6jJV/stage2-reset-specs.build 
0:15-07-04 07:49:32 [14/232/232] [stage2-reset-specs] Upstream version 4e42b5b8 glibc-2.21 (glibc-2.21 + 0 commits) 
0:15-07-04 07:49:33 [14/232/232] [stage2-reset-specs] Logging build commands to /root/.cache/ybd/artifacts/stage2-reset-specs.5a04e9fe687182a751891c05f082df35066f248ae2761ba44eb1b5c53cfe85ef.build-log.0 
0:15-07-04 07:49:33 [14/232/232] [stage2-reset-specs] Running install-commands
0:15-07-04 07:49:33 [14/232/232] [stage2-reset-specs] Running command:
STAGE2_SYSROOT="$(dirname "$(pwd)")"
specs_dir="$(dirname $($TARGET_STAGE1-gcc -print-libgcc-file-name))"
target_specs_dir="$DESTDIR/${specs_dir#$STAGE2_SYSROOT}"
mkdir -p "$target_specs_dir"
ln -s "temporary specs removed by baserock bootstrap" "$target_specs_dir/specs"
 
WARNING: Unable to set filesystem_writable_paths=['/root/.cache/ybd/tmp/tmpSR6jJV/stage2-reset-specs.build', '/root/.cache/ybd/tmp/tmpSR6jJV/stage2-reset-specs.inst', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 07:49:33 [14/232/232] [stage2-reset-specs] Running strip-commands
0:15-07-04 07:49:33 [14/232/232] [stage2-reset-specs] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 07:49:33 [14/232/232] [stage2-reset-specs] Creating cache artifact 
0:15-07-04 07:49:33 [14/232/232] [stage2-reset-specs] Now cached as stage2-reset-specs.5a04e9fe687182a751891c05f082df35066f248ae2761ba44eb1b5c53cfe85ef
0:15-07-04 07:49:35 [14/232/232] [stage2-reset-specs] Cleaned up /root/.cache/ybd/tmp/tmpSR6jJV
0:15-07-04 07:49:35 [14/232/232] [stage2-reset-specs] Elapsed time 00:00:09
0:15-07-04 07:49:35 [14/232/232] [linux-api-headers] Installing stage2-reset-specs.5a04e9fe687182a751891c05f082df35066f248ae2761ba44eb1b5c53cfe85ef 
0:15-07-04 07:49:35 [14/232/232] [linux-api-headers] Installing stage2-make.1a3ddf3d8112e26bb8ac73b4a991b70946e1cc9e340eeb1c82962e68f3a7ec2b 
0:15-07-04 07:49:35 [15/232/232] [linux-api-headers] Start build 
0:15-07-04 07:50:01 [15/232/232] [linux-api-headers] Git checkout upstream:linux in /root/.cache/ybd/tmp/tmpHiLHr4/linux-api-headers.build 
0:15-07-04 07:50:01 [15/232/232] [linux-api-headers] Upstream version 39a88044 v4.0 (v4.0 + 0 commits) 
0:15-07-04 07:50:04 [15/232/232] [linux-api-headers] Logging build commands to /root/.cache/ybd/artifacts/linux-api-headers.384c89b18b7feaefbfd5e0f26617ffa2ca37511c08ef1f09e7f045a096a7758d.build-log.0 
0:15-07-04 07:50:04 [15/232/232] [linux-api-headers] Running install-commands
0:15-07-04 07:50:04 [15/232/232] [linux-api-headers] Running command:
case "$MORPH_ARCH" in
    armv5l)
        ARCH="arm" ;;
    armv7b|armv7l|armv7lhf)
        ARCH="arm" ;;
    armv8l64|armv8b64)
        ARCH="arm64" ;;
    x86_32)
        ARCH="i386" ;;
    x86_64)
        ARCH="x86_64" ;;
    ppc64)
        ARCH="powerpc" ;;
    *)
        echo "Error: unsupported Morph architecture: $MORPH_ARCH" >&2
        exit 1
esac
ARCH=$ARCH make INSTALL_HDR_PATH=dest headers_install
 
WARNING: Unable to set filesystem_writable_paths=['linux-api-headers.build', 'linux-api-headers.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 07:50:14 [15/232/232] [linux-api-headers] Running command:
install -d "$DESTDIR${PREFIX-/usr}/include" 
0:15-07-04 07:50:17 [15/232/232] [linux-api-headers] Running command:
cp -r dest/include/* "$DESTDIR/${PREFIX-/usr}/include" 
0:15-07-04 07:50:19 [15/232/232] [linux-api-headers] Running strip-commands
0:15-07-04 07:50:19 [15/232/232] [linux-api-headers] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 07:50:22 [15/232/232] [linux-api-headers] Creating cache artifact 
0:15-07-04 07:50:24 [15/232/232] [linux-api-headers] Now cached as linux-api-headers.384c89b18b7feaefbfd5e0f26617ffa2ca37511c08ef1f09e7f045a096a7758d
0:15-07-04 07:50:32 [15/232/232] [linux-api-headers] Cleaned up /root/.cache/ybd/tmp/tmpHiLHr4
0:15-07-04 07:50:32 [15/232/232] [linux-api-headers] Elapsed time 00:01:07
0:15-07-04 07:50:32 [15/232/232] [glibc] Installing linux-api-headers.384c89b18b7feaefbfd5e0f26617ffa2ca37511c08ef1f09e7f045a096a7758d 
0:15-07-04 07:50:32 [15/232/232] [glibc] Installing stage2-reset-specs.5a04e9fe687182a751891c05f082df35066f248ae2761ba44eb1b5c53cfe85ef 
0:15-07-04 07:50:32 [16/232/232] [glibc] Start build 
0:15-07-04 07:50:38 [16/232/232] [glibc] Git checkout upstream:glibc in /root/.cache/ybd/tmp/tmppetdY0/glibc.build 
0:15-07-04 07:50:38 [16/232/232] [glibc] Upstream version 4e42b5b8 glibc-2.21 (glibc-2.21 + 0 commits) 
0:15-07-04 07:50:39 [16/232/232] [glibc] Logging build commands to /root/.cache/ybd/artifacts/glibc.0318edafdc6fc6832aed2c94c7704f6e08234582614f7efd61f7c01aafc46d6d.build-log.0 
0:15-07-04 07:50:39 [16/232/232] [glibc] Running configure-commands
0:15-07-04 07:50:39 [16/232/232] [glibc] Running command:
mkdir o 
WARNING: Unable to set filesystem_writable_paths=['glibc.build', 'glibc.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 07:50:40 [16/232/232] [glibc] Running command:
case "$MORPH_ARCH" in
    armv7*)
        ARCH_FLAGS="--without-fp" ;;
esac

# We override the PATH here to remove /tools/bin from it.
# Thanks to this glibc finds bash in /bin/bash through the /bin
# symlink. This is important because glibc changes the path to bash
# of the shebang in some scripts and these scripts will be broken if
# they point to bash in /tools/bin/bash.
export PATH="/usr/bin:/sbin:/bin";
export CFLAGS="-O2 $CFLAGS";
cd o && ../configure \
  $ARCH_FLAGS \
  --prefix="$PREFIX" \
  --disable-profile \
  --enable-kernel=3.0.0 \
  --without-cvs \
  --without-selinux \
  --enable-obsolete-rpc
 
0:15-07-04 07:50:44 [16/232/232] [glibc] Running build-commands
0:15-07-04 07:50:44 [16/232/232] [glibc] Running command:
cd o && make localtime=UTC 
0:15-07-04 07:53:08 [16/232/232] [glibc] Running install-commands
0:15-07-04 07:53:08 [16/232/232] [glibc] Running command:
cd o && make install_root="$DESTDIR" localtime=UTC install 
0:15-07-04 07:54:55 [16/232/232] [glibc] Running command:
mkdir -p "$DESTDIR/etc" 
0:15-07-04 07:54:55 [16/232/232] [glibc] Running command:
mkdir -p "$DESTDIR/etc/ld.so.conf.d" 
0:15-07-04 07:54:55 [16/232/232] [glibc] Running command:
cat <<EOF > nsswitch.conf
passwd: compat
group: compat
shadow: compat

hosts: files myhostname mdns4_minimal [NOTFOUND=return] dns mdns4
networks: files

protocols: db files
services: db files
ethers: db files
rpc: db files

netgroup: nis
EOF
 
0:15-07-04 07:54:56 [16/232/232] [glibc] Running command:
install -m 644 -o root -g root nsswitch.conf "$DESTDIR/etc/nsswitch.conf" 
0:15-07-04 07:54:56 [16/232/232] [glibc] Running command:
cat <<EOF > ld.so.conf
/lib
/usr/lib
/usr/local/lib
include /etc/ld.so.conf.d/*.conf
EOF
 
0:15-07-04 07:54:56 [16/232/232] [glibc] Running command:
install -m 644 -o root -g root ld.so.conf "$DESTDIR/etc/ld.so.conf" 
0:15-07-04 07:54:57 [16/232/232] [glibc] Running strip-commands
0:15-07-04 07:54:57 [16/232/232] [glibc] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 07:55:01 [16/232/232] [glibc] Creating cache artifact 
0:15-07-04 07:55:18 [16/232/232] [glibc] Now cached as glibc.0318edafdc6fc6832aed2c94c7704f6e08234582614f7efd61f7c01aafc46d6d
0:15-07-04 07:55:22 [16/232/232] [glibc] Cleaned up /root/.cache/ybd/tmp/tmppetdY0
0:15-07-04 07:55:22 [16/232/232] [glibc] Elapsed time 00:06:00
0:15-07-04 07:55:22 [16/232/232] [zlib] Installing glibc.0318edafdc6fc6832aed2c94c7704f6e08234582614f7efd61f7c01aafc46d6d 
0:15-07-04 07:55:23 [16/232/232] [zlib] Installing stage2-reset-specs.5a04e9fe687182a751891c05f082df35066f248ae2761ba44eb1b5c53cfe85ef 
0:15-07-04 07:55:23 [17/232/232] [zlib] Start build 
0:15-07-04 07:55:23 [17/232/232] [zlib] Git checkout upstream:zlib in /root/.cache/ybd/tmp/tmp2xrJ3T/zlib.build 
0:15-07-04 07:55:23 [17/232/232] [zlib] Upstream version 50893291 v1.2.8 (v1.2.8 + 0 commits) 
0:15-07-04 07:55:23 [17/232/232] [zlib] Logging build commands to /root/.cache/ybd/artifacts/zlib.417fa73fa8876c0f59ac9723e408b06ca97de1e578ec4277a4fd3a09073bc15d.build-log.0 
0:15-07-04 07:55:23 [17/232/232] [zlib] Running configure-commands
0:15-07-04 07:55:23 [17/232/232] [zlib] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['zlib.build', 'zlib.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 07:55:24 [17/232/232] [zlib] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 07:55:25 [17/232/232] [zlib] Running build-commands
0:15-07-04 07:55:25 [17/232/232] [zlib] Running command:
make 
0:15-07-04 07:55:27 [17/232/232] [zlib] Running install-commands
0:15-07-04 07:55:27 [17/232/232] [zlib] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 07:55:28 [17/232/232] [zlib] Running strip-commands
0:15-07-04 07:55:28 [17/232/232] [zlib] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 07:55:28 [17/232/232] [zlib] Creating cache artifact 
0:15-07-04 07:55:28 [17/232/232] [zlib] Now cached as zlib.417fa73fa8876c0f59ac9723e408b06ca97de1e578ec4277a4fd3a09073bc15d
0:15-07-04 07:55:28 [17/232/232] [zlib] Cleaned up /root/.cache/ybd/tmp/tmp2xrJ3T
0:15-07-04 07:55:28 [17/232/232] [zlib] Elapsed time 00:42:59
0:15-07-04 07:55:28 [17/232/232] [build-essential] Installing zlib.417fa73fa8876c0f59ac9723e408b06ca97de1e578ec4277a4fd3a09073bc15d 
0:15-07-04 07:55:29 [17/232/232] [make] Starting assembly 
0:15-07-04 07:55:29 [17/232/232] [make] Installing stage2-glibc.97579f45b08fa08c93d992552a17395e9641c7fe9a6bccfaee43a50a906c635b 
0:15-07-04 07:55:29 [17/232/232] [make] Installing glibc.0318edafdc6fc6832aed2c94c7704f6e08234582614f7efd61f7c01aafc46d6d 
0:15-07-04 07:55:29 [17/232/232] [make] Installing stage2-reset-specs.5a04e9fe687182a751891c05f082df35066f248ae2761ba44eb1b5c53cfe85ef 
0:15-07-04 07:55:29 [17/232/232] [make] Installing stage2-binutils.3dc2f69a2963a95bc818328d78fc57b989ec1e3243b53404661a831af5251800 
0:15-07-04 07:55:30 [17/232/232] [make] Installing stage2-fhs-dirs.26c4d487d57d7d53764405cb21dde54d9fb53868e086723da75d261e9432ad10 
0:15-07-04 07:55:30 [17/232/232] [make] Installing stage2-busybox.2288420234b76a4c9fb4ab8acbf40e6b91ea5a30f49afce9b793ed2e572f7574 
0:15-07-04 07:55:30 [17/232/232] [make] Installing stage2-make.1a3ddf3d8112e26bb8ac73b4a991b70946e1cc9e340eeb1c82962e68f3a7ec2b 
0:15-07-04 07:55:30 [17/232/232] [make] Installing stage2-gcc.21e9e19fb8d1834ca3f259c4f605ce75f4d8998e1d95cb913989dfdf23564853 
0:15-07-04 07:55:30 [17/232/232] [make] Installing stage2-gawk.12efca73ffd0d1a68df93bad69690a84902665163d2670f4045bc88617cbfa95 
0:15-07-04 07:55:30 [18/232/232] [make] Start build 
0:15-07-04 07:55:30 [18/232/232] [make] Git checkout upstream:make-tarball in /root/.cache/ybd/tmp/tmpWQpMB8/make.build 
0:15-07-04 07:55:30 [18/232/232] [make] Upstream version 4978d712 make-4.1-1-g4978d71 (make-4.1 + 1 commits) 
0:15-07-04 07:55:30 [18/232/232] [make] Logging build commands to /root/.cache/ybd/artifacts/make.a9f18a9bb53895b0fe893399c277803b194173239a5cdd6c563be8db5fe810cc.build-log.0 
0:15-07-04 07:55:30 [18/232/232] [make] Running configure-commands
0:15-07-04 07:55:30 [18/232/232] [make] Running command:
./configure --prefix="$PREFIX" --disable-nls 
WARNING: Unable to set filesystem_writable_paths=['make.build', 'make.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 07:55:40 [18/232/232] [make] Running build-commands
0:15-07-04 07:55:40 [18/232/232] [make] Running command:
make 
0:15-07-04 07:55:43 [18/232/232] [make] Running install-commands
0:15-07-04 07:55:43 [18/232/232] [make] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 07:55:44 [18/232/232] [make] Running strip-commands
0:15-07-04 07:55:44 [18/232/232] [make] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 07:55:44 [18/232/232] [make] Creating cache artifact 
0:15-07-04 07:55:45 [18/232/232] [make] Now cached as make.a9f18a9bb53895b0fe893399c277803b194173239a5cdd6c563be8db5fe810cc
0:15-07-04 07:55:46 [18/232/232] [make] Cleaned up /root/.cache/ybd/tmp/tmpWQpMB8
0:15-07-04 07:55:46 [18/232/232] [make] Elapsed time 00:00:16
0:15-07-04 07:55:46 [18/232/232] [build-essential] Installing make.a9f18a9bb53895b0fe893399c277803b194173239a5cdd6c563be8db5fe810cc 
0:15-07-04 07:55:46 [18/232/232] [ccache] Starting assembly 
0:15-07-04 07:55:46 [18/232/232] [ccache] Installing stage2-gcc.21e9e19fb8d1834ca3f259c4f605ce75f4d8998e1d95cb913989dfdf23564853 
0:15-07-04 07:55:46 [18/232/232] [ccache] Installing stage2-make.1a3ddf3d8112e26bb8ac73b4a991b70946e1cc9e340eeb1c82962e68f3a7ec2b 
0:15-07-04 07:55:46 [18/232/232] [ccache] Installing zlib.417fa73fa8876c0f59ac9723e408b06ca97de1e578ec4277a4fd3a09073bc15d 
0:15-07-04 07:55:47 [18/232/232] [ccache] Installing stage2-gawk.12efca73ffd0d1a68df93bad69690a84902665163d2670f4045bc88617cbfa95 
0:15-07-04 07:55:47 [18/232/232] [ccache] Installing stage2-busybox.2288420234b76a4c9fb4ab8acbf40e6b91ea5a30f49afce9b793ed2e572f7574 
0:15-07-04 07:55:47 [18/232/232] [ccache] Installing stage2-binutils.3dc2f69a2963a95bc818328d78fc57b989ec1e3243b53404661a831af5251800 
0:15-07-04 07:55:47 [18/232/232] [ccache] Installing stage2-reset-specs.5a04e9fe687182a751891c05f082df35066f248ae2761ba44eb1b5c53cfe85ef 
0:15-07-04 07:55:47 [18/232/232] [ccache] Installing stage2-fhs-dirs.26c4d487d57d7d53764405cb21dde54d9fb53868e086723da75d261e9432ad10 
0:15-07-04 07:55:47 [19/232/232] [ccache] Start build 
0:15-07-04 07:55:47 [19/232/232] [ccache] Git checkout upstream:ccache in /root/.cache/ybd/tmp/tmpCxeONU/ccache.build 
0:15-07-04 07:55:47 [19/232/232] [ccache] Upstream version 56763145 v3.1.7-219-g5676314 (v3.1.7 + 219 commits) 
0:15-07-04 07:55:47 [19/232/232] [ccache] Logging build commands to /root/.cache/ybd/artifacts/ccache.5bed660e735e286b558e932eca4b8903b88e0d6e9aae8b6c5ff9fffb56a1c59d.build-log.0 
0:15-07-04 07:55:47 [19/232/232] [ccache] Running configure-commands
0:15-07-04 07:55:47 [19/232/232] [ccache] Running command:
./configure --prefix="$PREFIX" 
WARNING: Unable to set filesystem_writable_paths=['ccache.build', 'ccache.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 07:55:52 [19/232/232] [ccache] Running build-commands
0:15-07-04 07:55:52 [19/232/232] [ccache] Running command:
make 
0:15-07-04 07:55:55 [19/232/232] [ccache] Running install-commands
0:15-07-04 07:55:55 [19/232/232] [ccache] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 07:55:55 [19/232/232] [ccache] Running command:
mkdir -p "$DESTDIR/$PREFIX/lib/ccache" 
0:15-07-04 07:55:55 [19/232/232] [ccache] Running command:
for cc in gcc cc g++ c++; do ln -sf "$PREFIX/bin/ccache" "$DESTDIR/$PREFIX/lib/ccache/$cc"; done 
0:15-07-04 07:55:55 [19/232/232] [ccache] Running command:
for cc in gcc cc g++ c++; do ln -sf "$PREFIX/bin/ccache" "$DESTDIR/$PREFIX/lib/ccache/$TARGET-$cc"; done 
0:15-07-04 07:55:56 [19/232/232] [ccache] Running strip-commands
0:15-07-04 07:55:56 [19/232/232] [ccache] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 07:55:56 [19/232/232] [ccache] Creating cache artifact 
0:15-07-04 07:55:57 [19/232/232] [ccache] Now cached as ccache.5bed660e735e286b558e932eca4b8903b88e0d6e9aae8b6c5ff9fffb56a1c59d
0:15-07-04 07:55:57 [19/232/232] [ccache] Cleaned up /root/.cache/ybd/tmp/tmpCxeONU
0:15-07-04 07:55:57 [19/232/232] [ccache] Elapsed time 00:00:11
0:15-07-04 07:55:57 [19/232/232] [build-essential] Installing ccache.5bed660e735e286b558e932eca4b8903b88e0d6e9aae8b6c5ff9fffb56a1c59d 
0:15-07-04 07:55:57 [19/232/232] [fhs-dirs] Starting assembly 
0:15-07-04 07:55:57 [19/232/232] [fhs-dirs] Installing stage2-make.1a3ddf3d8112e26bb8ac73b4a991b70946e1cc9e340eeb1c82962e68f3a7ec2b 
0:15-07-04 07:55:58 [19/232/232] [fhs-dirs] Installing stage2-reset-specs.5a04e9fe687182a751891c05f082df35066f248ae2761ba44eb1b5c53cfe85ef 
0:15-07-04 07:55:58 [19/232/232] [fhs-dirs] Installing stage2-busybox.2288420234b76a4c9fb4ab8acbf40e6b91ea5a30f49afce9b793ed2e572f7574 
0:15-07-04 07:55:58 [19/232/232] [fhs-dirs] Installing stage2-fhs-dirs.26c4d487d57d7d53764405cb21dde54d9fb53868e086723da75d261e9432ad10 
0:15-07-04 07:55:58 [19/232/232] [fhs-dirs] Installing stage2-gawk.12efca73ffd0d1a68df93bad69690a84902665163d2670f4045bc88617cbfa95 
0:15-07-04 07:55:58 [19/232/232] [fhs-dirs] Installing stage2-gcc.21e9e19fb8d1834ca3f259c4f605ce75f4d8998e1d95cb913989dfdf23564853 
0:15-07-04 07:55:58 [19/232/232] [fhs-dirs] Installing stage2-binutils.3dc2f69a2963a95bc818328d78fc57b989ec1e3243b53404661a831af5251800 
0:15-07-04 07:55:58 [20/232/232] [fhs-dirs] Start build 
0:15-07-04 07:55:58 [20/232/232] [fhs-dirs] Git checkout baserock:baserock/fhs-dirs in /root/.cache/ybd/tmp/tmpzTIqCX/fhs-dirs.build 
0:15-07-04 07:55:58 [20/232/232] [fhs-dirs] Upstream version 1218cbd3 (No tag found) 
0:15-07-04 07:55:58 [20/232/232] [fhs-dirs] Logging build commands to /root/.cache/ybd/artifacts/fhs-dirs.d9da6ed26e63209c0a7b8059ee7622f5194487ce167da7c45a74c96802f54560.build-log.0 
0:15-07-04 07:55:58 [20/232/232] [fhs-dirs] Running install-commands
0:15-07-04 07:55:58 [20/232/232] [fhs-dirs] Running command:
sh ./create-fhs-dirs "$DESTDIR" 
WARNING: Unable to set filesystem_writable_paths=['fhs-dirs.build', 'fhs-dirs.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 07:55:58 [20/232/232] [fhs-dirs] Running command:
install -m 644 passwd "$DESTDIR/etc/passwd" 
0:15-07-04 07:55:59 [20/232/232] [fhs-dirs] Running command:
install -m 600 shadow "$DESTDIR/etc/shadow" 
0:15-07-04 07:55:59 [20/232/232] [fhs-dirs] Running command:
install -m 644 interfaces "$DESTDIR/etc/network/interfaces" 
0:15-07-04 07:56:00 [20/232/232] [fhs-dirs] Running command:
install -m 644 group "$DESTDIR/etc/group" 
0:15-07-04 07:56:00 [20/232/232] [fhs-dirs] Running command:
install -m 644 issue "$DESTDIR/etc/issue" 
0:15-07-04 07:56:00 [20/232/232] [fhs-dirs] Running command:
install -m 644 services "$DESTDIR/etc/services" 
0:15-07-04 07:56:01 [20/232/232] [fhs-dirs] Running command:
install -m 644 protocols "$DESTDIR/etc/protocols" 
0:15-07-04 07:56:01 [20/232/232] [fhs-dirs] Running command:
echo baserock > "$DESTDIR"/etc/hostname 
0:15-07-04 07:56:01 [20/232/232] [fhs-dirs] Running strip-commands
0:15-07-04 07:56:01 [20/232/232] [fhs-dirs] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 07:56:02 [20/232/232] [fhs-dirs] Creating device node /root/.cache/ybd/tmp/tmpzTIqCX/fhs-dirs.inst/.//dev/console
0:15-07-04 07:56:02 [20/232/232] [fhs-dirs] Creating device node /root/.cache/ybd/tmp/tmpzTIqCX/fhs-dirs.inst/.//dev/full
0:15-07-04 07:56:02 [20/232/232] [fhs-dirs] Creating device node /root/.cache/ybd/tmp/tmpzTIqCX/fhs-dirs.inst/.//dev/null
0:15-07-04 07:56:02 [20/232/232] [fhs-dirs] Creating device node /root/.cache/ybd/tmp/tmpzTIqCX/fhs-dirs.inst/.//dev/urandom
0:15-07-04 07:56:02 [20/232/232] [fhs-dirs] Creating device node /root/.cache/ybd/tmp/tmpzTIqCX/fhs-dirs.inst/.//dev/zero
0:15-07-04 07:56:02 [20/232/232] [fhs-dirs] Creating cache artifact 
0:15-07-04 07:56:02 [20/232/232] [fhs-dirs] Now cached as fhs-dirs.d9da6ed26e63209c0a7b8059ee7622f5194487ce167da7c45a74c96802f54560
0:15-07-04 07:56:02 [20/232/232] [fhs-dirs] Cleaned up /root/.cache/ybd/tmp/tmpzTIqCX
0:15-07-04 07:56:02 [20/232/232] [fhs-dirs] Elapsed time 00:00:04
0:15-07-04 07:56:02 [20/232/232] [build-essential] Installing fhs-dirs.d9da6ed26e63209c0a7b8059ee7622f5194487ce167da7c45a74c96802f54560 
0:15-07-04 07:56:02 [20/232/232] [busybox] Starting assembly 
0:15-07-04 07:56:02 [20/232/232] [busybox] Installing stage2-gcc.21e9e19fb8d1834ca3f259c4f605ce75f4d8998e1d95cb913989dfdf23564853 
0:15-07-04 07:56:03 [20/232/232] [busybox] Installing stage2-fhs-dirs.26c4d487d57d7d53764405cb21dde54d9fb53868e086723da75d261e9432ad10 
0:15-07-04 07:56:03 [20/232/232] [busybox] Installing stage2-gawk.12efca73ffd0d1a68df93bad69690a84902665163d2670f4045bc88617cbfa95 
0:15-07-04 07:56:03 [20/232/232] [busybox] Installing stage2-make.1a3ddf3d8112e26bb8ac73b4a991b70946e1cc9e340eeb1c82962e68f3a7ec2b 
0:15-07-04 07:56:03 [20/232/232] [busybox] Installing glibc.0318edafdc6fc6832aed2c94c7704f6e08234582614f7efd61f7c01aafc46d6d 
0:15-07-04 07:56:03 [20/232/232] [busybox] Installing stage2-busybox.2288420234b76a4c9fb4ab8acbf40e6b91ea5a30f49afce9b793ed2e572f7574 
0:15-07-04 07:56:03 [20/232/232] [busybox] Installing stage2-reset-specs.5a04e9fe687182a751891c05f082df35066f248ae2761ba44eb1b5c53cfe85ef 
0:15-07-04 07:56:03 [20/232/232] [busybox] Installing stage2-binutils.3dc2f69a2963a95bc818328d78fc57b989ec1e3243b53404661a831af5251800 
0:15-07-04 07:56:03 [21/232/232] [busybox] Start build 
0:15-07-04 07:56:04 [21/232/232] [busybox] Git checkout upstream:busybox in /root/.cache/ybd/tmp/tmp1cnl5S/busybox.build 
0:15-07-04 07:56:04 [21/232/232] [busybox] Upstream version 1ecfe811 1_23_1 (1_23_1 + 0 commits) 
0:15-07-04 07:56:04 [21/232/232] [busybox] Logging build commands to /root/.cache/ybd/artifacts/busybox.d89b49968293ffee169d8bd648197f15869c56595d95d36cafb468c343ece402.build-log.0 
0:15-07-04 07:56:04 [21/232/232] [busybox] Running configure-commands
0:15-07-04 07:56:04 [21/232/232] [busybox] Running command:
make defconfig KCONFIG_NOTIMESTAMP=1 
WARNING: Unable to set filesystem_writable_paths=['busybox.build', 'busybox.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 07:56:16 [21/232/232] [busybox] Running command:
sed -e 's|.*UDHCPC_DEFAULT_SCRIPT.*|CONFIG_UDHCPC_DEFAULT_SCRIPT="'"$PREFIX"/share/udhcpc/default.script'"|' -i .config 
0:15-07-04 07:56:16 [21/232/232] [busybox] Running command:
sed -e 's|.*IFUPDOWN_IFSTATE_PATH.*|CONFIG_IFUPDOWN_IFSTATE_PATH="/run/ifstate"|' -i .config 
0:15-07-04 07:56:16 [21/232/232] [busybox] Running command:
[ "$PREFIX" = /usr ] || sed -e 's/.*INSTALL_NO_USR.*/CONFIG_INSTALL_NO_USR=y/' -i .config 
0:15-07-04 07:56:17 [21/232/232] [busybox] Running command:
sed -e 's/CONFIG_INETD=y.*/# CONFIG_INETD is not set/' -i .config 
0:15-07-04 07:56:17 [21/232/232] [busybox] Running command:
sed -e 's/CONFIG_PATCH=y.*/# CONFIG_PATCH is not set/' -i .config 
0:15-07-04 07:56:17 [21/232/232] [busybox] Running command:
sed -e 's/CONFIG_DEPMOD=y.*/# CONFIG_DEPMOD is not set/' -i .config 
0:15-07-04 07:56:18 [21/232/232] [busybox] Running command:
sed -e 's/CONFIG_INSMOD=y.*/# CONFIG_INSMOD is not set/' -i .config 
0:15-07-04 07:56:18 [21/232/232] [busybox] Running command:
sed -e 's/CONFIG_MODPROBE=y.*/# CONFIG_MODPROBE is not set/' -i .config 
0:15-07-04 07:56:18 [21/232/232] [busybox] Running command:
sed -e 's/CONFIG_MODPROBE_SMALL=y.*/# CONFIG_MODPROBE_SMALL is not set/' -i .config 
0:15-07-04 07:56:19 [21/232/232] [busybox] Running command:
sed -e 's/CONFIG_LSMOD=y.*/# CONFIG_LSMOD is not set/' -i .config 
0:15-07-04 07:56:19 [21/232/232] [busybox] Running command:
sed -e 's/CONFIG_RMMOD=y.*/# CONFIG_RMMOD is not set/' -i .config 
0:15-07-04 07:56:19 [21/232/232] [busybox] Running command:
sed -e 's/CONFIG_FEATURE_MOUNT_CIFS=y.*/# CONFIG_FEATURE_MOUNT_CIFS is not set/' -i .config 
0:15-07-04 07:56:20 [21/232/232] [busybox] Running command:
sed -e 's/CONFIG_FEATURE_EXTRA_QUIET=y.*/# CONFIG_FEATURE_EXTRA_QUIET is not set/' -i .config 
0:15-07-04 07:56:20 [21/232/232] [busybox] Running command:
sed -e 's/CONFIG_FEATURE_INIT_COREDUMPS=y.*/# CONFIG_FEATURE_INIT_COREDUMPS is not set/' -i .config 
0:15-07-04 07:56:20 [21/232/232] [busybox] Running command:
sed -e 's/CONFIG_FEATURE_INIT_SCTTY=y.*/# CONFIG_FEATURE_INIT_SCTTY is not set/' -i .config 
0:15-07-04 07:56:21 [21/232/232] [busybox] Running command:
sed -e 's/CONFIG_FEATURE_INIT_SYSLOG=y.*/# CONFIG_FEATURE_INIT_SYSLOG is not set/' -i .config 
0:15-07-04 07:56:21 [21/232/232] [busybox] Running command:
sed -e 's/CONFIG_FEATURE_INITRD=y.*/# CONFIG_FEATURE_INITRD is not set/' -i .config 
0:15-07-04 07:56:21 [21/232/232] [busybox] Running command:
sed -e 's/CONFIG_FEATURE_MINIX2=y.*/# CONFIG_FEATURE_MINIX2 is not set/' -i .config 
0:15-07-04 07:56:22 [21/232/232] [busybox] Running command:
sed -e 's/CONFIG_FSCK_MINIX=y.*/# CONFIG_FSCK_MINIX is not set/' -i .config 
0:15-07-04 07:56:22 [21/232/232] [busybox] Running command:
sed -e 's/CONFIG_LOSETUP=y.*/# CONFIG_LOSETUP is not set/' -i .config 
0:15-07-04 07:56:22 [21/232/232] [busybox] Running command:
sed -e 's/CONFIG_LSUSB=y.*/# CONFIG_LSUSB is not set/' -i .config 
0:15-07-04 07:56:23 [21/232/232] [busybox] Running command:
sed -e 's/CONFIG_LSPCI=y.*/# CONFIG_LSPCI is not set/' -i .config 
0:15-07-04 07:56:23 [21/232/232] [busybox] Running command:
sed -e 's/CONFIG_LZMA=y.*/# CONFIG_LZMA is not set/' -i .config 
0:15-07-04 07:56:23 [21/232/232] [busybox] Running command:
sed -e 's/CONFIG_MKFS_EXT2=y.*/# CONFIG_MKFS_EXT2 is not set/' -i .config 
0:15-07-04 07:56:24 [21/232/232] [busybox] Running command:
sed -e 's/CONFIG_MKFS_MINIX=y.*/# CONFIG_MKFS_MINIX is not set/' -i .config 
0:15-07-04 07:56:24 [21/232/232] [busybox] Running command:
sed -e 's/CONFIG_STRINGS=y.*/# CONFIG_STRINGS is not set/' -i .config 
0:15-07-04 07:56:24 [21/232/232] [busybox] Running command:
sed -e 's/CONFIG_UNLZMA=y.*/# CONFIG_UNLZMA is not set/' -i .config 
0:15-07-04 07:56:25 [21/232/232] [busybox] Running command:
sed -e 's/CONFIG_UNXZ=y.*/# CONFIG_UNXZ is not set/' -i .config 
0:15-07-04 07:56:25 [21/232/232] [busybox] Running command:
sed -e 's/CONFIG_XZ=y.*/# CONFIG_XZ is not set/' -i .config 
0:15-07-04 07:56:25 [21/232/232] [busybox] Running command:
sed -e 's/# CONFIG_BBCONFIG is not set/CONFIG_BBCONFIG=y/' -i .config 
0:15-07-04 07:56:26 [21/232/232] [busybox] Running command:
sed -e 's/# CONFIG_FEATURE_COMPRESS_BBCONFIG is not set/CONFIG_FEATURE_COMPRESS_BBCONFIG=y/' -i .config 
0:15-07-04 07:56:26 [21/232/232] [busybox] Running command:
sed -e 's/# CONFIG_FEATURE_MOUNT_HELPERS is not set/CONFIG_FEATURE_MOUNT_HELPERS=y/' -i .config 
0:15-07-04 07:56:27 [21/232/232] [busybox] Running build-commands
0:15-07-04 07:56:27 [21/232/232] [busybox] Running command:
make KCONFIG_NOTIMESTAMP=1 
0:15-07-04 07:56:46 [21/232/232] [busybox] Running install-commands
0:15-07-04 07:56:46 [21/232/232] [busybox] Running command:
if [ "$PREFIX" = /usr ]; then PREFIX=; fi &&
  make CONFIG_PREFIX="$DESTDIR$PREFIX" KCONFIG_NOTIMESTAMP=1 install &&
  chmod 6755 "$DESTDIR$PREFIX"/bin/busybox
 
0:15-07-04 07:56:53 [21/232/232] [busybox] Running command:
mkdir -p "$DESTDIR"/etc 
0:15-07-04 07:56:53 [21/232/232] [busybox] Running command:
cat << EOF > "$DESTDIR/etc/man.conf"
# This file is used by man to provide a manpath for those without one by
# examining their PATH environment variable.
#
# Lines beginning with `#' are comments and are ignored. Any combination of
# tabs or spaces may be used as `whitespace' separators.

MANDATORY_MANPATH                       /usr/man
MANDATORY_MANPATH                       /usr/share/man
MANDATORY_MANPATH                       /usr/local/share/man
EOF
 
0:15-07-04 07:56:54 [21/232/232] [busybox] Running strip-commands
0:15-07-04 07:56:54 [21/232/232] [busybox] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 07:56:54 [21/232/232] [busybox] Creating cache artifact 
0:15-07-04 07:56:55 [21/232/232] [busybox] Now cached as busybox.d89b49968293ffee169d8bd648197f15869c56595d95d36cafb468c343ece402
0:15-07-04 07:56:56 [21/232/232] [busybox] Cleaned up /root/.cache/ybd/tmp/tmp1cnl5S
0:15-07-04 07:56:56 [21/232/232] [busybox] Elapsed time 00:00:53
0:15-07-04 07:56:56 [21/232/232] [build-essential] Installing busybox.d89b49968293ffee169d8bd648197f15869c56595d95d36cafb468c343ece402 
0:15-07-04 07:56:56 [21/232/232] [gcc] Starting assembly 
0:15-07-04 07:56:56 [21/232/232] [gcc] Installing stage2-make.1a3ddf3d8112e26bb8ac73b4a991b70946e1cc9e340eeb1c82962e68f3a7ec2b 
0:15-07-04 07:56:56 [21/232/232] [gcc] Installing zlib.417fa73fa8876c0f59ac9723e408b06ca97de1e578ec4277a4fd3a09073bc15d 
0:15-07-04 07:56:57 [21/232/232] [gcc] Installing stage2-gawk.12efca73ffd0d1a68df93bad69690a84902665163d2670f4045bc88617cbfa95 
0:15-07-04 07:56:57 [21/232/232] [gcc] Installing stage2-gcc.21e9e19fb8d1834ca3f259c4f605ce75f4d8998e1d95cb913989dfdf23564853 
0:15-07-04 07:56:57 [21/232/232] [gcc] Installing stage2-binutils.3dc2f69a2963a95bc818328d78fc57b989ec1e3243b53404661a831af5251800 
0:15-07-04 07:56:57 [21/232/232] [gcc] Installing stage2-reset-specs.5a04e9fe687182a751891c05f082df35066f248ae2761ba44eb1b5c53cfe85ef 
0:15-07-04 07:56:57 [21/232/232] [m4-tarball] Starting assembly 
0:15-07-04 07:56:57 [21/232/232] [m4-tarball] Installing stage2-fhs-dirs.26c4d487d57d7d53764405cb21dde54d9fb53868e086723da75d261e9432ad10 
0:15-07-04 07:56:57 [21/232/232] [m4-tarball] Installing stage2-linux-api-headers.2924aca6ee4871cf8d19ab77f35e1b5599bed435b02e4c884a9b59e34491d4bb 
0:15-07-04 07:56:57 [21/232/232] [m4-tarball] Installing stage2-glibc.97579f45b08fa08c93d992552a17395e9641c7fe9a6bccfaee43a50a906c635b 
0:15-07-04 07:56:57 [21/232/232] [m4-tarball] Installing stage2-binutils.3dc2f69a2963a95bc818328d78fc57b989ec1e3243b53404661a831af5251800 
0:15-07-04 07:56:57 [21/232/232] [m4-tarball] Installing stage2-gcc.21e9e19fb8d1834ca3f259c4f605ce75f4d8998e1d95cb913989dfdf23564853 
0:15-07-04 07:56:57 [21/232/232] [m4-tarball] Installing stage2-gawk.12efca73ffd0d1a68df93bad69690a84902665163d2670f4045bc88617cbfa95 
0:15-07-04 07:56:57 [21/232/232] [m4-tarball] Installing stage2-busybox.2288420234b76a4c9fb4ab8acbf40e6b91ea5a30f49afce9b793ed2e572f7574 
0:15-07-04 07:56:58 [21/232/232] [m4-tarball] Installing stage2-reset-specs.5a04e9fe687182a751891c05f082df35066f248ae2761ba44eb1b5c53cfe85ef 
0:15-07-04 07:56:58 [21/232/232] [m4-tarball] Installing glibc.0318edafdc6fc6832aed2c94c7704f6e08234582614f7efd61f7c01aafc46d6d 
0:15-07-04 07:56:58 [21/232/232] [m4-tarball] Installing stage2-make.1a3ddf3d8112e26bb8ac73b4a991b70946e1cc9e340eeb1c82962e68f3a7ec2b 
0:15-07-04 07:56:58 [22/232/232] [m4-tarball] Start build 
0:15-07-04 07:56:58 [22/232/232] [m4-tarball] Git checkout upstream:m4-tarball in /root/.cache/ybd/tmp/tmpT76m5T/m4-tarball.build 
0:15-07-04 07:56:59 [22/232/232] [m4-tarball] Upstream version 23c11479 m4-1.4.17 (m4-1.4.17 + 0 commits) 
0:15-07-04 07:56:59 [22/232/232] [m4-tarball] Logging build commands to /root/.cache/ybd/artifacts/m4-tarball.7c876f611fe465a13a4734642f8c272fdd083372ef8f87e2a76734e2b061cf65.build-log.0 
0:15-07-04 07:56:59 [22/232/232] [m4-tarball] Running configure-commands
0:15-07-04 07:56:59 [22/232/232] [m4-tarball] Running command:
./configure --prefix="$PREFIX" --disable-gcc-warnings 
WARNING: Unable to set filesystem_writable_paths=['m4-tarball.build', 'm4-tarball.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 07:57:33 [22/232/232] [m4-tarball] Running build-commands
0:15-07-04 07:57:33 [22/232/232] [m4-tarball] Running command:
make 
0:15-07-04 07:57:38 [22/232/232] [m4-tarball] Running install-commands
0:15-07-04 07:57:38 [22/232/232] [m4-tarball] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 07:57:39 [22/232/232] [m4-tarball] Running strip-commands
0:15-07-04 07:57:39 [22/232/232] [m4-tarball] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 07:57:40 [22/232/232] [m4-tarball] Creating cache artifact 
0:15-07-04 07:57:41 [22/232/232] [m4-tarball] Now cached as m4-tarball.7c876f611fe465a13a4734642f8c272fdd083372ef8f87e2a76734e2b061cf65
0:15-07-04 07:57:41 [22/232/232] [m4-tarball] Cleaned up /root/.cache/ybd/tmp/tmpT76m5T
0:15-07-04 07:57:41 [22/232/232] [m4-tarball] Elapsed time 00:00:44
0:15-07-04 07:57:41 [22/232/232] [gcc] Installing m4-tarball.7c876f611fe465a13a4734642f8c272fdd083372ef8f87e2a76734e2b061cf65 
0:15-07-04 07:57:41 [22/232/232] [gcc] Installing stage2-fhs-dirs.26c4d487d57d7d53764405cb21dde54d9fb53868e086723da75d261e9432ad10 
0:15-07-04 07:57:41 [22/232/232] [gcc] Installing stage2-busybox.2288420234b76a4c9fb4ab8acbf40e6b91ea5a30f49afce9b793ed2e572f7574 
0:15-07-04 07:57:41 [23/232/232] [gcc] Start build 
0:15-07-04 07:58:19 [23/232/232] [gcc] Git checkout upstream:gcc-tarball in /root/.cache/ybd/tmp/tmprvCgbG/gcc.build 
0:15-07-04 07:58:19 [23/232/232] [gcc] Upstream version b3c9b176 (No tag found) 
0:15-07-04 07:58:25 [23/232/232] [gcc] Logging build commands to /root/.cache/ybd/artifacts/gcc.c707194a2c12ab420155e44940db6c8ddc5eee9b2802393fe511ed87b3aec160.build-log.0 
0:15-07-04 07:58:25 [23/232/232] [gcc] Running configure-commands
0:15-07-04 07:58:25 [23/232/232] [gcc] Running command:
mkdir o 
WARNING: Unable to set filesystem_writable_paths=['gcc.build', 'gcc.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 07:58:25 [23/232/232] [gcc] Running command:
case "$MORPH_ARCH" in
    armv7lhf) ARCH_FLAGS="--with-arch=armv7-a \
                          --with-cpu=cortex-a9 \
                          --with-tune=cortex-a9 \
                          --with-fpu=vfpv3-d16 \
                          --with-float=hard" ;;
    armv7*)   ARCH_FLAGS="--with-arch=armv7-a" ;;
esac

cd o && ../configure                                        \
          $ARCH_FLAGS                                       \
          --prefix="$PREFIX"                                \
  `# [1]` --libdir=$PREFIX/lib                              \
          --disable-bootstrap                               \
  `# [2]` --with-system-zlib                                \
  `# [3]` --disable-multilib                                \
          --enable-languages=c,c++,fortran
 
0:15-07-04 07:58:30 [23/232/232] [gcc] Running build-commands
0:15-07-04 07:58:30 [23/232/232] [gcc] Running command:
case "$MORPH_ARCH" in
    armv5*)   sed -i "s/--host=none/--host=armv5/" o/Makefile
              sed -i "s/--target=none/--target=armv5/" o/Makefile ;;
    armv7*)   sed -i "s/--host=none/--host=armv7a/" o/Makefile
              sed -i "s/--target=none/--target=armv7a/" o/Makefile ;;
esac
cd o && make
 
0:15-07-04 08:04:06 [23/232/232] [gcc] Running install-commands
0:15-07-04 08:04:06 [23/232/232] [gcc] Running command:
cd o && make DESTDIR="$DESTDIR" install 
0:15-07-04 08:04:18 [23/232/232] [gcc] Running command:
ln -s gcc "$DESTDIR/$PREFIX/bin/cc" 
0:15-07-04 08:04:18 [23/232/232] [gcc] Running command:
for fortran_alias in f77 f90 f95; do
    ln -s gfortran "$DESTDIR/$PREFIX/bin/$fortran_alias"
done
 
0:15-07-04 08:04:18 [23/232/232] [gcc] Running strip-commands
0:15-07-04 08:04:18 [23/232/232] [gcc] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:04:23 [23/232/232] [gcc] Creating cache artifact 
0:15-07-04 08:10:23 [23/232/232] [gcc] Now cached as gcc.c707194a2c12ab420155e44940db6c8ddc5eee9b2802393fe511ed87b3aec160
0:15-07-04 08:10:37 [23/232/232] [gcc] Cleaned up /root/.cache/ybd/tmp/tmprvCgbG
0:15-07-04 08:10:37 [23/232/232] [gcc] Elapsed time 00:13:41
0:15-07-04 08:10:37 [23/232/232] [build-essential] Installing gcc.c707194a2c12ab420155e44940db6c8ddc5eee9b2802393fe511ed87b3aec160 
0:15-07-04 08:10:45 [23/232/232] [binutils] Starting assembly 
0:15-07-04 08:10:45 [23/232/232] [binutils] Installing stage2-make.1a3ddf3d8112e26bb8ac73b4a991b70946e1cc9e340eeb1c82962e68f3a7ec2b 
0:15-07-04 08:10:45 [23/232/232] [binutils] Installing stage2-binutils.3dc2f69a2963a95bc818328d78fc57b989ec1e3243b53404661a831af5251800 
0:15-07-04 08:10:45 [23/232/232] [binutils] Installing stage2-gawk.12efca73ffd0d1a68df93bad69690a84902665163d2670f4045bc88617cbfa95 
0:15-07-04 08:10:45 [23/232/232] [binutils] Installing stage2-reset-specs.5a04e9fe687182a751891c05f082df35066f248ae2761ba44eb1b5c53cfe85ef 
0:15-07-04 08:10:45 [23/232/232] [binutils] Installing glibc.0318edafdc6fc6832aed2c94c7704f6e08234582614f7efd61f7c01aafc46d6d 
0:15-07-04 08:10:46 [23/232/232] [binutils] Installing stage2-busybox.2288420234b76a4c9fb4ab8acbf40e6b91ea5a30f49afce9b793ed2e572f7574 
0:15-07-04 08:10:46 [23/232/232] [binutils] Installing zlib.417fa73fa8876c0f59ac9723e408b06ca97de1e578ec4277a4fd3a09073bc15d 
0:15-07-04 08:10:46 [23/232/232] [binutils] Installing stage2-gcc.21e9e19fb8d1834ca3f259c4f605ce75f4d8998e1d95cb913989dfdf23564853 
0:15-07-04 08:10:46 [23/232/232] [binutils] Installing stage2-fhs-dirs.26c4d487d57d7d53764405cb21dde54d9fb53868e086723da75d261e9432ad10 
0:15-07-04 08:10:46 [24/232/232] [binutils] Start build 
0:15-07-04 08:10:50 [24/232/232] [binutils] Git checkout upstream:binutils-tarball in /root/.cache/ybd/tmp/tmpIl9VsK/binutils.build 
0:15-07-04 08:10:50 [24/232/232] [binutils] Upstream version 5500a97a binutils-2.25 (binutils-2.25 + 0 commits) 
0:15-07-04 08:10:51 [24/232/232] [binutils] Logging build commands to /root/.cache/ybd/artifacts/binutils.b19993a742c1e945794f61e13e547623fbfc4af372bfbbad441296e84881b0ee.build-log.0 
0:15-07-04 08:10:51 [24/232/232] [binutils] Running configure-commands
0:15-07-04 08:10:51 [24/232/232] [binutils] Running command:
./configure --prefix="$PREFIX" --disable-nls --disable-werror \
  --with-system-zlib
 
WARNING: Unable to set filesystem_writable_paths=['binutils.build', 'binutils.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:10:55 [24/232/232] [binutils] Running build-commands
0:15-07-04 08:10:55 [24/232/232] [binutils] Running command:
make 
0:15-07-04 08:12:13 [24/232/232] [binutils] Running install-commands
0:15-07-04 08:12:13 [24/232/232] [binutils] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 08:12:17 [24/232/232] [binutils] Running strip-commands
0:15-07-04 08:12:17 [24/232/232] [binutils] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:12:18 [24/232/232] [binutils] Creating cache artifact 
0:15-07-04 08:13:04 [24/232/232] [binutils] Now cached as binutils.b19993a742c1e945794f61e13e547623fbfc4af372bfbbad441296e84881b0ee
0:15-07-04 08:13:07 [24/232/232] [binutils] Cleaned up /root/.cache/ybd/tmp/tmpIl9VsK
0:15-07-04 08:13:07 [24/232/232] [binutils] Elapsed time 00:02:22
0:15-07-04 08:13:07 [24/232/232] [build-essential] Installing binutils.b19993a742c1e945794f61e13e547623fbfc4af372bfbbad441296e84881b0ee 
0:15-07-04 08:13:08 [24/232/232] [gawk] Starting assembly 
0:15-07-04 08:13:08 [24/232/232] [gawk] Installing stage2-gawk.12efca73ffd0d1a68df93bad69690a84902665163d2670f4045bc88617cbfa95 
0:15-07-04 08:13:09 [24/232/232] [gawk] Installing stage2-reset-specs.5a04e9fe687182a751891c05f082df35066f248ae2761ba44eb1b5c53cfe85ef 
0:15-07-04 08:13:09 [24/232/232] [gawk] Installing stage2-gcc.21e9e19fb8d1834ca3f259c4f605ce75f4d8998e1d95cb913989dfdf23564853 
0:15-07-04 08:13:09 [24/232/232] [gawk] Installing stage2-busybox.2288420234b76a4c9fb4ab8acbf40e6b91ea5a30f49afce9b793ed2e572f7574 
0:15-07-04 08:13:09 [24/232/232] [gawk] Installing stage2-binutils.3dc2f69a2963a95bc818328d78fc57b989ec1e3243b53404661a831af5251800 
0:15-07-04 08:13:09 [24/232/232] [gawk] Installing glibc.0318edafdc6fc6832aed2c94c7704f6e08234582614f7efd61f7c01aafc46d6d 
0:15-07-04 08:13:09 [24/232/232] [gawk] Installing stage2-make.1a3ddf3d8112e26bb8ac73b4a991b70946e1cc9e340eeb1c82962e68f3a7ec2b 
0:15-07-04 08:13:09 [24/232/232] [gawk] Installing stage2-fhs-dirs.26c4d487d57d7d53764405cb21dde54d9fb53868e086723da75d261e9432ad10 
0:15-07-04 08:13:09 [25/232/232] [gawk] Start build 
0:15-07-04 08:13:10 [25/232/232] [gawk] Git checkout upstream:gawk in /root/.cache/ybd/tmp/tmppW7tlr/gawk.build 
0:15-07-04 08:13:11 [25/232/232] [gawk] Upstream version dc5af665 gawk-4.1.1 (gawk-4.1.1 + 0 commits) 
0:15-07-04 08:13:11 [25/232/232] [gawk] Logging build commands to /root/.cache/ybd/artifacts/gawk.81f3c5fada90969d73f65428ccc4bc96f5e204bbe2b169c7f7174b924627bda2.build-log.0 
0:15-07-04 08:13:11 [25/232/232] [gawk] Running configure-commands
0:15-07-04 08:13:11 [25/232/232] [gawk] Running command:
./configure --prefix="$PREFIX" --disable-nls 
WARNING: Unable to set filesystem_writable_paths=['gawk.build', 'gawk.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:13:28 [25/232/232] [gawk] Running build-commands
0:15-07-04 08:13:28 [25/232/232] [gawk] Running command:
make 
0:15-07-04 08:13:37 [25/232/232] [gawk] Running install-commands
0:15-07-04 08:13:37 [25/232/232] [gawk] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 08:13:39 [25/232/232] [gawk] Running strip-commands
0:15-07-04 08:13:39 [25/232/232] [gawk] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:13:39 [25/232/232] [gawk] Creating cache artifact 
0:15-07-04 08:13:43 [25/232/232] [gawk] Now cached as gawk.81f3c5fada90969d73f65428ccc4bc96f5e204bbe2b169c7f7174b924627bda2
0:15-07-04 08:13:44 [25/232/232] [gawk] Cleaned up /root/.cache/ybd/tmp/tmppW7tlr
0:15-07-04 08:13:44 [25/232/232] [gawk] Elapsed time 00:00:35
0:15-07-04 08:13:44 [25/232/232] [build-essential] Installing gawk.81f3c5fada90969d73f65428ccc4bc96f5e204bbe2b169c7f7174b924627bda2 
0:15-07-04 08:13:44 [26/232/232] [build-essential] Start build 
0:15-07-04 08:13:44 [26/232/232] [build-essential] Logging build commands to /root/.cache/ybd/artifacts/build-essential.84d38c64321789981ff73617b6c12b553e153fe606e49d2b19bd304db9fcaae8.build-log.0 
0:15-07-04 08:13:44 [26/232/232] [build-essential] Running strip-commands
0:15-07-04 08:13:44 [26/232/232] [build-essential] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
WARNING: Unable to set filesystem_writable_paths=['build-essential.build', 'build-essential.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:13:44 [26/232/232] [build-essential] Creating cache artifact 
0:15-07-04 08:13:44 [26/232/232] [build-essential] Now cached as build-essential.84d38c64321789981ff73617b6c12b553e153fe606e49d2b19bd304db9fcaae8
0:15-07-04 08:13:44 [26/232/232] [build-essential] Cleaned up /root/.cache/ybd/tmp/tmp7UWrLd
0:15-07-04 08:13:44 [26/232/232] [build-essential] Elapsed time 01:01:15
0:15-07-04 08:13:44 [26/232/232] [build-system-armv8l64] Installing build-essential.84d38c64321789981ff73617b6c12b553e153fe606e49d2b19bd304db9fcaae8 
0:15-07-04 08:13:45 [26/232/232] [morph-utils] Starting assembly 
0:15-07-04 08:13:45 [26/232/232] [cmdtest] Starting assembly 
0:15-07-04 08:13:45 [26/232/232] [python-pygobject] Starting assembly 
0:15-07-04 08:13:45 [26/232/232] [pygobject] Starting assembly 
0:15-07-04 08:13:45 [26/232/232] [core] Starting assembly 
0:15-07-04 08:13:45 [26/232/232] [ca-certificates] Starting assembly 
0:15-07-04 08:13:45 [26/232/232] [automake] Starting assembly 
0:15-07-04 08:13:45 [26/232/232] [perl] Starting assembly 
0:15-07-04 08:13:45 [26/232/232] [gdbm] Starting assembly 
0:15-07-04 08:13:45 [26/232/232] [gdbm] Installing build-essential.84d38c64321789981ff73617b6c12b553e153fe606e49d2b19bd304db9fcaae8 
0:15-07-04 08:13:46 [27/232/232] [gdbm] Start build 
0:15-07-04 08:13:46 [27/232/232] [gdbm] Git checkout upstream:gdbm-tarball in /root/.cache/ybd/tmp/tmp6XPTuB/gdbm.build 
0:15-07-04 08:13:46 [27/232/232] [gdbm] Upstream version e5faeaaf gdbm-1.11 (gdbm-1.11 + 0 commits) 
0:15-07-04 08:13:46 [27/232/232] [gdbm] Logging build commands to /root/.cache/ybd/artifacts/gdbm.1994cf2e734d2a688919e18ad21125fd87df2ee1fe28541c696bebd4624da803.build-log.0 
0:15-07-04 08:13:46 [27/232/232] [gdbm] Running configure-commands
0:15-07-04 08:13:46 [27/232/232] [gdbm] Running command:
./configure --prefix="$PREFIX" --enable-libgdbm-compat --disable-nls 
WARNING: Unable to set filesystem_writable_paths=['gdbm.build', 'gdbm.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:13:53 [27/232/232] [gdbm] Running build-commands
0:15-07-04 08:13:53 [27/232/232] [gdbm] Running command:
make MANS= INFO_DEPS= 
0:15-07-04 08:13:56 [27/232/232] [gdbm] Running install-commands
0:15-07-04 08:13:56 [27/232/232] [gdbm] Running command:
make MANS= INFO_DEPS= DESTDIR="$DESTDIR" install 
0:15-07-04 08:13:57 [27/232/232] [gdbm] Running strip-commands
0:15-07-04 08:13:57 [27/232/232] [gdbm] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:13:57 [27/232/232] [gdbm] Creating cache artifact 
0:15-07-04 08:13:59 [27/232/232] [gdbm] Now cached as gdbm.1994cf2e734d2a688919e18ad21125fd87df2ee1fe28541c696bebd4624da803
0:15-07-04 08:13:59 [27/232/232] [gdbm] Cleaned up /root/.cache/ybd/tmp/tmp6XPTuB
0:15-07-04 08:13:59 [27/232/232] [gdbm] Elapsed time 00:00:13
0:15-07-04 08:13:59 [27/232/232] [perl] Installing gdbm.1994cf2e734d2a688919e18ad21125fd87df2ee1fe28541c696bebd4624da803 
0:15-07-04 08:13:59 [28/232/232] [perl] Start build 
0:15-07-04 08:14:04 [28/232/232] [perl] Git checkout upstream:perl in /root/.cache/ybd/tmp/tmpYlG2sX/perl.build 
0:15-07-04 08:14:04 [28/232/232] [perl] Upstream version 78f9a3c8 v5.14.2-11-g78f9a3c (v5.14.2 + 11 commits) 
0:15-07-04 08:14:04 [28/232/232] [perl] Logging build commands to /root/.cache/ybd/artifacts/perl.e2432e758e9c75fa62a0b6bd9a73d45aafb1a1cc15907bf89afac73650d9e940.build-log.0 
0:15-07-04 08:14:04 [28/232/232] [perl] Running configure-commands
0:15-07-04 08:14:04 [28/232/232] [perl] Running command:
sh Configure -des -Dprefix="$PREFIX" -Darchlib="$PREFIX/lib/perl" -Dprivlib="$PREFIX/share/perl" -Dbin="$PREFIX/bin" -Dscriptdir="$PREFIX/bin" -Dman1dir="$PREFIX/share/man/man1" -Dman3dir="$PREFIX/share/man/man3" -Dsiteprefix="$PREFIX" -Dsitearch="$PREFIX/lib/perl" -Dsitelib="$PREFIX/share/perl" -Dsitebin="$PREFIX/bin" -Dsitescript="$PREFIX/bin" -Dsiteman1dir="$PREFIX/share/man/man1" -Dsiteman3dir="$PREFIX/share/man/man3" -Dvendorprefix="$PREFIX" -Dvendorarch="$PREFIX/lib/perl" -Dvendorlib="$PREFIX/share/perl" -Dvendorbin="$PREFIX/bin" -Dvendorscript="$PREFIX/bin" -Dvendorman1dir="$PREFIX/share/man/man1" -Dvendorman3dir="$PREFIX/share/man/man3" -Dpager="$PREFIX/bin/less -isR" -Duseshrplib 
WARNING: Unable to set filesystem_writable_paths=['perl.build', 'perl.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:15:07 [28/232/232] [perl] Running build-commands
0:15-07-04 08:15:07 [28/232/232] [perl] Running command:
make 
0:15-07-04 08:23:13 [28/232/232] [perl] Running install-commands
0:15-07-04 08:23:13 [28/232/232] [perl] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 08:24:40 [28/232/232] [perl] Running strip-commands
0:15-07-04 08:24:40 [28/232/232] [perl] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:24:42 [28/232/232] [perl] Creating cache artifact 
0:15-07-04 08:25:13 [28/232/232] [perl] Now cached as perl.e2432e758e9c75fa62a0b6bd9a73d45aafb1a1cc15907bf89afac73650d9e940
0:15-07-04 08:25:15 [28/232/232] [perl] Cleaned up /root/.cache/ybd/tmp/tmpYlG2sX
0:15-07-04 08:25:15 [28/232/232] [perl] Elapsed time 00:11:30
0:15-07-04 08:25:15 [28/232/232] [automake] Installing perl.e2432e758e9c75fa62a0b6bd9a73d45aafb1a1cc15907bf89afac73650d9e940 
0:15-07-04 08:25:17 [28/232/232] [autoconf-tarball] Starting assembly 
0:15-07-04 08:25:17 [28/232/232] [autoconf-tarball] Installing perl.e2432e758e9c75fa62a0b6bd9a73d45aafb1a1cc15907bf89afac73650d9e940 
0:15-07-04 08:25:18 [29/232/232] [autoconf-tarball] Start build 
0:15-07-04 08:25:19 [29/232/232] [autoconf-tarball] Git checkout upstream:autoconf-tarball in /root/.cache/ybd/tmp/tmpN2QxLC/autoconf-tarball.build 
0:15-07-04 08:25:19 [29/232/232] [autoconf-tarball] Upstream version 55d1d2c3 autoconf-2.69 (autoconf-2.69 + 0 commits) 
0:15-07-04 08:25:19 [29/232/232] [autoconf-tarball] Logging build commands to /root/.cache/ybd/artifacts/autoconf-tarball.1bcd28601451cf9971f38e630544ede55ff333868210ee7440a746683d6a4022.build-log.0 
0:15-07-04 08:25:19 [29/232/232] [autoconf-tarball] Running configure-commands
0:15-07-04 08:25:19 [29/232/232] [autoconf-tarball] Running command:
./configure --prefix="$PREFIX" 
WARNING: Unable to set filesystem_writable_paths=['autoconf-tarball.build', 'autoconf-tarball.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:25:21 [29/232/232] [autoconf-tarball] Running build-commands
0:15-07-04 08:25:21 [29/232/232] [autoconf-tarball] Running command:
make 
0:15-07-04 08:25:24 [29/232/232] [autoconf-tarball] Running install-commands
0:15-07-04 08:25:24 [29/232/232] [autoconf-tarball] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 08:25:25 [29/232/232] [autoconf-tarball] Running strip-commands
0:15-07-04 08:25:25 [29/232/232] [autoconf-tarball] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:25:25 [29/232/232] [autoconf-tarball] Creating cache artifact 
0:15-07-04 08:25:26 [29/232/232] [autoconf-tarball] Now cached as autoconf-tarball.1bcd28601451cf9971f38e630544ede55ff333868210ee7440a746683d6a4022
0:15-07-04 08:25:27 [29/232/232] [autoconf-tarball] Cleaned up /root/.cache/ybd/tmp/tmpN2QxLC
0:15-07-04 08:25:27 [29/232/232] [autoconf-tarball] Elapsed time 00:00:09
0:15-07-04 08:25:27 [29/232/232] [automake] Installing autoconf-tarball.1bcd28601451cf9971f38e630544ede55ff333868210ee7440a746683d6a4022 
0:15-07-04 08:25:27 [29/232/232] [texinfo-tarball] Starting assembly 
0:15-07-04 08:25:27 [29/232/232] [ncurses] Starting assembly 
0:15-07-04 08:25:27 [29/232/232] [ncurses] Installing build-essential.84d38c64321789981ff73617b6c12b553e153fe606e49d2b19bd304db9fcaae8 
0:15-07-04 08:25:28 [30/232/232] [ncurses] Start build 
0:15-07-04 08:25:28 [30/232/232] [ncurses] Git checkout upstream:ncurses in /root/.cache/ybd/tmp/tmpuu0pSz/ncurses.build 
0:15-07-04 08:25:29 [30/232/232] [ncurses] Upstream version f67398af ncurses-5.9-20150131 (ncurses-5.9-20150131 + 0 commits) 
0:15-07-04 08:25:29 [30/232/232] [ncurses] Logging build commands to /root/.cache/ybd/artifacts/ncurses.ffb92125a2d0087c5bf4fb1466602f26908a2be6dff883e13770a7419047f5ba.build-log.0 
0:15-07-04 08:25:29 [30/232/232] [ncurses] Running configure-commands
0:15-07-04 08:25:29 [30/232/232] [ncurses] Running command:
LDCONFIG=true ./configure --with-shared --without-debug --enable-widec 
WARNING: Unable to set filesystem_writable_paths=['ncurses.build', 'ncurses.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:25:43 [30/232/232] [ncurses] Running build-commands
0:15-07-04 08:25:43 [30/232/232] [ncurses] Running command:
make 
0:15-07-04 08:26:06 [30/232/232] [ncurses] Running install-commands
0:15-07-04 08:26:06 [30/232/232] [ncurses] Running command:
make  DESTDIR="$DESTDIR" install 
0:15-07-04 08:26:12 [30/232/232] [ncurses] Running post-install-commands
0:15-07-04 08:26:12 [30/232/232] [ncurses] Running command:
# lfs recommends some alterations for software that looks for
# libcurses instead of libncurses
# it's more convenient to have this in a separate file than the
# morph as less strings have to be escaped and comments are possible

# some software expects to find libcurses in /lib
mkdir -p "$DESTDIR/lib"
mv "$DESTDIR"/"$PREFIX"/lib/libncursesw.so.5* "$DESTDIR"/lib
ln -sf ../../lib/libncursesw.so.5 "$DESTDIR"/"$PREFIX"/lib/libncursesw.so

# some linker tricks for libraries that look for non-wide character
# versions of ncurses
for lib in ncurses form panel menu; do
    # remove non-wide shared object
    rm -f "$DESTDIR/${PREFIX}/lib/lib${lib}.so"
    # use a linker script to find the wide character variant
    echo "INPUT(-l${lib}w)" >"$DESTDIR/${PREFIX}/lib/lib${lib}.so"
    # symlink the non-shared library
    ln -sf "lib${lib}w.a" "$DESTDIR/${PREFIX}/lib/lib${lib}.a"
done
ln -sf libncurses++w.a "$DESTDIR/${PREFIX}/lib/libncurses++.a"

# redirect software that looks for libcurses
rm -f "$DESTDIR/${PREFIX}/lib/libcursesw.so"
echo "INPUT(-lncursesw)" >"$DESTDIR/${PREFIX}/lib/libcursesw.so"
ln -sf libncurses.so "$DESTDIR/${PREFIX}/lib/libcurses.so"
ln -sf libncursesw.a "$DESTDIR/${PREFIX}/lib/libcursesw.a"
ln -sf libncurses.a "$DESTDIR/${PREFIX}/lib/libcurses.a"

# install documentation
mkdir -p "$DESTDIR/${PREFIX}/share/doc/ncurses"
cp -R doc/* "$DESTDIR/${PREFIX}/share/doc/ncurses"

# remove 'clear' and 'reset' executables, busybox provides them
rm -f "$DESTDIR/${PREFIX}/bin/clear" "$DESTDIR/${PREFIX}/bin/reset"
 
0:15-07-04 08:26:12 [30/232/232] [ncurses] Running strip-commands
0:15-07-04 08:26:12 [30/232/232] [ncurses] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:26:13 [30/232/232] [ncurses] Creating cache artifact 
0:15-07-04 08:26:19 [30/232/232] [ncurses] Now cached as ncurses.ffb92125a2d0087c5bf4fb1466602f26908a2be6dff883e13770a7419047f5ba
0:15-07-04 08:26:20 [30/232/232] [ncurses] Cleaned up /root/.cache/ybd/tmp/tmpuu0pSz
0:15-07-04 08:26:20 [30/232/232] [ncurses] Elapsed time 00:00:52
0:15-07-04 08:26:20 [30/232/232] [texinfo-tarball] Installing ncurses.ffb92125a2d0087c5bf4fb1466602f26908a2be6dff883e13770a7419047f5ba 
0:15-07-04 08:26:21 [30/232/232] [texinfo-tarball] Installing perl.e2432e758e9c75fa62a0b6bd9a73d45aafb1a1cc15907bf89afac73650d9e940 
0:15-07-04 08:26:22 [31/232/232] [texinfo-tarball] Start build 
0:15-07-04 08:26:24 [31/232/232] [texinfo-tarball] Git checkout upstream:texinfo-tarball in /root/.cache/ybd/tmp/tmpzaVV3d/texinfo-tarball.build 
0:15-07-04 08:26:24 [31/232/232] [texinfo-tarball] Upstream version 6a55f074 texinfo-5.2 (texinfo-5.2 + 0 commits) 
0:15-07-04 08:26:24 [31/232/232] [texinfo-tarball] Logging build commands to /root/.cache/ybd/artifacts/texinfo-tarball.d05a7023a057f2440191ee906670f44bd865b2e6f295b7bf1bc6d5b06d922e62.build-log.0 
0:15-07-04 08:26:24 [31/232/232] [texinfo-tarball] Running configure-commands
0:15-07-04 08:26:24 [31/232/232] [texinfo-tarball] Running command:
./configure --prefix="$PREFIX" 
WARNING: Unable to set filesystem_writable_paths=['texinfo-tarball.build', 'texinfo-tarball.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:26:55 [31/232/232] [texinfo-tarball] Running build-commands
0:15-07-04 08:26:55 [31/232/232] [texinfo-tarball] Running command:
make 
0:15-07-04 08:27:30 [31/232/232] [texinfo-tarball] Running install-commands
0:15-07-04 08:27:30 [31/232/232] [texinfo-tarball] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 08:27:32 [31/232/232] [texinfo-tarball] Running command:
make DESTDIR="$DESTDIR" TEXMF="$PREFIX/share/texmf" install-tex 
0:15-07-04 08:27:32 [31/232/232] [texinfo-tarball] Running strip-commands
0:15-07-04 08:27:32 [31/232/232] [texinfo-tarball] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:27:32 [31/232/232] [texinfo-tarball] Creating cache artifact 
0:15-07-04 08:27:37 [31/232/232] [texinfo-tarball] Now cached as texinfo-tarball.d05a7023a057f2440191ee906670f44bd865b2e6f295b7bf1bc6d5b06d922e62
0:15-07-04 08:27:38 [31/232/232] [texinfo-tarball] Cleaned up /root/.cache/ybd/tmp/tmpzaVV3d
0:15-07-04 08:27:38 [31/232/232] [texinfo-tarball] Elapsed time 00:02:11
0:15-07-04 08:27:38 [31/232/232] [automake] Installing texinfo-tarball.d05a7023a057f2440191ee906670f44bd865b2e6f295b7bf1bc6d5b06d922e62 
0:15-07-04 08:27:39 [32/232/232] [automake] Start build 
0:15-07-04 08:27:40 [32/232/232] [automake] Git checkout upstream:automake in /root/.cache/ybd/tmp/tmplq06Pf/automake.build 
0:15-07-04 08:27:40 [32/232/232] [automake] Upstream version db43dd47 v1.15 (v1.15 + 0 commits) 
0:15-07-04 08:27:40 [32/232/232] [automake] Logging build commands to /root/.cache/ybd/artifacts/automake.5ecea1e1e8854cd5b57e2dd1cd8a1be491d56d19cacfaf6928fb37b65608ff35.build-log.0 
0:15-07-04 08:27:40 [32/232/232] [automake] Running configure-commands
0:15-07-04 08:27:40 [32/232/232] [automake] Running command:
./bootstrap.sh 
WARNING: Unable to set filesystem_writable_paths=['automake.build', 'automake.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:27:48 [32/232/232] [automake] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 08:27:51 [32/232/232] [automake] Running build-commands
0:15-07-04 08:27:51 [32/232/232] [automake] Running command:
unset DESTDIR; make 
0:15-07-04 08:28:09 [32/232/232] [automake] Running install-commands
0:15-07-04 08:28:09 [32/232/232] [automake] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 08:28:10 [32/232/232] [automake] Running strip-commands
0:15-07-04 08:28:10 [32/232/232] [automake] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:28:11 [32/232/232] [automake] Creating cache artifact 
0:15-07-04 08:28:11 [32/232/232] [automake] Now cached as automake.5ecea1e1e8854cd5b57e2dd1cd8a1be491d56d19cacfaf6928fb37b65608ff35
0:15-07-04 08:28:12 [32/232/232] [automake] Cleaned up /root/.cache/ybd/tmp/tmplq06Pf
0:15-07-04 08:28:12 [32/232/232] [automake] Elapsed time 00:14:27
0:15-07-04 08:28:12 [32/232/232] [ca-certificates] Installing automake.5ecea1e1e8854cd5b57e2dd1cd8a1be491d56d19cacfaf6928fb37b65608ff35 
0:15-07-04 08:28:14 [32/232/232] [cpython] Starting assembly 
0:15-07-04 08:28:14 [32/232/232] [sqlite3] Starting assembly 
0:15-07-04 08:28:14 [32/232/232] [sqlite3] Installing build-essential.84d38c64321789981ff73617b6c12b553e153fe606e49d2b19bd304db9fcaae8 
0:15-07-04 08:28:15 [33/232/232] [sqlite3] Start build 
0:15-07-04 08:28:15 [33/232/232] [sqlite3] Git checkout upstream:sqlite3 in /root/.cache/ybd/tmp/tmp_wjtFw/sqlite3.build 
0:15-07-04 08:28:15 [33/232/232] [sqlite3] Upstream version 24adc227 sqlite-autoconf-3080801 (sqlite-autoconf-3080801 + 0 commits) 
0:15-07-04 08:28:15 [33/232/232] [sqlite3] Logging build commands to /root/.cache/ybd/artifacts/sqlite3.a0d64ce8e08e02be45bbd4b7b9cf79d78cd97ef9ec7e120882a7e6f65fcd8962.build-log.0 
0:15-07-04 08:28:15 [33/232/232] [sqlite3] Running configure-commands
0:15-07-04 08:28:15 [33/232/232] [sqlite3] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['sqlite3.build', 'sqlite3.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:28:15 [33/232/232] [sqlite3] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 08:28:22 [33/232/232] [sqlite3] Running build-commands
0:15-07-04 08:28:22 [33/232/232] [sqlite3] Running command:
make 
0:15-07-04 08:30:51 [33/232/232] [sqlite3] Running install-commands
0:15-07-04 08:30:51 [33/232/232] [sqlite3] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 08:30:52 [33/232/232] [sqlite3] Running strip-commands
0:15-07-04 08:30:52 [33/232/232] [sqlite3] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:30:52 [33/232/232] [sqlite3] Creating cache artifact 
0:15-07-04 08:31:08 [33/232/232] [sqlite3] Now cached as sqlite3.a0d64ce8e08e02be45bbd4b7b9cf79d78cd97ef9ec7e120882a7e6f65fcd8962
0:15-07-04 08:31:08 [33/232/232] [sqlite3] Cleaned up /root/.cache/ybd/tmp/tmp_wjtFw
0:15-07-04 08:31:08 [33/232/232] [sqlite3] Elapsed time 00:02:53
0:15-07-04 08:31:08 [33/232/232] [cpython] Installing sqlite3.a0d64ce8e08e02be45bbd4b7b9cf79d78cd97ef9ec7e120882a7e6f65fcd8962 
0:15-07-04 08:31:09 [33/232/232] [bzip2] Starting assembly 
0:15-07-04 08:31:09 [33/232/232] [bzip2] Installing build-essential.84d38c64321789981ff73617b6c12b553e153fe606e49d2b19bd304db9fcaae8 
0:15-07-04 08:31:09 [34/232/232] [bzip2] Start build 
0:15-07-04 08:31:10 [34/232/232] [bzip2] Git checkout upstream:bzip2 in /root/.cache/ybd/tmp/tmpio2YGg/bzip2.build 
0:15-07-04 08:31:10 [34/232/232] [bzip2] Upstream version 8deafa68 (No tag found) 
0:15-07-04 08:31:10 [34/232/232] [bzip2] Logging build commands to /root/.cache/ybd/artifacts/bzip2.80c3c54985fa98f2f66c635a75df2caebe440509fae8d7b3319e5e5499546ee2.build-log.0 
0:15-07-04 08:31:10 [34/232/232] [bzip2] Running configure-commands
0:15-07-04 08:31:10 [34/232/232] [bzip2] Running command:
sed -i -rf bzip2.morph-makefix.sed Makefile 
WARNING: Unable to set filesystem_writable_paths=['bzip2.build', 'bzip2.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:31:10 [34/232/232] [bzip2] Running build-commands
0:15-07-04 08:31:10 [34/232/232] [bzip2] Running command:
make -f Makefile-libbz2_so 
0:15-07-04 08:31:16 [34/232/232] [bzip2] Running command:
make 
0:15-07-04 08:31:18 [34/232/232] [bzip2] Running install-commands
0:15-07-04 08:31:18 [34/232/232] [bzip2] Running command:
make DESTDIR="$DESTDIR" PREFIX="$PREFIX" install 
0:15-07-04 08:31:19 [34/232/232] [bzip2] Running command:
install libbz2.so* "$DESTDIR$PREFIX/lib" 
0:15-07-04 08:31:19 [34/232/232] [bzip2] Running strip-commands
0:15-07-04 08:31:19 [34/232/232] [bzip2] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:31:19 [34/232/232] [bzip2] Creating cache artifact 
0:15-07-04 08:31:21 [34/232/232] [bzip2] Now cached as bzip2.80c3c54985fa98f2f66c635a75df2caebe440509fae8d7b3319e5e5499546ee2
0:15-07-04 08:31:21 [34/232/232] [bzip2] Cleaned up /root/.cache/ybd/tmp/tmpio2YGg
0:15-07-04 08:31:21 [34/232/232] [bzip2] Elapsed time 00:00:12
0:15-07-04 08:31:21 [34/232/232] [cpython] Installing bzip2.80c3c54985fa98f2f66c635a75df2caebe440509fae8d7b3319e5e5499546ee2 
0:15-07-04 08:31:21 [34/232/232] [openssl-new] Starting assembly 
0:15-07-04 08:31:21 [34/232/232] [openssl-new] Installing perl.e2432e758e9c75fa62a0b6bd9a73d45aafb1a1cc15907bf89afac73650d9e940 
0:15-07-04 08:31:23 [35/232/232] [openssl-new] Start build 
0:15-07-04 08:31:24 [35/232/232] [openssl-new] Git checkout upstream:openssl-new in /root/.cache/ybd/tmp/tmpc3yslV/openssl-new.build 
0:15-07-04 08:31:24 [35/232/232] [openssl-new] Upstream version 506c1068 OpenSSL_1_0_1m (OpenSSL_1_0_1m + 0 commits) 
0:15-07-04 08:31:25 [35/232/232] [openssl-new] Logging build commands to /root/.cache/ybd/artifacts/openssl-new.b7164bda7e7409dc23bcfc0bc8a9f9e537f7cc10303eb149fb4f53a084b6d69f.build-log.0 
0:15-07-04 08:31:25 [35/232/232] [openssl-new] Running configure-commands
0:15-07-04 08:31:25 [35/232/232] [openssl-new] Running command:
sed -i -e 's,^LIBNAMES=\\(.*\\) padlock \\(.*\\),LIBNAMES=\\1 \\2,g' engines/Makefile 
WARNING: Unable to set filesystem_writable_paths=['openssl-new.build', 'openssl-new.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:31:25 [35/232/232] [openssl-new] Running command:
if [ "$(uname -m)" = "ppc64" ]; then
    sh ./Configure linux-ppc64 --openssldir=/etc/ssl --prefix="${PREFIX-/usr}" --libdir=lib shared
else
    ./config --openssldir=/etc/ssl --prefix="${PREFIX-/usr}" --libdir=lib shared
fi
 
0:15-07-04 08:31:30 [35/232/232] [openssl-new] Running build-commands
0:15-07-04 08:31:30 [35/232/232] [openssl-new] Running command:
make 
0:15-07-04 08:36:00 [35/232/232] [openssl-new] Running install-commands
0:15-07-04 08:36:00 [35/232/232] [openssl-new] Running command:
make INSTALL_PREFIX="$DESTDIR" install_sw 
0:15-07-04 08:36:01 [35/232/232] [openssl-new] Running strip-commands
0:15-07-04 08:36:01 [35/232/232] [openssl-new] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:36:02 [35/232/232] [openssl-new] Creating cache artifact 
0:15-07-04 08:36:09 [35/232/232] [openssl-new] Now cached as openssl-new.b7164bda7e7409dc23bcfc0bc8a9f9e537f7cc10303eb149fb4f53a084b6d69f
0:15-07-04 08:36:10 [35/232/232] [openssl-new] Cleaned up /root/.cache/ybd/tmp/tmpc3yslV
0:15-07-04 08:36:10 [35/232/232] [openssl-new] Elapsed time 00:04:48
0:15-07-04 08:36:10 [35/232/232] [cpython] Installing openssl-new.b7164bda7e7409dc23bcfc0bc8a9f9e537f7cc10303eb149fb4f53a084b6d69f 
0:15-07-04 08:36:10 [35/232/232] [readline] Starting assembly 
0:15-07-04 08:36:10 [35/232/232] [readline] Installing build-essential.84d38c64321789981ff73617b6c12b553e153fe606e49d2b19bd304db9fcaae8 
0:15-07-04 08:36:11 [35/232/232] [readline] Installing automake.5ecea1e1e8854cd5b57e2dd1cd8a1be491d56d19cacfaf6928fb37b65608ff35 
0:15-07-04 08:36:12 [36/232/232] [readline] Start build 
0:15-07-04 08:36:12 [36/232/232] [readline] Git checkout upstream:readline in /root/.cache/ybd/tmp/tmp5PPOW8/readline.build 
0:15-07-04 08:36:12 [36/232/232] [readline] Upstream version 518937ab (No tag found) 
0:15-07-04 08:36:12 [36/232/232] [readline] Logging build commands to /root/.cache/ybd/artifacts/readline.22349d8227b9a31df22c92c6ca2b7c42bebc7a361d8d333704d56b30290d63d6.build-log.0 
0:15-07-04 08:36:12 [36/232/232] [readline] Running pre-configure-commands
0:15-07-04 08:36:12 [36/232/232] [readline] Running command:
cp /usr/share/automake*/config.guess support 
WARNING: Unable to set filesystem_writable_paths=['readline.build', 'readline.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:36:13 [36/232/232] [readline] Running command:
cp /usr/share/automake*/config.sub support 
0:15-07-04 08:36:13 [36/232/232] [readline] Running configure-commands
0:15-07-04 08:36:13 [36/232/232] [readline] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
0:15-07-04 08:36:13 [36/232/232] [readline] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 08:36:23 [36/232/232] [readline] Running build-commands
0:15-07-04 08:36:23 [36/232/232] [readline] Running command:
make 
0:15-07-04 08:36:25 [36/232/232] [readline] Running install-commands
0:15-07-04 08:36:25 [36/232/232] [readline] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 08:36:25 [36/232/232] [readline] Running strip-commands
0:15-07-04 08:36:25 [36/232/232] [readline] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:36:26 [36/232/232] [readline] Creating cache artifact 
0:15-07-04 08:36:29 [36/232/232] [readline] Now cached as readline.22349d8227b9a31df22c92c6ca2b7c42bebc7a361d8d333704d56b30290d63d6
0:15-07-04 08:36:30 [36/232/232] [readline] Cleaned up /root/.cache/ybd/tmp/tmp5PPOW8
0:15-07-04 08:36:30 [36/232/232] [readline] Elapsed time 00:00:19
0:15-07-04 08:36:30 [36/232/232] [cpython] Installing readline.22349d8227b9a31df22c92c6ca2b7c42bebc7a361d8d333704d56b30290d63d6 
0:15-07-04 08:36:30 [37/232/232] [cpython] Start build 
0:15-07-04 08:36:37 [37/232/232] [cpython] Git checkout upstream:cpython in /root/.cache/ybd/tmp/tmpvg2UFQ/cpython.build 
0:15-07-04 08:36:38 [37/232/232] [cpython] Upstream version d0188e98 v2.7.9 (v2.7.9 + 0 commits) 
0:15-07-04 08:36:38 [37/232/232] [cpython] Logging build commands to /root/.cache/ybd/artifacts/cpython.b954f5743abc77b1a0a5342542f054963067fa94acb960a8261617abbdea0695.build-log.0 
0:15-07-04 08:36:38 [37/232/232] [cpython] Running configure-commands
0:15-07-04 08:36:38 [37/232/232] [cpython] Running command:
./configure --prefix="$PREFIX" --enable-shared 
WARNING: Unable to set filesystem_writable_paths=['cpython.build', 'cpython.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:37:15 [37/232/232] [cpython] Running build-commands
0:15-07-04 08:37:15 [37/232/232] [cpython] Running command:
make 
0:15-07-04 08:40:01 [37/232/232] [cpython] Running install-commands
0:15-07-04 08:40:01 [37/232/232] [cpython] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 08:40:24 [37/232/232] [cpython] Running post-install-commands
0:15-07-04 08:40:24 [37/232/232] [cpython] Running command:
test -x "$DESTDIR"/"$PREFIX"/bin/python2 || ln -s python2.7 "$DESTDIR"/"$PREFIX"/bin/python2 
0:15-07-04 08:40:25 [37/232/232] [cpython] Running strip-commands
0:15-07-04 08:40:25 [37/232/232] [cpython] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:40:26 [37/232/232] [cpython] Creating cache artifact 
0:15-07-04 08:41:29 [37/232/232] [cpython] Now cached as cpython.b954f5743abc77b1a0a5342542f054963067fa94acb960a8261617abbdea0695
0:15-07-04 08:41:31 [37/232/232] [cpython] Cleaned up /root/.cache/ybd/tmp/tmpvg2UFQ
0:15-07-04 08:41:31 [37/232/232] [cpython] Elapsed time 00:13:17
0:15-07-04 08:41:31 [37/232/232] [ca-certificates] Installing cpython.b954f5743abc77b1a0a5342542f054963067fa94acb960a8261617abbdea0695 
0:15-07-04 08:41:33 [38/232/232] [ca-certificates] Start build 
0:15-07-04 08:41:33 [38/232/232] [ca-certificates] Git checkout upstream:ca-certificates in /root/.cache/ybd/tmp/tmpukDw94/ca-certificates.build 
0:15-07-04 08:41:33 [38/232/232] [ca-certificates] Upstream version e9b06b26 debian/20140325-1-ge9b06b2 (debian/20140325 + 1 commits) 
0:15-07-04 08:41:33 [38/232/232] [ca-certificates] Logging build commands to /root/.cache/ybd/artifacts/ca-certificates.3755c5e70ee6d94e0a58c3a872fd6400415b2d8d2bc4017f0dde54d9bdb9ea43.build-log.0 
0:15-07-04 08:41:33 [38/232/232] [ca-certificates] Running build-commands
0:15-07-04 08:41:33 [38/232/232] [ca-certificates] Running command:
make 
WARNING: Unable to set filesystem_writable_paths=['ca-certificates.build', 'ca-certificates.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:41:40 [38/232/232] [ca-certificates] Running pre-install-commands
0:15-07-04 08:41:40 [38/232/232] [ca-certificates] Running command:
mkdir -p "$DESTDIR"/usr/share/ca-certificates 
0:15-07-04 08:41:40 [38/232/232] [ca-certificates] Running command:
mkdir -p "$DESTDIR"/usr/sbin 
0:15-07-04 08:41:40 [38/232/232] [ca-certificates] Running install-commands
0:15-07-04 08:41:40 [38/232/232] [ca-certificates] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 08:41:41 [38/232/232] [ca-certificates] Running post-install-commands
0:15-07-04 08:41:41 [38/232/232] [ca-certificates] Running command:
mkdir "$DESTDIR"/etc 
0:15-07-04 08:41:41 [38/232/232] [ca-certificates] Running command:
cd "$DESTDIR"/usr/share/ca-certificates
find * -type f > "$DESTDIR"/etc/ca-certificates.conf
 
0:15-07-04 08:41:42 [38/232/232] [ca-certificates] Running command:
export CERTSCONF="$DESTDIR/etc/ca-certificates.conf"
export CERTSDIR="$DESTDIR/usr/share/ca-certificates"
export ETCCERTSDIR="$DESTDIR/etc/ssl/certs"
mkdir -p "$ETCCERTSDIR"
./sbin/update-ca-certificates
 
0:15-07-04 08:41:44 [38/232/232] [ca-certificates] Running strip-commands
0:15-07-04 08:41:44 [38/232/232] [ca-certificates] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:41:45 [38/232/232] [ca-certificates] Creating cache artifact 
0:15-07-04 08:41:45 [38/232/232] [ca-certificates] Now cached as ca-certificates.3755c5e70ee6d94e0a58c3a872fd6400415b2d8d2bc4017f0dde54d9bdb9ea43
0:15-07-04 08:41:46 [38/232/232] [ca-certificates] Cleaned up /root/.cache/ybd/tmp/tmpukDw94
0:15-07-04 08:41:46 [38/232/232] [ca-certificates] Elapsed time 00:28:01
0:15-07-04 08:41:46 [38/232/232] [core] Installing ca-certificates.3755c5e70ee6d94e0a58c3a872fd6400415b2d8d2bc4017f0dde54d9bdb9ea43 
0:15-07-04 08:41:48 [38/232/232] [e2fsprogs] Starting assembly 
0:15-07-04 08:41:49 [38/232/232] [pkg-config] Starting assembly 
0:15-07-04 08:41:49 [38/232/232] [libtool] Starting assembly 
0:15-07-04 08:41:49 [38/232/232] [help2man] Starting assembly 
0:15-07-04 08:41:49 [38/232/232] [help2man] Installing build-essential.84d38c64321789981ff73617b6c12b553e153fe606e49d2b19bd304db9fcaae8 
0:15-07-04 08:41:49 [38/232/232] [help2man] Installing automake.5ecea1e1e8854cd5b57e2dd1cd8a1be491d56d19cacfaf6928fb37b65608ff35 
0:15-07-04 08:41:50 [39/232/232] [help2man] Start build 
0:15-07-04 08:41:50 [39/232/232] [help2man] Git checkout upstream:help2man in /root/.cache/ybd/tmp/tmpBgiPI4/help2man.build 
0:15-07-04 08:41:50 [39/232/232] [help2man] Upstream version 83bab7e2 v1.46.5-1-g83bab7e (v1.46.5 + 1 commits) 
0:15-07-04 08:41:50 [39/232/232] [help2man] Logging build commands to /root/.cache/ybd/artifacts/help2man.f38decd7f00387c5b0f40003606fc30c3b8b572d9a75030509c13b5d5cb41a3e.build-log.0 
0:15-07-04 08:41:50 [39/232/232] [help2man] Running configure-commands
0:15-07-04 08:41:50 [39/232/232] [help2man] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['help2man.build', 'help2man.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:41:53 [39/232/232] [help2man] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 08:41:54 [39/232/232] [help2man] Running build-commands
0:15-07-04 08:41:54 [39/232/232] [help2man] Running command:
make 
0:15-07-04 08:41:56 [39/232/232] [help2man] Running install-commands
0:15-07-04 08:41:56 [39/232/232] [help2man] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 08:41:57 [39/232/232] [help2man] Running strip-commands
0:15-07-04 08:41:57 [39/232/232] [help2man] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:41:57 [39/232/232] [help2man] Creating cache artifact 
0:15-07-04 08:41:57 [39/232/232] [help2man] Now cached as help2man.f38decd7f00387c5b0f40003606fc30c3b8b572d9a75030509c13b5d5cb41a3e
0:15-07-04 08:41:58 [39/232/232] [help2man] Cleaned up /root/.cache/ybd/tmp/tmpBgiPI4
0:15-07-04 08:41:58 [39/232/232] [help2man] Elapsed time 00:00:09
0:15-07-04 08:41:58 [39/232/232] [libtool] Installing help2man.f38decd7f00387c5b0f40003606fc30c3b8b572d9a75030509c13b5d5cb41a3e 
0:15-07-04 08:41:59 [39/232/232] [autoconf] Starting assembly 
0:15-07-04 08:41:59 [39/232/232] [autoconf] Installing build-essential.84d38c64321789981ff73617b6c12b553e153fe606e49d2b19bd304db9fcaae8 
0:15-07-04 08:42:00 [39/232/232] [autoconf] Installing help2man.f38decd7f00387c5b0f40003606fc30c3b8b572d9a75030509c13b5d5cb41a3e 
0:15-07-04 08:42:01 [40/232/232] [autoconf] Start build 
0:15-07-04 08:42:01 [40/232/232] [autoconf] Git checkout upstream:autoconf in /root/.cache/ybd/tmp/tmpjpewWs/autoconf.build 
0:15-07-04 08:42:02 [40/232/232] [autoconf] Upstream version 218f9347 v2.69-1-g218f934 (v2.69 + 1 commits) 
0:15-07-04 08:42:02 [40/232/232] [autoconf] Logging build commands to /root/.cache/ybd/artifacts/autoconf.278e829c24d37b752078ef434ec68629f32008e71360ca2089b220f422b6d247.build-log.0 
0:15-07-04 08:42:02 [40/232/232] [autoconf] Running pre-configure-commands
0:15-07-04 08:42:02 [40/232/232] [autoconf] Running command:
echo "2.69" > .tarball-version 
WARNING: Unable to set filesystem_writable_paths=['autoconf.build', 'autoconf.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:42:02 [40/232/232] [autoconf] Running configure-commands
0:15-07-04 08:42:02 [40/232/232] [autoconf] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
0:15-07-04 08:42:08 [40/232/232] [autoconf] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 08:42:11 [40/232/232] [autoconf] Running build-commands
0:15-07-04 08:42:11 [40/232/232] [autoconf] Running command:
make 
0:15-07-04 08:43:07 [40/232/232] [autoconf] Running install-commands
0:15-07-04 08:43:07 [40/232/232] [autoconf] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 08:43:08 [40/232/232] [autoconf] Running strip-commands
0:15-07-04 08:43:08 [40/232/232] [autoconf] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:43:08 [40/232/232] [autoconf] Creating cache artifact 
0:15-07-04 08:43:09 [40/232/232] [autoconf] Now cached as autoconf.278e829c24d37b752078ef434ec68629f32008e71360ca2089b220f422b6d247
0:15-07-04 08:43:10 [40/232/232] [autoconf] Cleaned up /root/.cache/ybd/tmp/tmpjpewWs
0:15-07-04 08:43:10 [40/232/232] [autoconf] Elapsed time 00:01:10
0:15-07-04 08:43:10 [40/232/232] [libtool] Installing autoconf.278e829c24d37b752078ef434ec68629f32008e71360ca2089b220f422b6d247 
0:15-07-04 08:43:10 [40/232/232] [patch] Starting assembly 
0:15-07-04 08:43:10 [40/232/232] [bison] Starting assembly 
0:15-07-04 08:43:10 [40/232/232] [mini-utils] Starting assembly 
0:15-07-04 08:43:10 [40/232/232] [mini-utils] Installing build-essential.84d38c64321789981ff73617b6c12b553e153fe606e49d2b19bd304db9fcaae8 
0:15-07-04 08:43:11 [41/232/232] [mini-utils] Start build 
0:15-07-04 08:43:11 [41/232/232] [mini-utils] Git checkout baserock:baserock/mini-utils in /root/.cache/ybd/tmp/tmpJxkUuc/mini-utils.build 
0:15-07-04 08:43:11 [41/232/232] [mini-utils] Upstream version 5293265b (No tag found) 
0:15-07-04 08:43:11 [41/232/232] [mini-utils] Logging build commands to /root/.cache/ybd/artifacts/mini-utils.2390ac7764b0bd6fc889490cf0c2b2a8b0a277d7be6c8a9b6bac7ceae2943c87.build-log.0 
0:15-07-04 08:43:11 [41/232/232] [mini-utils] Running build-commands
0:15-07-04 08:43:11 [41/232/232] [mini-utils] Running command:
make 
WARNING: Unable to set filesystem_writable_paths=['mini-utils.build', 'mini-utils.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:43:12 [41/232/232] [mini-utils] Running install-commands
0:15-07-04 08:43:12 [41/232/232] [mini-utils] Running command:
make PREFIX="$PREFIX" DESTDIR="$DESTDIR" install 
0:15-07-04 08:43:12 [41/232/232] [mini-utils] Running strip-commands
0:15-07-04 08:43:12 [41/232/232] [mini-utils] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:43:13 [41/232/232] [mini-utils] Creating cache artifact 
0:15-07-04 08:43:13 [41/232/232] [mini-utils] Now cached as mini-utils.2390ac7764b0bd6fc889490cf0c2b2a8b0a277d7be6c8a9b6bac7ceae2943c87
0:15-07-04 08:43:13 [41/232/232] [mini-utils] Cleaned up /root/.cache/ybd/tmp/tmpJxkUuc
0:15-07-04 08:43:13 [41/232/232] [mini-utils] Elapsed time 00:00:02
0:15-07-04 08:43:13 [41/232/232] [bison] Installing mini-utils.2390ac7764b0bd6fc889490cf0c2b2a8b0a277d7be6c8a9b6bac7ceae2943c87 
0:15-07-04 08:43:13 [41/232/232] [bison] Installing help2man.f38decd7f00387c5b0f40003606fc30c3b8b572d9a75030509c13b5d5cb41a3e 
0:15-07-04 08:43:14 [41/232/232] [bison] Installing autoconf.278e829c24d37b752078ef434ec68629f32008e71360ca2089b220f422b6d247 
0:15-07-04 08:43:14 [41/232/232] [flex] Starting assembly 
0:15-07-04 08:43:14 [41/232/232] [gettext-tarball] Starting assembly 
0:15-07-04 08:43:14 [41/232/232] [libexpat] Starting assembly 
0:15-07-04 08:43:15 [41/232/232] [libexpat] Installing automake.5ecea1e1e8854cd5b57e2dd1cd8a1be491d56d19cacfaf6928fb37b65608ff35 
0:15-07-04 08:43:16 [41/232/232] [libtool-tarball] Starting assembly 
0:15-07-04 08:43:16 [41/232/232] [libtool-tarball] Installing build-essential.84d38c64321789981ff73617b6c12b553e153fe606e49d2b19bd304db9fcaae8 
0:15-07-04 08:43:17 [42/232/232] [libtool-tarball] Start build 
0:15-07-04 08:43:17 [42/232/232] [libtool-tarball] Git checkout upstream:libtool-tarball in /root/.cache/ybd/tmp/tmpiSCrp6/libtool-tarball.build 
0:15-07-04 08:43:17 [42/232/232] [libtool-tarball] Upstream version c026ca36 libtool-2.4.6 (libtool-2.4.6 + 0 commits) 
0:15-07-04 08:43:17 [42/232/232] [libtool-tarball] Logging build commands to /root/.cache/ybd/artifacts/libtool-tarball.4274705e81f9d6154390f0019cb620136a4fe7d9e1b28a1e0d75f85cef47a1ac.build-log.0 
0:15-07-04 08:43:17 [42/232/232] [libtool-tarball] Running configure-commands
0:15-07-04 08:43:17 [42/232/232] [libtool-tarball] Running command:
./configure --prefix="$PREFIX" 
WARNING: Unable to set filesystem_writable_paths=['libtool-tarball.build', 'libtool-tarball.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:43:27 [42/232/232] [libtool-tarball] Running build-commands
0:15-07-04 08:43:27 [42/232/232] [libtool-tarball] Running command:
make 
0:15-07-04 08:43:31 [42/232/232] [libtool-tarball] Running install-commands
0:15-07-04 08:43:31 [42/232/232] [libtool-tarball] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 08:43:32 [42/232/232] [libtool-tarball] Running strip-commands
0:15-07-04 08:43:32 [42/232/232] [libtool-tarball] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:43:32 [42/232/232] [libtool-tarball] Creating cache artifact 
0:15-07-04 08:43:34 [42/232/232] [libtool-tarball] Now cached as libtool-tarball.4274705e81f9d6154390f0019cb620136a4fe7d9e1b28a1e0d75f85cef47a1ac
0:15-07-04 08:43:34 [42/232/232] [libtool-tarball] Cleaned up /root/.cache/ybd/tmp/tmpiSCrp6
0:15-07-04 08:43:34 [42/232/232] [libtool-tarball] Elapsed time 00:00:17
0:15-07-04 08:43:34 [42/232/232] [libexpat] Installing libtool-tarball.4274705e81f9d6154390f0019cb620136a4fe7d9e1b28a1e0d75f85cef47a1ac 
0:15-07-04 08:43:34 [42/232/232] [libexpat] Installing autoconf.278e829c24d37b752078ef434ec68629f32008e71360ca2089b220f422b6d247 
0:15-07-04 08:43:34 [43/232/232] [libexpat] Start build 
0:15-07-04 08:43:34 [43/232/232] [libexpat] Git checkout upstream:libexpat in /root/.cache/ybd/tmp/tmpPyuNTi/libexpat.build 
0:15-07-04 08:43:34 [43/232/232] [libexpat] Upstream version 7cfc09db R_2_1_0 (R_2_1_0 + 0 commits) 
0:15-07-04 08:43:34 [43/232/232] [libexpat] Logging build commands to /root/.cache/ybd/artifacts/libexpat.1f6bf05db7131859d2d8dc137a3c44052f2a14c050913434492db8308ec78242.build-log.0 
0:15-07-04 08:43:34 [43/232/232] [libexpat] Running pre-configure-commands
0:15-07-04 08:43:34 [43/232/232] [libexpat] Running command:
./buildconf.sh 
WARNING: Unable to set filesystem_writable_paths=['libexpat.build', 'libexpat.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:43:56 [43/232/232] [libexpat] Running command:
automake --add-missing --copy || true 
0:15-07-04 08:43:58 [43/232/232] [libexpat] Running configure-commands
0:15-07-04 08:43:58 [43/232/232] [libexpat] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
0:15-07-04 08:43:58 [43/232/232] [libexpat] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 08:44:04 [43/232/232] [libexpat] Running build-commands
0:15-07-04 08:44:04 [43/232/232] [libexpat] Running command:
make 
0:15-07-04 08:44:17 [43/232/232] [libexpat] Running install-commands
0:15-07-04 08:44:17 [43/232/232] [libexpat] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 08:44:17 [43/232/232] [libexpat] Running strip-commands
0:15-07-04 08:44:17 [43/232/232] [libexpat] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:44:18 [43/232/232] [libexpat] Creating cache artifact 
0:15-07-04 08:44:19 [43/232/232] [libexpat] Now cached as libexpat.1f6bf05db7131859d2d8dc137a3c44052f2a14c050913434492db8308ec78242
0:15-07-04 08:44:20 [43/232/232] [libexpat] Cleaned up /root/.cache/ybd/tmp/tmpPyuNTi
0:15-07-04 08:44:20 [43/232/232] [libexpat] Elapsed time 00:01:05
0:15-07-04 08:44:20 [43/232/232] [gettext-tarball] Installing libexpat.1f6bf05db7131859d2d8dc137a3c44052f2a14c050913434492db8308ec78242 
0:15-07-04 08:44:22 [44/232/232] [gettext-tarball] Start build 
0:15-07-04 08:44:24 [44/232/232] [gettext-tarball] Git checkout upstream:gettext-tarball in /root/.cache/ybd/tmp/tmpc6EZiC/gettext-tarball.build 
0:15-07-04 08:44:24 [44/232/232] [gettext-tarball] Upstream version 482840e6 gettext-0.19.4 (gettext-0.19.4 + 0 commits) 
0:15-07-04 08:44:25 [44/232/232] [gettext-tarball] Logging build commands to /root/.cache/ybd/artifacts/gettext-tarball.3ceac18925fac6ff9174c1670a1cc3f4a56ef11888377ad4c8c3764835548216.build-log.0 
0:15-07-04 08:44:25 [44/232/232] [gettext-tarball] Running configure-commands
0:15-07-04 08:44:25 [44/232/232] [gettext-tarball] Running command:
./configure --prefix="$PREFIX" 
WARNING: Unable to set filesystem_writable_paths=['gettext-tarball.build', 'gettext-tarball.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:46:04 [44/232/232] [gettext-tarball] Running build-commands
0:15-07-04 08:46:04 [44/232/232] [gettext-tarball] Running command:
make 
0:15-07-04 08:48:01 [44/232/232] [gettext-tarball] Running install-commands
0:15-07-04 08:48:01 [44/232/232] [gettext-tarball] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 08:48:21 [44/232/232] [gettext-tarball] Running strip-commands
0:15-07-04 08:48:21 [44/232/232] [gettext-tarball] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:48:22 [44/232/232] [gettext-tarball] Creating cache artifact 
0:15-07-04 08:48:39 [44/232/232] [gettext-tarball] Now cached as gettext-tarball.3ceac18925fac6ff9174c1670a1cc3f4a56ef11888377ad4c8c3764835548216
0:15-07-04 08:48:41 [44/232/232] [gettext-tarball] Cleaned up /root/.cache/ybd/tmp/tmpc6EZiC
0:15-07-04 08:48:41 [44/232/232] [gettext-tarball] Elapsed time 00:05:26
0:15-07-04 08:48:41 [44/232/232] [flex] Installing gettext-tarball.3ceac18925fac6ff9174c1670a1cc3f4a56ef11888377ad4c8c3764835548216 
0:15-07-04 08:48:44 [45/232/232] [flex] Start build 
0:15-07-04 08:48:44 [45/232/232] [flex] Git checkout upstream:flex in /root/.cache/ybd/tmp/tmp1BuMmG/flex.build 
0:15-07-04 08:48:44 [45/232/232] [flex] Upstream version de10f98e flex-2-5-35-34-gde10f98 (flex-2-5-35 + 34 commits) 
0:15-07-04 08:48:44 [45/232/232] [flex] Logging build commands to /root/.cache/ybd/artifacts/flex.6bc421595e5928919cc16c979b506ba5f5fb140791e1c7785e607165348f416f.build-log.0 
0:15-07-04 08:48:44 [45/232/232] [flex] Running pre-configure-commands
0:15-07-04 08:48:44 [45/232/232] [flex] Running command:
autoreconf -ivf 
WARNING: Unable to set filesystem_writable_paths=['flex.build', 'flex.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:49:02 [45/232/232] [flex] Running configure-commands
0:15-07-04 08:49:02 [45/232/232] [flex] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 08:49:10 [45/232/232] [flex] Running build-commands
0:15-07-04 08:49:10 [45/232/232] [flex] Running command:
make dist_doc_DATA= 
0:15-07-04 08:49:16 [45/232/232] [flex] Running install-commands
0:15-07-04 08:49:16 [45/232/232] [flex] Running command:
make dist_doc_DATA= DESTDIR="$DESTDIR" install 
0:15-07-04 08:49:25 [45/232/232] [flex] Running command:
ln -s libfl.a "$DESTDIR$PREFIX/lib/libl.a" 
0:15-07-04 08:49:26 [45/232/232] [flex] Running command:
echo "#!$PREFIX/bin/sh" >"$DESTDIR$PREFIX/bin/lex" 
0:15-07-04 08:49:26 [45/232/232] [flex] Running command:
echo 'exec '"$PREFIX"'/bin/flex -l "$@"' >>"$DESTDIR$PREFIX/bin/lex" 
0:15-07-04 08:49:26 [45/232/232] [flex] Running command:
chmod 755 "$DESTDIR$PREFIX/bin/lex" 
0:15-07-04 08:49:27 [45/232/232] [flex] Running strip-commands
0:15-07-04 08:49:27 [45/232/232] [flex] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:49:27 [45/232/232] [flex] Creating cache artifact 
0:15-07-04 08:49:28 [45/232/232] [flex] Now cached as flex.6bc421595e5928919cc16c979b506ba5f5fb140791e1c7785e607165348f416f
0:15-07-04 08:49:29 [45/232/232] [flex] Cleaned up /root/.cache/ybd/tmp/tmp1BuMmG
0:15-07-04 08:49:29 [45/232/232] [flex] Elapsed time 00:06:14
0:15-07-04 08:49:29 [45/232/232] [bison] Installing flex.6bc421595e5928919cc16c979b506ba5f5fb140791e1c7785e607165348f416f 
0:15-07-04 08:49:29 [46/232/232] [bison] Start build 
0:15-07-04 08:49:30 [46/232/232] [bison] Git checkout upstream:bison in /root/.cache/ybd/tmp/tmpSQXoMh/bison.build 
0:15-07-04 08:49:30 [46/232/232] [bison] Upstream version 2ab6d1da v3.0.2-1-g2ab6d1d (v3.0.2 + 1 commits) 
0:15-07-04 08:49:30 [46/232/232] [bison] Git submodules 
0:15-07-04 08:49:33 [46/232/232] [bison] Git checkout upstream:gnulib in /root/.cache/ybd/tmp/tmpSQXoMh/bison.build/gnulib 
0:15-07-04 08:49:33 [46/232/232] [bison] Upstream version 74540d44 v0.1-31-g74540d4 (v0.1 + 31 commits) 
0:15-07-04 08:49:34 [46/232/232] [bison] Git checkout upstream:autoconf in /root/.cache/ybd/tmp/tmpSQXoMh/bison.build/submodules/autoconf 
0:15-07-04 08:49:34 [46/232/232] [bison] Upstream version 9e087dd3 v2.69-74-g9e087dd (v2.69 + 74 commits) 
0:15-07-04 08:49:34 [46/232/232] [bison] Logging build commands to /root/.cache/ybd/artifacts/bison.1c2c924757d75d1d3cd5094ba9842153d374ea43160ba35979de68f8507c4655.build-log.0 
0:15-07-04 08:49:34 [46/232/232] [bison] Running pre-configure-commands
0:15-07-04 08:49:34 [46/232/232] [bison] Running command:
echo "3.0.2" > .tarball-version 
WARNING: Unable to set filesystem_writable_paths=['bison.build', 'bison.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:49:35 [46/232/232] [bison] Running command:
sh bootstrap --skip-po --no-git --gnulib-srcdir=gnulib 
0:15-07-04 08:51:06 [46/232/232] [bison] Running configure-commands
0:15-07-04 08:51:06 [46/232/232] [bison] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
0:15-07-04 08:51:07 [46/232/232] [bison] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 08:51:56 [46/232/232] [bison] Running build-commands
0:15-07-04 08:51:56 [46/232/232] [bison] Running command:
make 
0:15-07-04 08:52:25 [46/232/232] [bison] Running install-commands
0:15-07-04 08:52:25 [46/232/232] [bison] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 08:52:27 [46/232/232] [bison] Running strip-commands
0:15-07-04 08:52:27 [46/232/232] [bison] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:52:27 [46/232/232] [bison] Creating cache artifact 
0:15-07-04 08:52:29 [46/232/232] [bison] Now cached as bison.1c2c924757d75d1d3cd5094ba9842153d374ea43160ba35979de68f8507c4655
0:15-07-04 08:52:32 [46/232/232] [bison] Cleaned up /root/.cache/ybd/tmp/tmpSQXoMh
0:15-07-04 08:52:32 [46/232/232] [bison] Elapsed time 00:09:21
0:15-07-04 08:52:32 [46/232/232] [patch] Installing bison.1c2c924757d75d1d3cd5094ba9842153d374ea43160ba35979de68f8507c4655 
0:15-07-04 08:52:34 [47/232/232] [patch] Start build 
0:15-07-04 08:52:34 [47/232/232] [patch] Git checkout upstream:patch in /root/.cache/ybd/tmp/tmp95R8UT/patch.build 
0:15-07-04 08:52:34 [47/232/232] [patch] Upstream version 3bbb26c9 v2.7.1-2-g3bbb26c (v2.7.1 + 2 commits) 
0:15-07-04 08:52:34 [47/232/232] [patch] Git submodules 
0:15-07-04 08:52:37 [47/232/232] [patch] Git checkout upstream:gnulib in /root/.cache/ybd/tmp/tmp95R8UT/patch.build/gnulib 
0:15-07-04 08:52:38 [47/232/232] [patch] Upstream version 77b05442 v0.0-7647-g77b0544 (v0.0 + 7647 commits) 
0:15-07-04 08:52:39 [47/232/232] [patch] Logging build commands to /root/.cache/ybd/artifacts/patch.3f520ff8089013dd8b9ff8f2bcac987eff2f34771631a3dcf3dcd3721fb2ea1b.build-log.0 
0:15-07-04 08:52:39 [47/232/232] [patch] Running pre-configure-commands
0:15-07-04 08:52:39 [47/232/232] [patch] Running command:
echo "2.7.1" > .tarball-version 
WARNING: Unable to set filesystem_writable_paths=['patch.build', 'patch.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:52:39 [47/232/232] [patch] Running command:
./bootstrap --skip-po 
0:15-07-04 08:53:46 [47/232/232] [patch] Running configure-commands
0:15-07-04 08:53:46 [47/232/232] [patch] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
0:15-07-04 08:53:46 [47/232/232] [patch] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 08:54:17 [47/232/232] [patch] Running build-commands
0:15-07-04 08:54:17 [47/232/232] [patch] Running command:
make 
0:15-07-04 08:54:22 [47/232/232] [patch] Running install-commands
0:15-07-04 08:54:22 [47/232/232] [patch] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 08:54:23 [47/232/232] [patch] Running strip-commands
0:15-07-04 08:54:23 [47/232/232] [patch] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:54:23 [47/232/232] [patch] Creating cache artifact 
0:15-07-04 08:54:24 [47/232/232] [patch] Now cached as patch.3f520ff8089013dd8b9ff8f2bcac987eff2f34771631a3dcf3dcd3721fb2ea1b
0:15-07-04 08:54:26 [47/232/232] [patch] Cleaned up /root/.cache/ybd/tmp/tmp95R8UT
0:15-07-04 08:54:26 [47/232/232] [patch] Elapsed time 00:11:15
0:15-07-04 08:54:26 [47/232/232] [libtool] Installing patch.3f520ff8089013dd8b9ff8f2bcac987eff2f34771631a3dcf3dcd3721fb2ea1b 
0:15-07-04 08:54:26 [47/232/232] [xz] Starting assembly 
0:15-07-04 08:54:26 [47/232/232] [xz] Installing autoconf.278e829c24d37b752078ef434ec68629f32008e71360ca2089b220f422b6d247 
0:15-07-04 08:54:28 [47/232/232] [xz] Installing libtool-tarball.4274705e81f9d6154390f0019cb620136a4fe7d9e1b28a1e0d75f85cef47a1ac 
0:15-07-04 08:54:28 [47/232/232] [xz] Installing gettext-tarball.3ceac18925fac6ff9174c1670a1cc3f4a56ef11888377ad4c8c3764835548216 
0:15-07-04 08:54:28 [48/232/232] [xz] Start build 
0:15-07-04 08:54:29 [48/232/232] [xz] Git checkout upstream:xz in /root/.cache/ybd/tmp/tmpadj6rQ/xz.build 
0:15-07-04 08:54:29 [48/232/232] [xz] Upstream version a0cd05ee v5.2.0 (v5.2.0 + 0 commits) 
0:15-07-04 08:54:29 [48/232/232] [xz] Logging build commands to /root/.cache/ybd/artifacts/xz.1e83e70fd77b7207fc8d8f36bd9c269ff6f57865458855fc2e78a608cf2f4d0a.build-log.0 
0:15-07-04 08:54:29 [48/232/232] [xz] Running configure-commands
0:15-07-04 08:54:29 [48/232/232] [xz] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['xz.build', 'xz.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:54:55 [48/232/232] [xz] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 08:55:06 [48/232/232] [xz] Running build-commands
0:15-07-04 08:55:06 [48/232/232] [xz] Running command:
make 
0:15-07-04 08:55:16 [48/232/232] [xz] Running install-commands
0:15-07-04 08:55:16 [48/232/232] [xz] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 08:55:18 [48/232/232] [xz] Running strip-commands
0:15-07-04 08:55:18 [48/232/232] [xz] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:55:18 [48/232/232] [xz] Creating cache artifact 
0:15-07-04 08:55:21 [48/232/232] [xz] Now cached as xz.1e83e70fd77b7207fc8d8f36bd9c269ff6f57865458855fc2e78a608cf2f4d0a
0:15-07-04 08:55:22 [48/232/232] [xz] Cleaned up /root/.cache/ybd/tmp/tmpadj6rQ
0:15-07-04 08:55:22 [48/232/232] [xz] Elapsed time 00:00:56
0:15-07-04 08:55:22 [48/232/232] [libtool] Installing xz.1e83e70fd77b7207fc8d8f36bd9c269ff6f57865458855fc2e78a608cf2f4d0a 
0:15-07-04 08:55:22 [49/232/232] [libtool] Start build 
0:15-07-04 08:55:23 [49/232/232] [libtool] Git checkout upstream:libtool in /root/.cache/ybd/tmp/tmp1WhKFd/libtool.build 
0:15-07-04 08:55:23 [49/232/232] [libtool] Upstream version 5e11a17c v2.4.6-1-g5e11a17 (v2.4.6 + 1 commits) 
0:15-07-04 08:55:23 [49/232/232] [libtool] Git submodules 
0:15-07-04 08:55:25 [49/232/232] [libtool] Git checkout upstream:gnulib in /root/.cache/ybd/tmp/tmp1WhKFd/libtool.build/gnulib 
0:15-07-04 08:55:25 [49/232/232] [libtool] Upstream version 342d9f09 v0.1-336-g342d9f0 (v0.1 + 336 commits) 
0:15-07-04 08:55:26 [49/232/232] [libtool] Logging build commands to /root/.cache/ybd/artifacts/libtool.42bb7ca52453a8d4c87d81ef5f879d30eccbac8b01c02a95afb615222b5756e5.build-log.0 
0:15-07-04 08:55:26 [49/232/232] [libtool] Running pre-configure-commands
0:15-07-04 08:55:26 [49/232/232] [libtool] Running command:
echo "2.4.6" > .tarball-version 
WARNING: Unable to set filesystem_writable_paths=['libtool.build', 'libtool.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:55:27 [49/232/232] [libtool] Running command:
./bootstrap 
0:15-07-04 08:56:23 [49/232/232] [libtool] Running configure-commands
0:15-07-04 08:56:23 [49/232/232] [libtool] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
0:15-07-04 08:56:23 [49/232/232] [libtool] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 08:56:32 [49/232/232] [libtool] Running build-commands
0:15-07-04 08:56:32 [49/232/232] [libtool] Running command:
make 
0:15-07-04 08:56:51 [49/232/232] [libtool] Running install-commands
0:15-07-04 08:56:51 [49/232/232] [libtool] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 08:56:52 [49/232/232] [libtool] Running strip-commands
0:15-07-04 08:56:52 [49/232/232] [libtool] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:56:52 [49/232/232] [libtool] Creating cache artifact 
0:15-07-04 08:56:54 [49/232/232] [libtool] Now cached as libtool.42bb7ca52453a8d4c87d81ef5f879d30eccbac8b01c02a95afb615222b5756e5
0:15-07-04 08:56:56 [49/232/232] [libtool] Cleaned up /root/.cache/ybd/tmp/tmp1WhKFd
0:15-07-04 08:56:56 [49/232/232] [libtool] Elapsed time 00:15:07
0:15-07-04 08:56:56 [49/232/232] [pkg-config] Installing libtool.42bb7ca52453a8d4c87d81ef5f879d30eccbac8b01c02a95afb615222b5756e5 
0:15-07-04 08:56:58 [50/232/232] [pkg-config] Start build 
0:15-07-04 08:56:58 [50/232/232] [pkg-config] Git checkout upstream:pkg-config in /root/.cache/ybd/tmp/tmptRgJha/pkg-config.build 
0:15-07-04 08:56:58 [50/232/232] [pkg-config] Upstream version 74ceac54 pkg-config-0.28 (pkg-config-0.28 + 0 commits) 
0:15-07-04 08:56:58 [50/232/232] [pkg-config] Logging build commands to /root/.cache/ybd/artifacts/pkg-config.84f5acc0f39930274b883b0a466be35d8c0927f5b4adbbee3f3f2dc542398b5b.build-log.0 
0:15-07-04 08:56:58 [50/232/232] [pkg-config] Running configure-commands
0:15-07-04 08:56:58 [50/232/232] [pkg-config] Running command:
./autogen.sh --prefix="$PREFIX" --with-internal-glib 
WARNING: Unable to set filesystem_writable_paths=['pkg-config.build', 'pkg-config.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:58:25 [50/232/232] [pkg-config] Running build-commands
0:15-07-04 08:58:25 [50/232/232] [pkg-config] Running command:
make 
0:15-07-04 08:58:32 [50/232/232] [pkg-config] Running install-commands
0:15-07-04 08:58:32 [50/232/232] [pkg-config] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 08:58:33 [50/232/232] [pkg-config] Running strip-commands
0:15-07-04 08:58:33 [50/232/232] [pkg-config] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:58:33 [50/232/232] [pkg-config] Creating cache artifact 
0:15-07-04 08:58:35 [50/232/232] [pkg-config] Now cached as pkg-config.84f5acc0f39930274b883b0a466be35d8c0927f5b4adbbee3f3f2dc542398b5b
0:15-07-04 08:58:36 [50/232/232] [pkg-config] Cleaned up /root/.cache/ybd/tmp/tmptRgJha
0:15-07-04 08:58:36 [50/232/232] [pkg-config] Elapsed time 00:16:47
0:15-07-04 08:58:36 [50/232/232] [e2fsprogs] Installing pkg-config.84f5acc0f39930274b883b0a466be35d8c0927f5b4adbbee3f3f2dc542398b5b 
0:15-07-04 08:58:38 [50/232/232] [util-linux] Starting assembly 
0:15-07-04 08:58:38 [50/232/232] [util-linux] Installing pkg-config.84f5acc0f39930274b883b0a466be35d8c0927f5b4adbbee3f3f2dc542398b5b 
0:15-07-04 08:58:40 [50/232/232] [linux-pam] Starting assembly 
0:15-07-04 08:58:40 [50/232/232] [linux-pam] Installing gettext-tarball.3ceac18925fac6ff9174c1670a1cc3f4a56ef11888377ad4c8c3764835548216 
0:15-07-04 08:58:42 [50/232/232] [acl] Starting assembly 
0:15-07-04 08:58:42 [50/232/232] [acl] Installing automake.5ecea1e1e8854cd5b57e2dd1cd8a1be491d56d19cacfaf6928fb37b65608ff35 
0:15-07-04 08:58:44 [50/232/232] [acl] Installing autoconf.278e829c24d37b752078ef434ec68629f32008e71360ca2089b220f422b6d247 
0:15-07-04 08:58:44 [50/232/232] [acl] Installing gettext-tarball.3ceac18925fac6ff9174c1670a1cc3f4a56ef11888377ad4c8c3764835548216 
0:15-07-04 08:58:44 [50/232/232] [attr] Starting assembly 
0:15-07-04 08:58:44 [50/232/232] [attr] Installing gettext-tarball.3ceac18925fac6ff9174c1670a1cc3f4a56ef11888377ad4c8c3764835548216 
0:15-07-04 08:58:46 [50/232/232] [attr] Installing libtool.42bb7ca52453a8d4c87d81ef5f879d30eccbac8b01c02a95afb615222b5756e5 
0:15-07-04 08:58:46 [51/232/232] [attr] Start build 
0:15-07-04 08:58:46 [51/232/232] [attr] Git checkout upstream:attr in /root/.cache/ybd/tmp/tmpeS7y09/attr.build 
0:15-07-04 08:58:46 [51/232/232] [attr] Upstream version 4b005410 v2.4.47 (v2.4.47 + 0 commits) 
0:15-07-04 08:58:46 [51/232/232] [attr] Logging build commands to /root/.cache/ybd/artifacts/attr.3aa6440f3d97ddebed9e8ed346509297388da6ba9cc0ef5232eccb510c1ad8ff.build-log.0 
0:15-07-04 08:58:46 [51/232/232] [attr] Running pre-configure-commands
0:15-07-04 08:58:46 [51/232/232] [attr] Running command:
make configure 
WARNING: Unable to set filesystem_writable_paths=['attr.build', 'attr.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:59:01 [51/232/232] [attr] Running configure-commands
0:15-07-04 08:59:01 [51/232/232] [attr] Running command:
./configure --prefix="$PREFIX" \
            --exec-prefix="$PREFIX" \
            --sbindir="$PREFIX"/sbin \
            --bindir="$PREFIX"/bin \
            --libdir="$PREFIX"/lib \
            --libexecdir="$PREFIX"/lib \
            --enable-lib64=yes \
            --includedir="$PREFIX"/include \
            --mandir="$PREFIX"/share/man \
            --datadir="$PREFIX"/share
 
0:15-07-04 08:59:05 [51/232/232] [attr] Running build-commands
0:15-07-04 08:59:05 [51/232/232] [attr] Running command:
make 
0:15-07-04 08:59:08 [51/232/232] [attr] Running install-commands
0:15-07-04 08:59:08 [51/232/232] [attr] Running command:
make DESTDIR="$DESTDIR" install-lib install-dev 
0:15-07-04 08:59:09 [51/232/232] [attr] Running strip-commands
0:15-07-04 08:59:09 [51/232/232] [attr] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:59:10 [51/232/232] [attr] Creating cache artifact 
0:15-07-04 08:59:10 [51/232/232] [attr] Now cached as attr.3aa6440f3d97ddebed9e8ed346509297388da6ba9cc0ef5232eccb510c1ad8ff
0:15-07-04 08:59:11 [51/232/232] [attr] Cleaned up /root/.cache/ybd/tmp/tmpeS7y09
0:15-07-04 08:59:11 [51/232/232] [attr] Elapsed time 00:00:27
0:15-07-04 08:59:11 [51/232/232] [acl] Installing attr.3aa6440f3d97ddebed9e8ed346509297388da6ba9cc0ef5232eccb510c1ad8ff 
0:15-07-04 08:59:11 [52/232/232] [acl] Start build 
0:15-07-04 08:59:12 [52/232/232] [acl] Git checkout upstream:acl in /root/.cache/ybd/tmp/tmpZO8xYT/acl.build 
0:15-07-04 08:59:12 [52/232/232] [acl] Upstream version f13e09bd v2.2.52 (v2.2.52 + 0 commits) 
0:15-07-04 08:59:12 [52/232/232] [acl] Logging build commands to /root/.cache/ybd/artifacts/acl.653497d33b85e472a5c4bf3f541c14e789c23af9e52d3554046b4f4d28db4a3e.build-log.0 
0:15-07-04 08:59:12 [52/232/232] [acl] Running build-commands
0:15-07-04 08:59:12 [52/232/232] [acl] Running command:
make 
WARNING: Unable to set filesystem_writable_paths=['acl.build', 'acl.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 08:59:30 [52/232/232] [acl] Running install-commands
0:15-07-04 08:59:30 [52/232/232] [acl] Running command:
make DESTDIR="$DESTDIR" install-lib install-dev 
0:15-07-04 08:59:32 [52/232/232] [acl] Running strip-commands
0:15-07-04 08:59:32 [52/232/232] [acl] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 08:59:32 [52/232/232] [acl] Creating cache artifact 
0:15-07-04 08:59:33 [52/232/232] [acl] Now cached as acl.653497d33b85e472a5c4bf3f541c14e789c23af9e52d3554046b4f4d28db4a3e
0:15-07-04 08:59:34 [52/232/232] [acl] Cleaned up /root/.cache/ybd/tmp/tmpZO8xYT
0:15-07-04 08:59:34 [52/232/232] [acl] Elapsed time 00:00:51
0:15-07-04 08:59:34 [52/232/232] [linux-pam] Installing acl.653497d33b85e472a5c4bf3f541c14e789c23af9e52d3554046b4f4d28db4a3e 
0:15-07-04 08:59:34 [52/232/232] [linux-pam] Installing pkg-config.84f5acc0f39930274b883b0a466be35d8c0927f5b4adbbee3f3f2dc542398b5b 
0:15-07-04 08:59:34 [53/232/232] [linux-pam] Start build 
0:15-07-04 08:59:34 [53/232/232] [linux-pam] Git checkout upstream:linux-pam in /root/.cache/ybd/tmp/tmp4bBGbK/linux-pam.build 
0:15-07-04 08:59:34 [53/232/232] [linux-pam] Upstream version b1521c97 Linux-PAM-1.1.8 (Linux-PAM-1.1.8 + 0 commits) 
0:15-07-04 08:59:35 [53/232/232] [linux-pam] Logging build commands to /root/.cache/ybd/artifacts/linux-pam.6cbd7f04de04afc4cbf7a2706cd300eea8fa681b35a31ae59bc98dbe096b3a21.build-log.0 
0:15-07-04 08:59:35 [53/232/232] [linux-pam] Running pre-configure-commands
0:15-07-04 08:59:35 [53/232/232] [linux-pam] Running command:
autoreconf -ivf 
WARNING: Unable to set filesystem_writable_paths=['linux-pam.build', 'linux-pam.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:00:25 [53/232/232] [linux-pam] Running configure-commands
0:15-07-04 09:00:25 [53/232/232] [linux-pam] Running command:
./configure --prefix="$PREFIX" --libdir="/lib" 
0:15-07-04 09:00:43 [53/232/232] [linux-pam] Running build-commands
0:15-07-04 09:00:43 [53/232/232] [linux-pam] Running command:
make 
0:15-07-04 09:01:14 [53/232/232] [linux-pam] Running install-commands
0:15-07-04 09:01:14 [53/232/232] [linux-pam] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 09:01:26 [53/232/232] [linux-pam] Running strip-commands
0:15-07-04 09:01:26 [53/232/232] [linux-pam] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:01:28 [53/232/232] [linux-pam] Creating cache artifact 
0:15-07-04 09:01:29 [53/232/232] [linux-pam] Now cached as linux-pam.6cbd7f04de04afc4cbf7a2706cd300eea8fa681b35a31ae59bc98dbe096b3a21
0:15-07-04 09:01:30 [53/232/232] [linux-pam] Cleaned up /root/.cache/ybd/tmp/tmp4bBGbK
0:15-07-04 09:01:30 [53/232/232] [linux-pam] Elapsed time 00:02:50
0:15-07-04 09:01:30 [53/232/232] [util-linux] Installing linux-pam.6cbd7f04de04afc4cbf7a2706cd300eea8fa681b35a31ae59bc98dbe096b3a21 
0:15-07-04 09:01:31 [53/232/232] [shadow] Starting assembly 
0:15-07-04 09:01:31 [53/232/232] [shadow] Installing linux-pam.6cbd7f04de04afc4cbf7a2706cd300eea8fa681b35a31ae59bc98dbe096b3a21 
0:15-07-04 09:01:33 [53/232/232] [libcap2] Starting assembly 
0:15-07-04 09:01:33 [53/232/232] [libcap2] Installing linux-pam.6cbd7f04de04afc4cbf7a2706cd300eea8fa681b35a31ae59bc98dbe096b3a21 
0:15-07-04 09:01:35 [54/232/232] [libcap2] Start build 
0:15-07-04 09:01:35 [54/232/232] [libcap2] Git checkout upstream:libcap2 in /root/.cache/ybd/tmp/tmphNtCrM/libcap2.build 
0:15-07-04 09:01:35 [54/232/232] [libcap2] Upstream version 4f7cca1b libcap-2.22-6-g4f7cca1 (libcap-2.22 + 6 commits) 
0:15-07-04 09:01:35 [54/232/232] [libcap2] Logging build commands to /root/.cache/ybd/artifacts/libcap2.8df02c49eb6e1f7fb4d46936cec2d56dcc0eac595f141a30a16431e6ca81f6c6.build-log.0 
0:15-07-04 09:01:35 [54/232/232] [libcap2] Running build-commands
0:15-07-04 09:01:35 [54/232/232] [libcap2] Running command:
make prefix="$PREFIX" 
WARNING: Unable to set filesystem_writable_paths=['libcap2.build', 'libcap2.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:01:37 [54/232/232] [libcap2] Running install-commands
0:15-07-04 09:01:37 [54/232/232] [libcap2] Running command:
make prefix="$PREFIX" DESTDIR="$DESTDIR" RAISE_SETFCAP=no install lib=lib 
0:15-07-04 09:01:38 [54/232/232] [libcap2] Running strip-commands
0:15-07-04 09:01:38 [54/232/232] [libcap2] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:01:38 [54/232/232] [libcap2] Creating cache artifact 
0:15-07-04 09:01:41 [54/232/232] [libcap2] Now cached as libcap2.8df02c49eb6e1f7fb4d46936cec2d56dcc0eac595f141a30a16431e6ca81f6c6
0:15-07-04 09:01:42 [54/232/232] [libcap2] Cleaned up /root/.cache/ybd/tmp/tmphNtCrM
0:15-07-04 09:01:42 [54/232/232] [libcap2] Elapsed time 00:00:09
0:15-07-04 09:01:42 [54/232/232] [shadow] Installing libcap2.8df02c49eb6e1f7fb4d46936cec2d56dcc0eac595f141a30a16431e6ca81f6c6 
0:15-07-04 09:01:42 [55/232/232] [shadow] Start build 
0:15-07-04 09:01:43 [55/232/232] [shadow] Git checkout upstream:shadow in /root/.cache/ybd/tmp/tmpgxWLwh/shadow.build 
0:15-07-04 09:01:43 [55/232/232] [shadow] Upstream version bfaa5922 upstream/4.2.1 (upstream/4.2.1 + 0 commits) 
0:15-07-04 09:01:43 [55/232/232] [shadow] Logging build commands to /root/.cache/ybd/artifacts/shadow.c01193d1f4b645c426cd72836e6671a172d86595e7273f2b792a033ab0f55c97.build-log.0 
0:15-07-04 09:01:43 [55/232/232] [shadow] Running pre-configure-commands
0:15-07-04 09:01:43 [55/232/232] [shadow] Running command:
autoreconf -vfi 
WARNING: Unable to set filesystem_writable_paths=['shadow.build', 'shadow.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:02:15 [55/232/232] [shadow] Running configure-commands
0:15-07-04 09:02:15 [55/232/232] [shadow] Running command:
./configure  --with-selinux=no \
             --sysconfdir=/etc \
             --with-libpam=yes \
             --prefix="$PREFIX" \
             --bindir=/bin
 
0:15-07-04 09:02:32 [55/232/232] [shadow] Running build-commands
0:15-07-04 09:02:32 [55/232/232] [shadow] Running command:
make 
0:15-07-04 09:02:37 [55/232/232] [shadow] Running install-commands
0:15-07-04 09:02:37 [55/232/232] [shadow] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 09:02:40 [55/232/232] [shadow] Running post-install-commands
0:15-07-04 09:02:40 [55/232/232] [shadow] Running command:
for OPTION in FAIL_DELAY \
              FAILLOG_ENAB \
              LASTLOG_ENAB \
              MAIL_CHECK_ENAB \
              OBSCURE_CHECKS_ENAB \
              PORTTIME_CHECKS_ENAB \
              QUOTAS_ENAB \
              CONSOLE MOTD_FILE \
              FTMP_FILE \
              NOLOGINS_FILE \
              ENV_HZ \
              PASS_MIN_LEN \
              SU_WHEEL_ONLY \
              CRACKLIB_DICTPATH \
              PASS_CHANGE_TRIES \
              PASS_ALWAYS_WARN \
              CHFN_AUTH \
              ENVIRON_FILE
do
  sed -i -e "s/^${OPTION}.*/# & #This option is handled by PAM instead./" \
      "$DESTDIR/etc/login.defs"
done
 
0:15-07-04 09:02:41 [55/232/232] [shadow] Running command:
if grep -q '[\s#]ENCRYPT_METHOD' "$DESTDIR/etc/login.defs"; then
    sed -i -e '/^[\s#]*ENCRYPT_METHOD /s/.*/ENCRYPT_METHOD SHA512/g' "$DESTDIR/etc/login.defs"
else
    echo 'ENCRYPT_METHOD SHA512' >>"$DESTDIR/etc/login.defs"
fi
 
0:15-07-04 09:02:41 [55/232/232] [shadow] Running command:
sed -i -e 's/\(.*\)required\(.*pam_selinux.so.*\)/\1optional\2/' "$DESTDIR"/etc/pam.d/* 
0:15-07-04 09:02:41 [55/232/232] [shadow] Running strip-commands
0:15-07-04 09:02:41 [55/232/232] [shadow] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:02:42 [55/232/232] [shadow] Creating cache artifact 
0:15-07-04 09:02:50 [55/232/232] [shadow] Now cached as shadow.c01193d1f4b645c426cd72836e6671a172d86595e7273f2b792a033ab0f55c97
0:15-07-04 09:02:52 [55/232/232] [shadow] Cleaned up /root/.cache/ybd/tmp/tmpgxWLwh
0:15-07-04 09:02:52 [55/232/232] [shadow] Elapsed time 00:01:20
0:15-07-04 09:02:52 [55/232/232] [util-linux] Installing shadow.c01193d1f4b645c426cd72836e6671a172d86595e7273f2b792a033ab0f55c97 
0:15-07-04 09:02:52 [56/232/232] [util-linux] Start build 
0:15-07-04 09:02:53 [56/232/232] [util-linux] Git checkout upstream:util-linux in /root/.cache/ybd/tmp/tmpCXuXAT/util-linux.build 
0:15-07-04 09:02:53 [56/232/232] [util-linux] Upstream version 34760e62 v2.26.1 (v2.26.1 + 0 commits) 
0:15-07-04 09:02:53 [56/232/232] [util-linux] Logging build commands to /root/.cache/ybd/artifacts/util-linux.b1f9cb178d5acabcc08e564689797730392b94ce3a926295ab829136edfe64bd.build-log.0 
0:15-07-04 09:02:53 [56/232/232] [util-linux] Running pre-configure-commands
0:15-07-04 09:02:53 [56/232/232] [util-linux] Running command:
echo "2.26.1" > .tarball-version 
WARNING: Unable to set filesystem_writable_paths=['util-linux.build', 'util-linux.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:02:54 [56/232/232] [util-linux] Running command:
./autogen.sh 
0:15-07-04 09:03:31 [56/232/232] [util-linux] Running configure-commands
0:15-07-04 09:03:31 [56/232/232] [util-linux] Running command:
./configure --prefix="$PREFIX" \
            --disable-use-tty-group \
            --bindir=/bin
 
0:15-07-04 09:03:50 [56/232/232] [util-linux] Running build-commands
0:15-07-04 09:03:50 [56/232/232] [util-linux] Running command:
make 
0:15-07-04 09:04:06 [56/232/232] [util-linux] Running install-commands
0:15-07-04 09:04:06 [56/232/232] [util-linux] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 09:04:13 [56/232/232] [util-linux] Running strip-commands
0:15-07-04 09:04:13 [56/232/232] [util-linux] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:04:15 [56/232/232] [util-linux] Creating cache artifact 
0:15-07-04 09:04:41 [56/232/232] [util-linux] Now cached as util-linux.b1f9cb178d5acabcc08e564689797730392b94ce3a926295ab829136edfe64bd
0:15-07-04 09:04:43 [56/232/232] [util-linux] Cleaned up /root/.cache/ybd/tmp/tmpCXuXAT
0:15-07-04 09:04:43 [56/232/232] [util-linux] Elapsed time 00:06:04
0:15-07-04 09:04:43 [56/232/232] [e2fsprogs] Installing util-linux.b1f9cb178d5acabcc08e564689797730392b94ce3a926295ab829136edfe64bd 
0:15-07-04 09:04:44 [57/232/232] [e2fsprogs] Start build 
0:15-07-04 09:04:45 [57/232/232] [e2fsprogs] Git checkout upstream:e2fsprogs in /root/.cache/ybd/tmp/tmpIT7NBs/e2fsprogs.build 
0:15-07-04 09:04:45 [57/232/232] [e2fsprogs] Upstream version 6a3741ad v1.42.12 (v1.42.12 + 0 commits) 
0:15-07-04 09:04:45 [57/232/232] [e2fsprogs] Logging build commands to /root/.cache/ybd/artifacts/e2fsprogs.b1042d2ea66c48f120e2930e1596e3fa74931a4b5917b9e2562cc888752e5873.build-log.0 
0:15-07-04 09:04:45 [57/232/232] [e2fsprogs] Running configure-commands
0:15-07-04 09:04:45 [57/232/232] [e2fsprogs] Running command:
./configure --prefix="$PREFIX" --sysconfdir=/etc \
  --disable-libuuid --disable-uuidd --disable-libblkid
 
WARNING: Unable to set filesystem_writable_paths=['e2fsprogs.build', 'e2fsprogs.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:05:06 [57/232/232] [e2fsprogs] Running build-commands
0:15-07-04 09:05:06 [57/232/232] [e2fsprogs] Running command:
make 
0:15-07-04 09:05:31 [57/232/232] [e2fsprogs] Running install-commands
0:15-07-04 09:05:31 [57/232/232] [e2fsprogs] Running command:
td="$(mktemp -d)"
make DESTDIR="$td" install
make DESTDIR="$td" install-libs
find "$td" \( -name blkid -o -name findfs -o \) -delete
find "$td" \( -name blkid.8 -o -name findfs.8 \) -delete
mv "$td"/* "$DESTDIR"
 
0:15-07-04 09:05:33 [57/232/232] [e2fsprogs] Running strip-commands
0:15-07-04 09:05:33 [57/232/232] [e2fsprogs] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:05:34 [57/232/232] [e2fsprogs] Creating cache artifact 
0:15-07-04 09:05:52 [57/232/232] [e2fsprogs] Now cached as e2fsprogs.b1042d2ea66c48f120e2930e1596e3fa74931a4b5917b9e2562cc888752e5873
0:15-07-04 09:05:53 [57/232/232] [e2fsprogs] Cleaned up /root/.cache/ybd/tmp/tmpIT7NBs
0:15-07-04 09:05:53 [57/232/232] [e2fsprogs] Elapsed time 00:24:04
0:15-07-04 09:05:53 [57/232/232] [core] Installing e2fsprogs.b1042d2ea66c48f120e2930e1596e3fa74931a4b5917b9e2562cc888752e5873 
0:15-07-04 09:05:54 [57/232/232] [gobject-introspection] Starting assembly 
0:15-07-04 09:05:54 [57/232/232] [libffi] Starting assembly 
0:15-07-04 09:05:54 [57/232/232] [libffi] Installing automake.5ecea1e1e8854cd5b57e2dd1cd8a1be491d56d19cacfaf6928fb37b65608ff35 
0:15-07-04 09:05:56 [57/232/232] [libffi] Installing autoconf.278e829c24d37b752078ef434ec68629f32008e71360ca2089b220f422b6d247 
0:15-07-04 09:05:56 [58/232/232] [libffi] Start build 
0:15-07-04 09:05:56 [58/232/232] [libffi] Git checkout upstream:libffi in /root/.cache/ybd/tmp/tmpACecQt/libffi.build 
0:15-07-04 09:05:56 [58/232/232] [libffi] Upstream version 77d4586c v3.0.13-3-g77d4586 (v3.0.13 + 3 commits) 
0:15-07-04 09:05:56 [58/232/232] [libffi] Logging build commands to /root/.cache/ybd/artifacts/libffi.2f4fc14a07e1559b57d4e893523c2f9bf21eee1922a1e17d9e1a9f4ff438b3c9.build-log.0 
0:15-07-04 09:05:56 [58/232/232] [libffi] Running configure-commands
0:15-07-04 09:05:56 [58/232/232] [libffi] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['libffi.build', 'libffi.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:05:57 [58/232/232] [libffi] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 09:06:03 [58/232/232] [libffi] Running build-commands
0:15-07-04 09:06:03 [58/232/232] [libffi] Running command:
make 
0:15-07-04 09:06:07 [58/232/232] [libffi] Running install-commands
0:15-07-04 09:06:07 [58/232/232] [libffi] Running command:
make DESTDIR="$DESTDIR"/ install 
0:15-07-04 09:06:08 [58/232/232] [libffi] Running command:
mkdir -p "$DESTDIR"/usr/include 
0:15-07-04 09:06:08 [58/232/232] [libffi] Running command:
cp "$TARGET"/include/ffi.h "$DESTDIR"/usr/include/ 
0:15-07-04 09:06:08 [58/232/232] [libffi] Running command:
cp "$TARGET"/include/ffitarget.h "$DESTDIR"/usr/include/ 
0:15-07-04 09:06:09 [58/232/232] [libffi] Running strip-commands
0:15-07-04 09:06:09 [58/232/232] [libffi] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:06:09 [58/232/232] [libffi] Creating cache artifact 
0:15-07-04 09:06:09 [58/232/232] [libffi] Now cached as libffi.2f4fc14a07e1559b57d4e893523c2f9bf21eee1922a1e17d9e1a9f4ff438b3c9
0:15-07-04 09:06:10 [58/232/232] [libffi] Cleaned up /root/.cache/ybd/tmp/tmpACecQt
0:15-07-04 09:06:10 [58/232/232] [libffi] Elapsed time 00:00:15
0:15-07-04 09:06:10 [58/232/232] [gobject-introspection] Installing libffi.2f4fc14a07e1559b57d4e893523c2f9bf21eee1922a1e17d9e1a9f4ff438b3c9 
0:15-07-04 09:06:12 [58/232/232] [gobject-introspection] Installing bison.1c2c924757d75d1d3cd5094ba9842153d374ea43160ba35979de68f8507c4655 
0:15-07-04 09:06:12 [58/232/232] [gobject-introspection] Installing pkg-config.84f5acc0f39930274b883b0a466be35d8c0927f5b4adbbee3f3f2dc542398b5b 
0:15-07-04 09:06:12 [58/232/232] [bash] Starting assembly 
0:15-07-04 09:06:12 [58/232/232] [bash] Installing build-essential.84d38c64321789981ff73617b6c12b553e153fe606e49d2b19bd304db9fcaae8 
0:15-07-04 09:06:13 [59/232/232] [bash] Start build 
0:15-07-04 09:06:14 [59/232/232] [bash] Git checkout upstream:bash in /root/.cache/ybd/tmp/tmpQhfYdJ/bash.build 
0:15-07-04 09:06:14 [59/232/232] [bash] Upstream version 3590145a bash-4.3-27-g3590145 (bash-4.3 + 27 commits) 
0:15-07-04 09:06:14 [59/232/232] [bash] Logging build commands to /root/.cache/ybd/artifacts/bash.68a7a90d6f6d544eff3bf063595268011b5d4b954862c11278f12b6963fba748.build-log.0 
0:15-07-04 09:06:14 [59/232/232] [bash] Running configure-commands
0:15-07-04 09:06:14 [59/232/232] [bash] Running command:
export CFLAGS="${CFLAGS}  -DSYS_BASHRC='\"/etc/bash.bashrc\"'";
./configure --prefix="$PREFIX" \
            --bindir=/bin \
            --without-bash-malloc \
            --with-installed-readline \
            --enable-readline
 
WARNING: Unable to set filesystem_writable_paths=['bash.build', 'bash.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:06:43 [59/232/232] [bash] Running build-commands
0:15-07-04 09:06:43 [59/232/232] [bash] Running command:
make 
0:15-07-04 09:06:48 [59/232/232] [bash] Running install-commands
0:15-07-04 09:06:48 [59/232/232] [bash] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 09:06:49 [59/232/232] [bash] Running post-install-commands
0:15-07-04 09:06:49 [59/232/232] [bash] Running command:
cat <<'EOF' >> bash.bashrc
#
# /etc/bash.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# Configure prompt for different terminals
case ${TERM} in
  xterm*|rxvt*|Eterm|aterm|kterm|gnome*)
    PROMPT_COMMAND=${PROMPT_COMMAND:+$PROMPT_COMMAND; }'printf "\033]0;%s@%s:%s\007" "${USER}" "${HOSTNAME%%.*}" "${PWD/#$HOME/\~}"'

    ;;
  screen)
    PROMPT_COMMAND=${PROMPT_COMMAND:+$PROMPT_COMMAND; }'printf "\033_%s@%s:%s\033\\" "${USER}" "${HOSTNAME%%.*}" "${PWD/#$HOME/\~}"'
    ;;
esac

# Enable bash completion if present
[ -r /usr/share/bash-completion/bash_completion   ] && . /usr/share/bash-completion/bash_completion
EOF
 
0:15-07-04 09:06:49 [59/232/232] [bash] Running command:
mkdir -p "$DESTDIR"/etc 
0:15-07-04 09:06:50 [59/232/232] [bash] Running command:
install -m 644 bash.bashrc "$DESTDIR"/etc/bash.bashrc 
0:15-07-04 09:06:50 [59/232/232] [bash] Running strip-commands
0:15-07-04 09:06:50 [59/232/232] [bash] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:06:50 [59/232/232] [bash] Creating cache artifact 
0:15-07-04 09:06:54 [59/232/232] [bash] Now cached as bash.68a7a90d6f6d544eff3bf063595268011b5d4b954862c11278f12b6963fba748
0:15-07-04 09:06:55 [59/232/232] [bash] Cleaned up /root/.cache/ybd/tmp/tmpQhfYdJ
0:15-07-04 09:06:55 [59/232/232] [bash] Elapsed time 00:00:43
0:15-07-04 09:06:55 [59/232/232] [gobject-introspection] Installing bash.68a7a90d6f6d544eff3bf063595268011b5d4b954862c11278f12b6963fba748 
0:15-07-04 09:06:55 [59/232/232] [gobject-introspection] Installing cpython.b954f5743abc77b1a0a5342542f054963067fa94acb960a8261617abbdea0695 
0:15-07-04 09:06:56 [59/232/232] [glib] Starting assembly 
0:15-07-04 09:06:56 [59/232/232] [glib] Installing automake.5ecea1e1e8854cd5b57e2dd1cd8a1be491d56d19cacfaf6928fb37b65608ff35 
0:15-07-04 09:06:57 [59/232/232] [glib] Installing gettext-tarball.3ceac18925fac6ff9174c1670a1cc3f4a56ef11888377ad4c8c3764835548216 
0:15-07-04 09:06:58 [59/232/232] [glib] Installing cpython.b954f5743abc77b1a0a5342542f054963067fa94acb960a8261617abbdea0695 
0:15-07-04 09:06:58 [59/232/232] [glib] Installing pkg-config.84f5acc0f39930274b883b0a466be35d8c0927f5b4adbbee3f3f2dc542398b5b 
0:15-07-04 09:06:58 [59/232/232] [glib] Installing libffi.2f4fc14a07e1559b57d4e893523c2f9bf21eee1922a1e17d9e1a9f4ff438b3c9 
0:15-07-04 09:06:58 [60/232/232] [glib] Start build 
0:15-07-04 09:07:00 [60/232/232] [glib] Git checkout upstream:glib in /root/.cache/ybd/tmp/tmpoHoFaE/glib.build 
0:15-07-04 09:07:00 [60/232/232] [glib] Upstream version 966ffb16 2.44.0 (2.44.0 + 0 commits) 
0:15-07-04 09:07:00 [60/232/232] [glib] Logging build commands to /root/.cache/ybd/artifacts/glib.9dd482cbe1e94205bf86e71c6884af15cbcfa1169f65fbf057f894fb27beb8a4.build-log.0 
0:15-07-04 09:07:00 [60/232/232] [glib] Running configure-commands
0:15-07-04 09:07:00 [60/232/232] [glib] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['glib.build', 'glib.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:08:03 [60/232/232] [glib] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 09:08:33 [60/232/232] [glib] Running build-commands
0:15-07-04 09:08:33 [60/232/232] [glib] Running command:
make 
0:15-07-04 09:09:21 [60/232/232] [glib] Running install-commands
0:15-07-04 09:09:21 [60/232/232] [glib] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 09:09:32 [60/232/232] [glib] Running strip-commands
0:15-07-04 09:09:32 [60/232/232] [glib] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:09:33 [60/232/232] [glib] Creating cache artifact 
0:15-07-04 09:09:52 [60/232/232] [glib] Now cached as glib.9dd482cbe1e94205bf86e71c6884af15cbcfa1169f65fbf057f894fb27beb8a4
0:15-07-04 09:09:53 [60/232/232] [glib] Cleaned up /root/.cache/ybd/tmp/tmpoHoFaE
0:15-07-04 09:09:53 [60/232/232] [glib] Elapsed time 00:02:57
0:15-07-04 09:09:53 [60/232/232] [gobject-introspection] Installing glib.9dd482cbe1e94205bf86e71c6884af15cbcfa1169f65fbf057f894fb27beb8a4 
0:15-07-04 09:09:54 [61/232/232] [gobject-introspection] Start build 
0:15-07-04 09:09:55 [61/232/232] [gobject-introspection] Git checkout upstream:gobject-introspection in /root/.cache/ybd/tmp/tmpoKK0QN/gobject-introspection.build 
0:15-07-04 09:09:55 [61/232/232] [gobject-introspection] Upstream version c0243e11 GOBJECT_INTROSPECTION_1_44_0 (GOBJECT_INTROSPECTION_1_44_0 + 0 commits) 
0:15-07-04 09:09:55 [61/232/232] [gobject-introspection] Logging build commands to /root/.cache/ybd/artifacts/gobject-introspection.6dc120fbd03c1b31e5c4217767fc7d0eeb4141fe4c5315582b6d4a8682c5c501.build-log.0 
0:15-07-04 09:09:55 [61/232/232] [gobject-introspection] Running configure-commands
0:15-07-04 09:09:55 [61/232/232] [gobject-introspection] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['gobject-introspection.build', 'gobject-introspection.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:10:26 [61/232/232] [gobject-introspection] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 09:10:37 [61/232/232] [gobject-introspection] Running build-commands
0:15-07-04 09:10:37 [61/232/232] [gobject-introspection] Running command:
make 
0:15-07-04 09:11:33 [61/232/232] [gobject-introspection] Running install-commands
0:15-07-04 09:11:33 [61/232/232] [gobject-introspection] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 09:11:37 [61/232/232] [gobject-introspection] Running strip-commands
0:15-07-04 09:11:37 [61/232/232] [gobject-introspection] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:11:38 [61/232/232] [gobject-introspection] Creating cache artifact 
0:15-07-04 09:11:46 [61/232/232] [gobject-introspection] Now cached as gobject-introspection.6dc120fbd03c1b31e5c4217767fc7d0eeb4141fe4c5315582b6d4a8682c5c501
0:15-07-04 09:11:47 [61/232/232] [gobject-introspection] Cleaned up /root/.cache/ybd/tmp/tmpoKK0QN
0:15-07-04 09:11:47 [61/232/232] [gobject-introspection] Elapsed time 00:05:53
0:15-07-04 09:11:47 [61/232/232] [core] Installing gobject-introspection.6dc120fbd03c1b31e5c4217767fc7d0eeb4141fe4c5315582b6d4a8682c5c501 
0:15-07-04 09:11:48 [61/232/232] [gperf] Starting assembly 
0:15-07-04 09:11:48 [61/232/232] [gperf] Installing build-essential.84d38c64321789981ff73617b6c12b553e153fe606e49d2b19bd304db9fcaae8 
0:15-07-04 09:11:48 [62/232/232] [gperf] Start build 
0:15-07-04 09:11:49 [62/232/232] [gperf] Git checkout upstream:gperf in /root/.cache/ybd/tmp/tmp2Uvc9E/gperf.build 
0:15-07-04 09:11:49 [62/232/232] [gperf] Upstream version 5094e4a5 v3.0.4-17-g5094e4a (v3.0.4 + 17 commits) 
0:15-07-04 09:11:49 [62/232/232] [gperf] Logging build commands to /root/.cache/ybd/artifacts/gperf.c7d15802a53237f6902fc2499b8cce5f01522aa2a67ba1d49a3dc202a39d51c4.build-log.0 
0:15-07-04 09:11:49 [62/232/232] [gperf] Running configure-commands
0:15-07-04 09:11:49 [62/232/232] [gperf] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['gperf.build', 'gperf.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:11:49 [62/232/232] [gperf] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 09:11:53 [62/232/232] [gperf] Running build-commands
0:15-07-04 09:11:53 [62/232/232] [gperf] Running command:
make 
0:15-07-04 09:11:56 [62/232/232] [gperf] Running install-commands
0:15-07-04 09:11:56 [62/232/232] [gperf] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 09:11:56 [62/232/232] [gperf] Running strip-commands
0:15-07-04 09:11:56 [62/232/232] [gperf] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:11:57 [62/232/232] [gperf] Creating cache artifact 
0:15-07-04 09:11:57 [62/232/232] [gperf] Now cached as gperf.c7d15802a53237f6902fc2499b8cce5f01522aa2a67ba1d49a3dc202a39d51c4
0:15-07-04 09:11:58 [62/232/232] [gperf] Cleaned up /root/.cache/ybd/tmp/tmp2Uvc9E
0:15-07-04 09:11:58 [62/232/232] [gperf] Elapsed time 00:00:09
0:15-07-04 09:11:58 [62/232/232] [core] Installing gperf.c7d15802a53237f6902fc2499b8cce5f01522aa2a67ba1d49a3dc202a39d51c4 
0:15-07-04 09:11:58 [62/232/232] [XML-Parser] Starting assembly 
0:15-07-04 09:11:58 [62/232/232] [XML-Parser] Installing build-essential.84d38c64321789981ff73617b6c12b553e153fe606e49d2b19bd304db9fcaae8 
0:15-07-04 09:11:58 [62/232/232] [XML-Parser] Installing libexpat.1f6bf05db7131859d2d8dc137a3c44052f2a14c050913434492db8308ec78242 
0:15-07-04 09:11:59 [63/232/232] [XML-Parser] Start build 
0:15-07-04 09:11:59 [63/232/232] [XML-Parser] Git checkout upstream:XML-Parser in /root/.cache/ybd/tmp/tmpEtEvhP/XML-Parser.build 
0:15-07-04 09:11:59 [63/232/232] [XML-Parser] Upstream version e1a3ec15 XML-Parser-2.41 (XML-Parser-2.41 + 0 commits) 
0:15-07-04 09:12:00 [63/232/232] [XML-Parser] Logging build commands to /root/.cache/ybd/artifacts/XML-Parser.a35bf49b59e66663a355c5cf0e515aa9d93431f7f8a3a48aa1c7222a07637014.build-log.0 
0:15-07-04 09:12:00 [63/232/232] [XML-Parser] Running configure-commands
0:15-07-04 09:12:00 [63/232/232] [XML-Parser] Running command:
perl Makefile.PL INSTALLDIRS=perl INSTALLARCHLIB="$PREFIX/lib/perl" INSTALLPRIVLIB="$PREFIX/lib/perl" INSTALLBIN="$PREFIX/bin" INSTALLSCRIPT="$PREFIX/bin" INSTALLMAN1DIR="$PREFIX/share/man/man1" INSTALLMAN3DIR="$PREFIX/share/man/man3" 
WARNING: Unable to set filesystem_writable_paths=['XML-Parser.build', 'XML-Parser.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:12:00 [63/232/232] [XML-Parser] Running build-commands
0:15-07-04 09:12:00 [63/232/232] [XML-Parser] Running command:
make 
0:15-07-04 09:12:05 [63/232/232] [XML-Parser] Running install-commands
0:15-07-04 09:12:05 [63/232/232] [XML-Parser] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 09:12:06 [63/232/232] [XML-Parser] Running strip-commands
0:15-07-04 09:12:06 [63/232/232] [XML-Parser] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:12:07 [63/232/232] [XML-Parser] Creating cache artifact 
0:15-07-04 09:12:07 [63/232/232] [XML-Parser] Now cached as XML-Parser.a35bf49b59e66663a355c5cf0e515aa9d93431f7f8a3a48aa1c7222a07637014
0:15-07-04 09:12:07 [63/232/232] [XML-Parser] Cleaned up /root/.cache/ybd/tmp/tmpEtEvhP
0:15-07-04 09:12:07 [63/232/232] [XML-Parser] Elapsed time 00:00:09
0:15-07-04 09:12:07 [63/232/232] [core] Installing XML-Parser.a35bf49b59e66663a355c5cf0e515aa9d93431f7f8a3a48aa1c7222a07637014 
0:15-07-04 09:12:08 [63/232/232] [intltool] Starting assembly 
0:15-07-04 09:12:08 [63/232/232] [intltool] Installing perl.e2432e758e9c75fa62a0b6bd9a73d45aafb1a1cc15907bf89afac73650d9e940 
0:15-07-04 09:12:09 [63/232/232] [intltool] Installing automake.5ecea1e1e8854cd5b57e2dd1cd8a1be491d56d19cacfaf6928fb37b65608ff35 
0:15-07-04 09:12:09 [63/232/232] [intltool] Installing autoconf.278e829c24d37b752078ef434ec68629f32008e71360ca2089b220f422b6d247 
0:15-07-04 09:12:09 [63/232/232] [intltool] Installing XML-Parser.a35bf49b59e66663a355c5cf0e515aa9d93431f7f8a3a48aa1c7222a07637014 
0:15-07-04 09:12:09 [64/232/232] [intltool] Start build 
0:15-07-04 09:12:09 [64/232/232] [intltool] Git checkout upstream:intltool in /root/.cache/ybd/tmp/tmptjNTOh/intltool.build 
0:15-07-04 09:12:09 [64/232/232] [intltool] Upstream version 12f04c88 intltool-0-41-0-64-g12f04c8 (intltool-0-41-0 + 64 commits) 
0:15-07-04 09:12:09 [64/232/232] [intltool] Logging build commands to /root/.cache/ybd/artifacts/intltool.9e868fb281702687e3372d34238f07495c1e26cdbc74fed2ce4d5a0d16d84eec.build-log.0 
0:15-07-04 09:12:09 [64/232/232] [intltool] Running configure-commands
0:15-07-04 09:12:09 [64/232/232] [intltool] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['intltool.build', 'intltool.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:12:15 [64/232/232] [intltool] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 09:12:17 [64/232/232] [intltool] Running build-commands
0:15-07-04 09:12:17 [64/232/232] [intltool] Running command:
make 
0:15-07-04 09:12:17 [64/232/232] [intltool] Running install-commands
0:15-07-04 09:12:17 [64/232/232] [intltool] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 09:12:18 [64/232/232] [intltool] Running strip-commands
0:15-07-04 09:12:18 [64/232/232] [intltool] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:12:18 [64/232/232] [intltool] Creating cache artifact 
0:15-07-04 09:12:18 [64/232/232] [intltool] Now cached as intltool.9e868fb281702687e3372d34238f07495c1e26cdbc74fed2ce4d5a0d16d84eec
0:15-07-04 09:12:19 [64/232/232] [intltool] Cleaned up /root/.cache/ybd/tmp/tmptjNTOh
0:15-07-04 09:12:19 [64/232/232] [intltool] Elapsed time 00:00:11
0:15-07-04 09:12:19 [64/232/232] [core] Installing intltool.9e868fb281702687e3372d34238f07495c1e26cdbc74fed2ce4d5a0d16d84eec 
0:15-07-04 09:12:19 [64/232/232] [gtk-doc-stub] Starting assembly 
0:15-07-04 09:12:19 [64/232/232] [gtk-doc-stub] Installing bash.68a7a90d6f6d544eff3bf063595268011b5d4b954862c11278f12b6963fba748 
0:15-07-04 09:12:20 [65/232/232] [gtk-doc-stub] Start build 
0:15-07-04 09:12:20 [65/232/232] [gtk-doc-stub] Git checkout upstream:gtk-doc-stub in /root/.cache/ybd/tmp/tmpalP9Ht/gtk-doc-stub.build 
0:15-07-04 09:12:20 [65/232/232] [gtk-doc-stub] Upstream version 58ec0d85 (No tag found) 
0:15-07-04 09:12:20 [65/232/232] [gtk-doc-stub] Logging build commands to /root/.cache/ybd/artifacts/gtk-doc-stub.d342ab15fe80ffd40b47811d8471774d7a1cae16e32dde212b54704e5a34b263.build-log.0 
0:15-07-04 09:12:20 [65/232/232] [gtk-doc-stub] Running configure-commands
0:15-07-04 09:12:20 [65/232/232] [gtk-doc-stub] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['gtk-doc-stub.build', 'gtk-doc-stub.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:12:20 [65/232/232] [gtk-doc-stub] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 09:12:20 [65/232/232] [gtk-doc-stub] Running build-commands
0:15-07-04 09:12:20 [65/232/232] [gtk-doc-stub] Running command:
make 
0:15-07-04 09:12:21 [65/232/232] [gtk-doc-stub] Running install-commands
0:15-07-04 09:12:21 [65/232/232] [gtk-doc-stub] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 09:12:21 [65/232/232] [gtk-doc-stub] Running strip-commands
0:15-07-04 09:12:21 [65/232/232] [gtk-doc-stub] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:12:21 [65/232/232] [gtk-doc-stub] Creating cache artifact 
0:15-07-04 09:12:21 [65/232/232] [gtk-doc-stub] Now cached as gtk-doc-stub.d342ab15fe80ffd40b47811d8471774d7a1cae16e32dde212b54704e5a34b263
0:15-07-04 09:12:21 [65/232/232] [gtk-doc-stub] Cleaned up /root/.cache/ybd/tmp/tmpalP9Ht
0:15-07-04 09:12:21 [65/232/232] [gtk-doc-stub] Elapsed time 00:00:02
0:15-07-04 09:12:21 [65/232/232] [core] Installing gtk-doc-stub.d342ab15fe80ffd40b47811d8471774d7a1cae16e32dde212b54704e5a34b263 
0:15-07-04 09:12:21 [65/232/232] [cython] Starting assembly 
0:15-07-04 09:12:21 [65/232/232] [cython] Installing build-essential.84d38c64321789981ff73617b6c12b553e153fe606e49d2b19bd304db9fcaae8 
0:15-07-04 09:12:22 [65/232/232] [cython] Installing cpython.b954f5743abc77b1a0a5342542f054963067fa94acb960a8261617abbdea0695 
0:15-07-04 09:12:24 [66/232/232] [cython] Start build 
0:15-07-04 09:12:24 [66/232/232] [cython] Git checkout upstream:cython in /root/.cache/ybd/tmp/tmpXnRlBg/cython.build 
0:15-07-04 09:12:24 [66/232/232] [cython] Upstream version 4dd8e762 0.22 (0.22 + 0 commits) 
0:15-07-04 09:12:25 [66/232/232] [cython] Logging build commands to /root/.cache/ybd/artifacts/cython.2200721dd357a97c80926c782c8b2a2bd9a7a3b476af48a6ebc6a50140aab956.build-log.0 
0:15-07-04 09:12:25 [66/232/232] [cython] Running build-commands
0:15-07-04 09:12:25 [66/232/232] [cython] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['cython.build', 'cython.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:18:41 [66/232/232] [cython] Running install-commands
0:15-07-04 09:18:41 [66/232/232] [cython] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 09:18:43 [66/232/232] [cython] Running strip-commands
0:15-07-04 09:18:43 [66/232/232] [cython] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:18:44 [66/232/232] [cython] Creating cache artifact 
0:15-07-04 09:19:05 [66/232/232] [cython] Now cached as cython.2200721dd357a97c80926c782c8b2a2bd9a7a3b476af48a6ebc6a50140aab956
0:15-07-04 09:19:06 [66/232/232] [cython] Cleaned up /root/.cache/ybd/tmp/tmpXnRlBg
0:15-07-04 09:19:06 [66/232/232] [cython] Elapsed time 00:06:44
0:15-07-04 09:19:06 [66/232/232] [core] Installing cython.2200721dd357a97c80926c782c8b2a2bd9a7a3b476af48a6ebc6a50140aab956 
0:15-07-04 09:19:06 [66/232/232] [libxslt] Starting assembly 
0:15-07-04 09:19:06 [66/232/232] [libxslt] Installing build-essential.84d38c64321789981ff73617b6c12b553e153fe606e49d2b19bd304db9fcaae8 
0:15-07-04 09:19:07 [66/232/232] [libxslt] Installing libtool.42bb7ca52453a8d4c87d81ef5f879d30eccbac8b01c02a95afb615222b5756e5 
0:15-07-04 09:19:08 [66/232/232] [libxml2] Starting assembly 
0:15-07-04 09:19:08 [66/232/232] [libxml2] Installing libtool.42bb7ca52453a8d4c87d81ef5f879d30eccbac8b01c02a95afb615222b5756e5 
0:15-07-04 09:19:10 [66/232/232] [libxml2] Installing cpython.b954f5743abc77b1a0a5342542f054963067fa94acb960a8261617abbdea0695 
0:15-07-04 09:19:11 [67/232/232] [libxml2] Start build 
0:15-07-04 09:19:12 [67/232/232] [libxml2] Git checkout upstream:libxml2 in /root/.cache/ybd/tmp/tmpub9J4f/libxml2.build 
0:15-07-04 09:19:13 [67/232/232] [libxml2] Upstream version ee8f1d4c v2.8.0-rc2 (v2.8.0-rc2 + 0 commits) 
0:15-07-04 09:19:13 [67/232/232] [libxml2] Logging build commands to /root/.cache/ybd/artifacts/libxml2.d677bfa76f93dda5ec7d10457e64cf41bf0df1f93ae7d3597a4cf57beef60b87.build-log.0 
0:15-07-04 09:19:13 [67/232/232] [libxml2] Running configure-commands
0:15-07-04 09:19:13 [67/232/232] [libxml2] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['libxml2.build', 'libxml2.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:19:45 [67/232/232] [libxml2] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 09:19:57 [67/232/232] [libxml2] Running build-commands
0:15-07-04 09:19:57 [67/232/232] [libxml2] Running command:
make 
0:15-07-04 09:21:41 [67/232/232] [libxml2] Running install-commands
0:15-07-04 09:21:41 [67/232/232] [libxml2] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 09:21:43 [67/232/232] [libxml2] Running strip-commands
0:15-07-04 09:21:43 [67/232/232] [libxml2] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:21:43 [67/232/232] [libxml2] Creating cache artifact 
0:15-07-04 09:22:06 [67/232/232] [libxml2] Now cached as libxml2.d677bfa76f93dda5ec7d10457e64cf41bf0df1f93ae7d3597a4cf57beef60b87
0:15-07-04 09:22:08 [67/232/232] [libxml2] Cleaned up /root/.cache/ybd/tmp/tmpub9J4f
0:15-07-04 09:22:08 [67/232/232] [libxml2] Elapsed time 00:02:59
0:15-07-04 09:22:08 [67/232/232] [libxslt] Installing libxml2.d677bfa76f93dda5ec7d10457e64cf41bf0df1f93ae7d3597a4cf57beef60b87 
0:15-07-04 09:22:09 [68/232/232] [libxslt] Start build 
0:15-07-04 09:22:10 [68/232/232] [libxslt] Git checkout upstream:libxslt in /root/.cache/ybd/tmp/tmpzwtcCr/libxslt.build 
0:15-07-04 09:22:10 [68/232/232] [libxslt] Upstream version 73e08bf7 v1.1.28-36-g73e08bf (v1.1.28 + 36 commits) 
0:15-07-04 09:22:10 [68/232/232] [libxslt] Logging build commands to /root/.cache/ybd/artifacts/libxslt.2b9bbf262627243a30c8cf63be6a7be7409836fa5d11401d7ce819d5b113668e.build-log.0 
0:15-07-04 09:22:10 [68/232/232] [libxslt] Running configure-commands
0:15-07-04 09:22:10 [68/232/232] [libxslt] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['libxslt.build', 'libxslt.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:22:23 [68/232/232] [libxslt] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 09:22:33 [68/232/232] [libxslt] Running build-commands
0:15-07-04 09:22:33 [68/232/232] [libxslt] Running command:
make 
0:15-07-04 09:22:54 [68/232/232] [libxslt] Running install-commands
0:15-07-04 09:22:54 [68/232/232] [libxslt] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 09:22:56 [68/232/232] [libxslt] Running strip-commands
0:15-07-04 09:22:56 [68/232/232] [libxslt] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:22:57 [68/232/232] [libxslt] Creating cache artifact 
0:15-07-04 09:23:03 [68/232/232] [libxslt] Now cached as libxslt.2b9bbf262627243a30c8cf63be6a7be7409836fa5d11401d7ce819d5b113668e
0:15-07-04 09:23:04 [68/232/232] [libxslt] Cleaned up /root/.cache/ybd/tmp/tmpzwtcCr
0:15-07-04 09:23:04 [68/232/232] [libxslt] Elapsed time 00:03:58
0:15-07-04 09:23:04 [68/232/232] [core] Installing libxslt.2b9bbf262627243a30c8cf63be6a7be7409836fa5d11401d7ce819d5b113668e 
0:15-07-04 09:23:05 [68/232/232] [gnome-common] Starting assembly 
0:15-07-04 09:23:05 [68/232/232] [gnome-common] Installing build-essential.84d38c64321789981ff73617b6c12b553e153fe606e49d2b19bd304db9fcaae8 
0:15-07-04 09:23:05 [68/232/232] [gnome-common] Installing autoconf.278e829c24d37b752078ef434ec68629f32008e71360ca2089b220f422b6d247 
0:15-07-04 09:23:06 [69/232/232] [gnome-common] Start build 
0:15-07-04 09:23:07 [69/232/232] [gnome-common] Git checkout upstream:gnome-common in /root/.cache/ybd/tmp/tmpwsubcF/gnome-common.build 
0:15-07-04 09:23:07 [69/232/232] [gnome-common] Upstream version 5d61b55e 3.14.0 (3.14.0 + 0 commits) 
0:15-07-04 09:23:07 [69/232/232] [gnome-common] Logging build commands to /root/.cache/ybd/artifacts/gnome-common.95a4737e9b495a098dd86d3b4ccafaf09b8b45e55aa48c6a395d9c3fb5246b3f.build-log.0 
0:15-07-04 09:23:07 [69/232/232] [gnome-common] Running configure-commands
0:15-07-04 09:23:07 [69/232/232] [gnome-common] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['gnome-common.build', 'gnome-common.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:23:13 [69/232/232] [gnome-common] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 09:23:15 [69/232/232] [gnome-common] Running build-commands
0:15-07-04 09:23:15 [69/232/232] [gnome-common] Running command:
make 
0:15-07-04 09:23:15 [69/232/232] [gnome-common] Running install-commands
0:15-07-04 09:23:15 [69/232/232] [gnome-common] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 09:23:16 [69/232/232] [gnome-common] Running strip-commands
0:15-07-04 09:23:16 [69/232/232] [gnome-common] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:23:16 [69/232/232] [gnome-common] Creating cache artifact 
0:15-07-04 09:23:16 [69/232/232] [gnome-common] Now cached as gnome-common.95a4737e9b495a098dd86d3b4ccafaf09b8b45e55aa48c6a395d9c3fb5246b3f
0:15-07-04 09:23:17 [69/232/232] [gnome-common] Cleaned up /root/.cache/ybd/tmp/tmpwsubcF
0:15-07-04 09:23:17 [69/232/232] [gnome-common] Elapsed time 00:00:12
0:15-07-04 09:23:17 [69/232/232] [core] Installing gnome-common.95a4737e9b495a098dd86d3b4ccafaf09b8b45e55aa48c6a395d9c3fb5246b3f 
0:15-07-04 09:23:17 [69/232/232] [curl] Starting assembly 
0:15-07-04 09:23:17 [69/232/232] [curl] Installing openssl-new.b7164bda7e7409dc23bcfc0bc8a9f9e537f7cc10303eb149fb4f53a084b6d69f 
0:15-07-04 09:23:18 [69/232/232] [curl] Installing libtool.42bb7ca52453a8d4c87d81ef5f879d30eccbac8b01c02a95afb615222b5756e5 
0:15-07-04 09:23:19 [69/232/232] [curl] Installing ca-certificates.3755c5e70ee6d94e0a58c3a872fd6400415b2d8d2bc4017f0dde54d9bdb9ea43 
0:15-07-04 09:23:20 [70/232/232] [curl] Start build 
0:15-07-04 09:23:21 [70/232/232] [curl] Git checkout upstream:curl in /root/.cache/ybd/tmp/tmpqYYwE9/curl.build 
0:15-07-04 09:23:21 [70/232/232] [curl] Upstream version 202aa9f7 curl-7_38_0 (curl-7_38_0 + 0 commits) 
0:15-07-04 09:23:21 [70/232/232] [curl] Logging build commands to /root/.cache/ybd/artifacts/curl.6a326a874991af317a197d5946d8fbed05b13284c1ae6733ba34ba180492e16b.build-log.0 
0:15-07-04 09:23:21 [70/232/232] [curl] Running configure-commands
0:15-07-04 09:23:21 [70/232/232] [curl] Running command:
./buildconf 
WARNING: Unable to set filesystem_writable_paths=['curl.build', 'curl.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:24:18 [70/232/232] [curl] Running command:
./configure --disable-manual --prefix="$PREFIX" 
0:15-07-04 09:24:59 [70/232/232] [curl] Running build-commands
0:15-07-04 09:24:59 [70/232/232] [curl] Running command:
make 
0:15-07-04 09:25:11 [70/232/232] [curl] Running install-commands
0:15-07-04 09:25:11 [70/232/232] [curl] Running command:
make  DESTDIR="$DESTDIR" install 
0:15-07-04 09:25:12 [70/232/232] [curl] Running strip-commands
0:15-07-04 09:25:12 [70/232/232] [curl] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:25:13 [70/232/232] [curl] Creating cache artifact 
0:15-07-04 09:25:14 [70/232/232] [curl] Now cached as curl.6a326a874991af317a197d5946d8fbed05b13284c1ae6733ba34ba180492e16b
0:15-07-04 09:25:16 [70/232/232] [curl] Cleaned up /root/.cache/ybd/tmp/tmpqYYwE9
0:15-07-04 09:25:16 [70/232/232] [curl] Elapsed time 00:01:58
0:15-07-04 09:25:16 [70/232/232] [core] Installing curl.6a326a874991af317a197d5946d8fbed05b13284c1ae6733ba34ba180492e16b 
0:15-07-04 09:25:16 [70/232/232] [cmake] Starting assembly 
0:15-07-04 09:25:16 [70/232/232] [cmake] Installing build-essential.84d38c64321789981ff73617b6c12b553e153fe606e49d2b19bd304db9fcaae8 
0:15-07-04 09:25:16 [71/232/232] [cmake] Start build 
0:15-07-04 09:25:19 [71/232/232] [cmake] Git checkout upstream:cmake in /root/.cache/ybd/tmp/tmplu9wRM/cmake.build 
0:15-07-04 09:25:19 [71/232/232] [cmake] Upstream version 732d8a46 v3.2.1 (v3.2.1 + 0 commits) 
0:15-07-04 09:25:20 [71/232/232] [cmake] Logging build commands to /root/.cache/ybd/artifacts/cmake.cb1cdb3a052883671bd735f25fc1a46dface04bc531a48158db33b726060ba67.build-log.0 
0:15-07-04 09:25:20 [71/232/232] [cmake] Running configure-commands
0:15-07-04 09:25:20 [71/232/232] [cmake] Running command:
./bootstrap --prefix="$PREFIX" --docdir=/share/doc/cmake --mandir=/share/man 
WARNING: Unable to set filesystem_writable_paths=['cmake.build', 'cmake.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:30:15 [71/232/232] [cmake] Running build-commands
0:15-07-04 09:30:15 [71/232/232] [cmake] Running command:
make 
0:15-07-04 09:31:17 [71/232/232] [cmake] Running install-commands
0:15-07-04 09:31:17 [71/232/232] [cmake] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 09:31:20 [71/232/232] [cmake] Running strip-commands
0:15-07-04 09:31:20 [71/232/232] [cmake] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:31:21 [71/232/232] [cmake] Creating cache artifact 
0:15-07-04 09:31:51 [71/232/232] [cmake] Now cached as cmake.cb1cdb3a052883671bd735f25fc1a46dface04bc531a48158db33b726060ba67
0:15-07-04 09:31:53 [71/232/232] [cmake] Cleaned up /root/.cache/ybd/tmp/tmplu9wRM
0:15-07-04 09:31:53 [71/232/232] [cmake] Elapsed time 00:06:37
0:15-07-04 09:31:53 [71/232/232] [core] Installing cmake.cb1cdb3a052883671bd735f25fc1a46dface04bc531a48158db33b726060ba67 
0:15-07-04 09:31:54 [71/232/232] [bc] Starting assembly 
0:15-07-04 09:31:54 [71/232/232] [bc] Installing build-essential.84d38c64321789981ff73617b6c12b553e153fe606e49d2b19bd304db9fcaae8 
0:15-07-04 09:31:55 [71/232/232] [bc] Installing texinfo-tarball.d05a7023a057f2440191ee906670f44bd865b2e6f295b7bf1bc6d5b06d922e62 
0:15-07-04 09:31:56 [71/232/232] [bc] Installing flex.6bc421595e5928919cc16c979b506ba5f5fb140791e1c7785e607165348f416f 
0:15-07-04 09:31:56 [72/232/232] [bc] Start build 
0:15-07-04 09:31:57 [72/232/232] [bc] Git checkout upstream:bc-tarball in /root/.cache/ybd/tmp/tmpw2jwnk/bc.build 
0:15-07-04 09:31:57 [72/232/232] [bc] Upstream version 0956d119 bc-1.06-3-g0956d11 (bc-1.06 + 3 commits) 
0:15-07-04 09:31:57 [72/232/232] [bc] Logging build commands to /root/.cache/ybd/artifacts/bc.aa843ca813feae52dc7b245e91f30030c72a701060db55ae8f128afeeb378096.build-log.0 
0:15-07-04 09:31:57 [72/232/232] [bc] Running configure-commands
0:15-07-04 09:31:57 [72/232/232] [bc] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['bc.build', 'bc.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:31:57 [72/232/232] [bc] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 09:32:03 [72/232/232] [bc] Running build-commands
0:15-07-04 09:32:03 [72/232/232] [bc] Running command:
make 
0:15-07-04 09:32:09 [72/232/232] [bc] Running install-commands
0:15-07-04 09:32:09 [72/232/232] [bc] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 09:32:09 [72/232/232] [bc] Running strip-commands
0:15-07-04 09:32:09 [72/232/232] [bc] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:32:10 [72/232/232] [bc] Creating cache artifact 
0:15-07-04 09:32:10 [72/232/232] [bc] Now cached as bc.aa843ca813feae52dc7b245e91f30030c72a701060db55ae8f128afeeb378096
0:15-07-04 09:32:11 [72/232/232] [bc] Cleaned up /root/.cache/ybd/tmp/tmpw2jwnk
0:15-07-04 09:32:11 [72/232/232] [bc] Elapsed time 00:00:16
0:15-07-04 09:32:11 [72/232/232] [core] Installing bc.aa843ca813feae52dc7b245e91f30030c72a701060db55ae8f128afeeb378096 
0:15-07-04 09:32:11 [72/232/232] [git] Starting assembly 
0:15-07-04 09:32:11 [72/232/232] [git] Installing autoconf.278e829c24d37b752078ef434ec68629f32008e71360ca2089b220f422b6d247 
0:15-07-04 09:32:13 [72/232/232] [git] Installing cpython.b954f5743abc77b1a0a5342542f054963067fa94acb960a8261617abbdea0695 
0:15-07-04 09:32:13 [72/232/232] [git] Installing gettext-tarball.3ceac18925fac6ff9174c1670a1cc3f4a56ef11888377ad4c8c3764835548216 
0:15-07-04 09:32:14 [72/232/232] [git] Installing curl.6a326a874991af317a197d5946d8fbed05b13284c1ae6733ba34ba180492e16b 
0:15-07-04 09:32:14 [73/232/232] [git] Start build 
0:15-07-04 09:32:16 [73/232/232] [git] Git checkout upstream:git in /root/.cache/ybd/tmp/tmpyUp94q/git.build 
0:15-07-04 09:32:16 [73/232/232] [git] Upstream version 9874fca7 v2.3.0 (v2.3.0 + 0 commits) 
0:15-07-04 09:32:16 [73/232/232] [git] Logging build commands to /root/.cache/ybd/artifacts/git.475ad783afda29f5b37a7c5cc0ca8b046a1733253baa2d17e9e40e41ad6ce504.build-log.0 
0:15-07-04 09:32:16 [73/232/232] [git] Running pre-configure-commands
0:15-07-04 09:32:16 [73/232/232] [git] Running command:
make configure 
WARNING: Unable to set filesystem_writable_paths=['git.build', 'git.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:32:18 [73/232/232] [git] Running configure-commands
0:15-07-04 09:32:18 [73/232/232] [git] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
0:15-07-04 09:32:18 [73/232/232] [git] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 09:32:27 [73/232/232] [git] Running build-commands
0:15-07-04 09:32:27 [73/232/232] [git] Running command:
make all 
0:15-07-04 09:32:38 [73/232/232] [git] Running install-commands
0:15-07-04 09:32:38 [73/232/232] [git] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 09:32:41 [73/232/232] [git] Running strip-commands
0:15-07-04 09:32:41 [73/232/232] [git] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:32:48 [73/232/232] [git] Creating cache artifact 
0:15-07-04 09:33:52 [73/232/232] [git] Now cached as git.475ad783afda29f5b37a7c5cc0ca8b046a1733253baa2d17e9e40e41ad6ce504
0:15-07-04 09:33:54 [73/232/232] [git] Cleaned up /root/.cache/ybd/tmp/tmpyUp94q
0:15-07-04 09:33:54 [73/232/232] [git] Elapsed time 00:01:42
0:15-07-04 09:33:54 [73/232/232] [core] Installing git.475ad783afda29f5b37a7c5cc0ca8b046a1733253baa2d17e9e40e41ad6ce504 
0:15-07-04 09:33:55 [74/232/232] [core] Start build 
0:15-07-04 09:33:55 [74/232/232] [core] Logging build commands to /root/.cache/ybd/artifacts/core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3.build-log.0 
0:15-07-04 09:33:55 [74/232/232] [core] Running strip-commands
0:15-07-04 09:33:55 [74/232/232] [core] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
WARNING: Unable to set filesystem_writable_paths=['core.build', 'core.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:33:55 [74/232/232] [core] Creating cache artifact 
0:15-07-04 09:33:55 [74/232/232] [core] Now cached as core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3
0:15-07-04 09:33:57 [74/232/232] [core] Cleaned up /root/.cache/ybd/tmp/tmpMsn1Jm
0:15-07-04 09:33:57 [74/232/232] [core] Elapsed time 01:20:11
0:15-07-04 09:33:57 [74/232/232] [pygobject] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 09:34:01 [75/232/232] [pygobject] Start build 
0:15-07-04 09:34:01 [75/232/232] [pygobject] Git checkout upstream:pygobject in /root/.cache/ybd/tmp/tmpzrj9Jh/pygobject.build 
0:15-07-04 09:34:01 [75/232/232] [pygobject] Upstream version 276341d7 3.12.0-1-g276341d (3.12.0 + 1 commits) 
0:15-07-04 09:34:01 [75/232/232] [pygobject] Logging build commands to /root/.cache/ybd/artifacts/pygobject.58ff8fb75318021c2abbd1cc1e9d75d04d096a65f4a9f8e0a615f0bfdc1013af.build-log.0 
0:15-07-04 09:34:01 [75/232/232] [pygobject] Running configure-commands
0:15-07-04 09:34:01 [75/232/232] [pygobject] Running command:
./autogen.sh --prefix="$PREFIX" --disable-cairo 
WARNING: Unable to set filesystem_writable_paths=['pygobject.build', 'pygobject.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:34:41 [75/232/232] [pygobject] Running build-commands
0:15-07-04 09:34:41 [75/232/232] [pygobject] Running command:
make 
0:15-07-04 09:34:53 [75/232/232] [pygobject] Running install-commands
0:15-07-04 09:34:53 [75/232/232] [pygobject] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 09:34:55 [75/232/232] [pygobject] Running strip-commands
0:15-07-04 09:34:55 [75/232/232] [pygobject] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:34:56 [75/232/232] [pygobject] Creating cache artifact 
0:15-07-04 09:34:57 [75/232/232] [pygobject] Now cached as pygobject.58ff8fb75318021c2abbd1cc1e9d75d04d096a65f4a9f8e0a615f0bfdc1013af
0:15-07-04 09:34:59 [75/232/232] [pygobject] Cleaned up /root/.cache/ybd/tmp/tmpzrj9Jh
0:15-07-04 09:34:59 [75/232/232] [pygobject] Elapsed time 01:21:13
0:15-07-04 09:34:59 [75/232/232] [python-pygobject] Installing pygobject.58ff8fb75318021c2abbd1cc1e9d75d04d096a65f4a9f8e0a615f0bfdc1013af 
0:15-07-04 09:35:03 [76/232/232] [python-pygobject] Start build 
0:15-07-04 09:35:03 [76/232/232] [python-pygobject] Logging build commands to /root/.cache/ybd/artifacts/python-pygobject.c096bf161a5d048df9260c5f025747a04033fd36c77749d888cf7c787497c561.build-log.0 
0:15-07-04 09:35:03 [76/232/232] [python-pygobject] Running strip-commands
0:15-07-04 09:35:03 [76/232/232] [python-pygobject] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
WARNING: Unable to set filesystem_writable_paths=['python-pygobject.build', 'python-pygobject.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:35:03 [76/232/232] [python-pygobject] Creating cache artifact 
0:15-07-04 09:35:03 [76/232/232] [python-pygobject] Now cached as python-pygobject.c096bf161a5d048df9260c5f025747a04033fd36c77749d888cf7c787497c561
0:15-07-04 09:35:04 [76/232/232] [python-pygobject] Cleaned up /root/.cache/ybd/tmp/tmpNEhkFV
0:15-07-04 09:35:04 [76/232/232] [python-pygobject] Elapsed time 01:21:19
0:15-07-04 09:35:04 [76/232/232] [cmdtest] Installing python-pygobject.c096bf161a5d048df9260c5f025747a04033fd36c77749d888cf7c787497c561 
0:15-07-04 09:35:08 [76/232/232] [ostree-core] Starting assembly 
0:15-07-04 09:35:08 [76/232/232] [ostree] Starting assembly 
0:15-07-04 09:35:08 [76/232/232] [libgsystem] Starting assembly 
0:15-07-04 09:35:08 [76/232/232] [libsoup-common] Starting assembly 
0:15-07-04 09:35:08 [76/232/232] [libsoup] Starting assembly 
0:15-07-04 09:35:08 [76/232/232] [libsoup] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 09:35:12 [77/232/232] [libsoup] Start build 
0:15-07-04 09:35:12 [77/232/232] [libsoup] Git checkout upstream:libsoup in /root/.cache/ybd/tmp/tmpxzPDpy/libsoup.build 
0:15-07-04 09:35:13 [77/232/232] [libsoup] Upstream version ce764489 2.46.0-3-gce76448 (2.46.0 + 3 commits) 
0:15-07-04 09:35:13 [77/232/232] [libsoup] Logging build commands to /root/.cache/ybd/artifacts/libsoup.4da268817c9ad0278a9b13c5939ff818cd481e5cf69fcfbe861dd5fdd3e652c1.build-log.0 
0:15-07-04 09:35:13 [77/232/232] [libsoup] Running configure-commands
0:15-07-04 09:35:13 [77/232/232] [libsoup] Running command:
NOCONFIGURE=1 ./autogen.sh 
WARNING: Unable to set filesystem_writable_paths=['libsoup.build', 'libsoup.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:35:43 [77/232/232] [libsoup] Running command:
./configure --prefix="$PREFIX" --disable-tls-check 
0:15-07-04 09:35:50 [77/232/232] [libsoup] Running build-commands
0:15-07-04 09:35:50 [77/232/232] [libsoup] Running command:
make 
0:15-07-04 09:36:16 [77/232/232] [libsoup] Running install-commands
0:15-07-04 09:36:16 [77/232/232] [libsoup] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 09:36:20 [77/232/232] [libsoup] Running strip-commands
0:15-07-04 09:36:20 [77/232/232] [libsoup] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:36:21 [77/232/232] [libsoup] Creating cache artifact 
0:15-07-04 09:36:30 [77/232/232] [libsoup] Now cached as libsoup.4da268817c9ad0278a9b13c5939ff818cd481e5cf69fcfbe861dd5fdd3e652c1
0:15-07-04 09:36:32 [77/232/232] [libsoup] Cleaned up /root/.cache/ybd/tmp/tmpxzPDpy
0:15-07-04 09:36:32 [77/232/232] [libsoup] Elapsed time 00:01:23
0:15-07-04 09:36:32 [77/232/232] [libsoup-common] Installing libsoup.4da268817c9ad0278a9b13c5939ff818cd481e5cf69fcfbe861dd5fdd3e652c1 
0:15-07-04 09:36:35 [78/232/232] [libsoup-common] Start build 
0:15-07-04 09:36:36 [78/232/232] [libsoup-common] Logging build commands to /root/.cache/ybd/artifacts/libsoup-common.fc8202498804601440068b87403b4350bb5b930aec1618f30cb3d1f4be188d7d.build-log.0 
0:15-07-04 09:36:36 [78/232/232] [libsoup-common] Running strip-commands
0:15-07-04 09:36:36 [78/232/232] [libsoup-common] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
WARNING: Unable to set filesystem_writable_paths=['libsoup-common.build', 'libsoup-common.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:36:36 [78/232/232] [libsoup-common] Creating cache artifact 
0:15-07-04 09:36:36 [78/232/232] [libsoup-common] Now cached as libsoup-common.fc8202498804601440068b87403b4350bb5b930aec1618f30cb3d1f4be188d7d
0:15-07-04 09:36:37 [78/232/232] [libsoup-common] Cleaned up /root/.cache/ybd/tmp/tmpOMujF8
0:15-07-04 09:36:37 [78/232/232] [libsoup-common] Elapsed time 00:01:29
0:15-07-04 09:36:37 [78/232/232] [libgsystem] Installing libsoup-common.fc8202498804601440068b87403b4350bb5b930aec1618f30cb3d1f4be188d7d 
0:15-07-04 09:36:41 [79/232/232] [libgsystem] Start build 
0:15-07-04 09:36:42 [79/232/232] [libgsystem] Git checkout upstream:libgsystem in /root/.cache/ybd/tmp/tmpy6Qr1H/libgsystem.build 
0:15-07-04 09:36:42 [79/232/232] [libgsystem] Upstream version 8231b8ad v2015.1-1-g8231b8a (v2015.1 + 1 commits) 
0:15-07-04 09:36:42 [79/232/232] [libgsystem] Logging build commands to /root/.cache/ybd/artifacts/libgsystem.fac16c365835bc12f1a053675690c70b4f829b6ceff093cd74c7e90b389da506.build-log.0 
0:15-07-04 09:36:42 [79/232/232] [libgsystem] Running configure-commands
0:15-07-04 09:36:42 [79/232/232] [libgsystem] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['libgsystem.build', 'libgsystem.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:37:10 [79/232/232] [libgsystem] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 09:37:15 [79/232/232] [libgsystem] Running build-commands
0:15-07-04 09:37:15 [79/232/232] [libgsystem] Running command:
make 
0:15-07-04 09:37:23 [79/232/232] [libgsystem] Running install-commands
0:15-07-04 09:37:23 [79/232/232] [libgsystem] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 09:37:24 [79/232/232] [libgsystem] Running strip-commands
0:15-07-04 09:37:24 [79/232/232] [libgsystem] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:37:25 [79/232/232] [libgsystem] Creating cache artifact 
0:15-07-04 09:37:25 [79/232/232] [libgsystem] Now cached as libgsystem.fac16c365835bc12f1a053675690c70b4f829b6ceff093cd74c7e90b389da506
0:15-07-04 09:37:26 [79/232/232] [libgsystem] Cleaned up /root/.cache/ybd/tmp/tmpy6Qr1H
0:15-07-04 09:37:26 [79/232/232] [libgsystem] Elapsed time 00:02:18
0:15-07-04 09:37:26 [79/232/232] [ostree] Installing libgsystem.fac16c365835bc12f1a053675690c70b4f829b6ceff093cd74c7e90b389da506 
0:15-07-04 09:37:30 [80/232/232] [ostree] Start build 
0:15-07-04 09:37:31 [80/232/232] [ostree] Git checkout upstream:ostree in /root/.cache/ybd/tmp/tmpQQtCEX/ostree.build 
0:15-07-04 09:37:31 [80/232/232] [ostree] Upstream version c9704e98 v2015.3-21-gc9704e9 (v2015.3 + 21 commits) 
0:15-07-04 09:37:31 [80/232/232] [ostree] Logging build commands to /root/.cache/ybd/artifacts/ostree.00701e7592a3fbd0015973b7f1f91f0a721209cd64613285c7bf37c19437d893.build-log.0 
0:15-07-04 09:37:31 [80/232/232] [ostree] Running configure-commands
0:15-07-04 09:37:31 [80/232/232] [ostree] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['ostree.build', 'ostree.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:38:00 [80/232/232] [ostree] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 09:38:07 [80/232/232] [ostree] Running build-commands
0:15-07-04 09:38:07 [80/232/232] [ostree] Running command:
make 
0:15-07-04 09:38:20 [80/232/232] [ostree] Running install-commands
0:15-07-04 09:38:20 [80/232/232] [ostree] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 09:38:23 [80/232/232] [ostree] Running strip-commands
0:15-07-04 09:38:23 [80/232/232] [ostree] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:38:24 [80/232/232] [ostree] Creating cache artifact 
0:15-07-04 09:38:26 [80/232/232] [ostree] Now cached as ostree.00701e7592a3fbd0015973b7f1f91f0a721209cd64613285c7bf37c19437d893
0:15-07-04 09:38:28 [80/232/232] [ostree] Cleaned up /root/.cache/ybd/tmp/tmpQQtCEX
0:15-07-04 09:38:28 [80/232/232] [ostree] Elapsed time 00:03:19
0:15-07-04 09:38:28 [80/232/232] [ostree-core] Installing ostree.00701e7592a3fbd0015973b7f1f91f0a721209cd64613285c7bf37c19437d893 
0:15-07-04 09:38:31 [81/232/232] [ostree-core] Start build 
0:15-07-04 09:38:32 [81/232/232] [ostree-core] Logging build commands to /root/.cache/ybd/artifacts/ostree-core.59d09c4a882ef1bd276c0c3c352fcd6ae2dd66668b2f62e9809effd0509a9b81.build-log.0 
0:15-07-04 09:38:32 [81/232/232] [ostree-core] Running strip-commands
0:15-07-04 09:38:32 [81/232/232] [ostree-core] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
WARNING: Unable to set filesystem_writable_paths=['ostree-core.build', 'ostree-core.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:38:32 [81/232/232] [ostree-core] Creating cache artifact 
0:15-07-04 09:38:32 [81/232/232] [ostree-core] Now cached as ostree-core.59d09c4a882ef1bd276c0c3c352fcd6ae2dd66668b2f62e9809effd0509a9b81
0:15-07-04 09:38:33 [81/232/232] [ostree-core] Cleaned up /root/.cache/ybd/tmp/tmpq730Xv
0:15-07-04 09:38:33 [81/232/232] [ostree-core] Elapsed time 00:03:25
0:15-07-04 09:38:33 [81/232/232] [cmdtest] Installing ostree-core.59d09c4a882ef1bd276c0c3c352fcd6ae2dd66668b2f62e9809effd0509a9b81 
0:15-07-04 09:38:33 [81/232/232] [python-cliapp] Starting assembly 
0:15-07-04 09:38:33 [81/232/232] [python-coverage-test-runner] Starting assembly 
0:15-07-04 09:38:33 [81/232/232] [python-core] Starting assembly 
0:15-07-04 09:38:34 [81/232/232] [python-setuptools] Starting assembly 
0:15-07-04 09:38:34 [81/232/232] [python-setuptools] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 09:38:37 [82/232/232] [python-setuptools] Start build 
0:15-07-04 09:38:37 [82/232/232] [python-setuptools] Git checkout upstream:python-setuptools-bitbucket in /root/.cache/ybd/tmp/tmpVS5D8H/python-setuptools.build 
0:15-07-04 09:38:38 [82/232/232] [python-setuptools] Upstream version 0aa6a4de 7.0-1-g0aa6a4d (7.0 + 1 commits) 
0:15-07-04 09:38:38 [82/232/232] [python-setuptools] Logging build commands to /root/.cache/ybd/artifacts/python-setuptools.c0754f3142477adc07dd51a380727d2b56c036e9b0b19c24469c2a93532405a8.build-log.0 
0:15-07-04 09:38:38 [82/232/232] [python-setuptools] Running build-commands
0:15-07-04 09:38:38 [82/232/232] [python-setuptools] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-setuptools.build', 'python-setuptools.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:38:39 [82/232/232] [python-setuptools] Running install-commands
0:15-07-04 09:38:39 [82/232/232] [python-setuptools] Running command:
python setup.py install --prefix=/usr --root "$DESTDIR" 
0:15-07-04 09:38:41 [82/232/232] [python-setuptools] Running strip-commands
0:15-07-04 09:38:41 [82/232/232] [python-setuptools] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:38:41 [82/232/232] [python-setuptools] Creating cache artifact 
0:15-07-04 09:38:42 [82/232/232] [python-setuptools] Now cached as python-setuptools.c0754f3142477adc07dd51a380727d2b56c036e9b0b19c24469c2a93532405a8
0:15-07-04 09:38:43 [82/232/232] [python-setuptools] Cleaned up /root/.cache/ybd/tmp/tmpVS5D8H
0:15-07-04 09:38:43 [82/232/232] [python-setuptools] Elapsed time 00:00:09
0:15-07-04 09:38:43 [82/232/232] [python-core] Installing python-setuptools.c0754f3142477adc07dd51a380727d2b56c036e9b0b19c24469c2a93532405a8 
0:15-07-04 09:38:47 [82/232/232] [mako] Starting assembly 
0:15-07-04 09:38:47 [82/232/232] [mako] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 09:38:51 [82/232/232] [mako] Installing python-setuptools.c0754f3142477adc07dd51a380727d2b56c036e9b0b19c24469c2a93532405a8 
0:15-07-04 09:38:51 [83/232/232] [mako] Start build 
0:15-07-04 09:38:51 [83/232/232] [mako] Git checkout upstream:python-packages/mako.git in /root/.cache/ybd/tmp/tmpJGYugo/mako.build 
0:15-07-04 09:38:51 [83/232/232] [mako] Upstream version 285bc818 rel_1_0_0 (rel_1_0_0 + 0 commits) 
0:15-07-04 09:38:51 [83/232/232] [mako] Logging build commands to /root/.cache/ybd/artifacts/mako.424fe0f3bbd0272d32e694ab34626365ad920164237a3d8c601cabaac862217b.build-log.0 
0:15-07-04 09:38:51 [83/232/232] [mako] Running build-commands
0:15-07-04 09:38:51 [83/232/232] [mako] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['mako.build', 'mako.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:38:53 [83/232/232] [mako] Running install-commands
0:15-07-04 09:38:53 [83/232/232] [mako] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 09:38:54 [83/232/232] [mako] Running strip-commands
0:15-07-04 09:38:54 [83/232/232] [mako] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:38:54 [83/232/232] [mako] Creating cache artifact 
0:15-07-04 09:38:54 [83/232/232] [mako] Now cached as mako.424fe0f3bbd0272d32e694ab34626365ad920164237a3d8c601cabaac862217b
0:15-07-04 09:38:56 [83/232/232] [mako] Cleaned up /root/.cache/ybd/tmp/tmpJGYugo
0:15-07-04 09:38:56 [83/232/232] [mako] Elapsed time 00:00:09
0:15-07-04 09:38:56 [83/232/232] [python-core] Installing mako.424fe0f3bbd0272d32e694ab34626365ad920164237a3d8c601cabaac862217b 
0:15-07-04 09:38:56 [83/232/232] [six] Starting assembly 
0:15-07-04 09:38:56 [83/232/232] [six] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 09:39:00 [84/232/232] [six] Start build 
0:15-07-04 09:39:00 [84/232/232] [six] Git checkout upstream:six in /root/.cache/ybd/tmp/tmpWOFMxS/six.build 
0:15-07-04 09:39:00 [84/232/232] [six] Upstream version 8cfbff6b 1.9.0 (1.9.0 + 0 commits) 
0:15-07-04 09:39:00 [84/232/232] [six] Logging build commands to /root/.cache/ybd/artifacts/six.bcba0e5f97e252cd4a341c5bcd1a3465ad8d19516b3b1cfa1af3d038323f0755.build-log.0 
0:15-07-04 09:39:00 [84/232/232] [six] Running build-commands
0:15-07-04 09:39:00 [84/232/232] [six] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['six.build', 'six.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:39:01 [84/232/232] [six] Running install-commands
0:15-07-04 09:39:01 [84/232/232] [six] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 09:39:01 [84/232/232] [six] Running strip-commands
0:15-07-04 09:39:01 [84/232/232] [six] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:39:02 [84/232/232] [six] Creating cache artifact 
0:15-07-04 09:39:02 [84/232/232] [six] Now cached as six.bcba0e5f97e252cd4a341c5bcd1a3465ad8d19516b3b1cfa1af3d038323f0755
0:15-07-04 09:39:03 [84/232/232] [six] Cleaned up /root/.cache/ybd/tmp/tmpWOFMxS
0:15-07-04 09:39:03 [84/232/232] [six] Elapsed time 00:00:06
0:15-07-04 09:39:03 [84/232/232] [python-core] Installing six.bcba0e5f97e252cd4a341c5bcd1a3465ad8d19516b3b1cfa1af3d038323f0755 
0:15-07-04 09:39:03 [84/232/232] [python-lxml] Starting assembly 
0:15-07-04 09:39:03 [84/232/232] [python-lxml] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 09:39:07 [85/232/232] [python-lxml] Start build 
0:15-07-04 09:39:07 [85/232/232] [python-lxml] Git checkout upstream:python-lxml in /root/.cache/ybd/tmp/tmp3XQp1t/python-lxml.build 
0:15-07-04 09:39:07 [85/232/232] [python-lxml] Upstream version 14505bc6 lxml-3.4.0 (lxml-3.4.0 + 0 commits) 
0:15-07-04 09:39:07 [85/232/232] [python-lxml] Logging build commands to /root/.cache/ybd/artifacts/python-lxml.4da2e2f42c0aee30b38feb9eac8334ee11a21f18b8f56ee959253f71f3e6e7d8.build-log.0 
0:15-07-04 09:39:07 [85/232/232] [python-lxml] Running build-commands
0:15-07-04 09:39:07 [85/232/232] [python-lxml] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-lxml.build', 'python-lxml.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:43:15 [85/232/232] [python-lxml] Running install-commands
0:15-07-04 09:43:15 [85/232/232] [python-lxml] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 09:43:16 [85/232/232] [python-lxml] Running strip-commands
0:15-07-04 09:43:16 [85/232/232] [python-lxml] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:43:17 [85/232/232] [python-lxml] Creating cache artifact 
0:15-07-04 09:43:27 [85/232/232] [python-lxml] Now cached as python-lxml.4da2e2f42c0aee30b38feb9eac8334ee11a21f18b8f56ee959253f71f3e6e7d8
0:15-07-04 09:43:29 [85/232/232] [python-lxml] Cleaned up /root/.cache/ybd/tmp/tmp3XQp1t
0:15-07-04 09:43:29 [85/232/232] [python-lxml] Elapsed time 00:04:25
0:15-07-04 09:43:29 [85/232/232] [python-core] Installing python-lxml.4da2e2f42c0aee30b38feb9eac8334ee11a21f18b8f56ee959253f71f3e6e7d8 
0:15-07-04 09:43:29 [85/232/232] [pip] Starting assembly 
0:15-07-04 09:43:29 [85/232/232] [pip] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 09:43:32 [85/232/232] [pip] Installing python-setuptools.c0754f3142477adc07dd51a380727d2b56c036e9b0b19c24469c2a93532405a8 
0:15-07-04 09:43:32 [86/232/232] [pip] Start build 
0:15-07-04 09:43:33 [86/232/232] [pip] Git checkout upstream:pip in /root/.cache/ybd/tmp/tmpm_AkjT/pip.build 
0:15-07-04 09:43:33 [86/232/232] [pip] Upstream version ea680f20 1.5.6-11-gea680f2 (1.5.6 + 11 commits) 
0:15-07-04 09:43:33 [86/232/232] [pip] Logging build commands to /root/.cache/ybd/artifacts/pip.68471b602f011719f9a14100455e820e0b4d3aaf45ff9913e6653b5e160f7863.build-log.0 
0:15-07-04 09:43:33 [86/232/232] [pip] Running build-commands
0:15-07-04 09:43:33 [86/232/232] [pip] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['pip.build', 'pip.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:43:35 [86/232/232] [pip] Running install-commands
0:15-07-04 09:43:35 [86/232/232] [pip] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 09:43:38 [86/232/232] [pip] Running strip-commands
0:15-07-04 09:43:38 [86/232/232] [pip] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:43:38 [86/232/232] [pip] Creating cache artifact 
0:15-07-04 09:43:42 [86/232/232] [pip] Now cached as pip.68471b602f011719f9a14100455e820e0b4d3aaf45ff9913e6653b5e160f7863
0:15-07-04 09:43:44 [86/232/232] [pip] Cleaned up /root/.cache/ybd/tmp/tmpm_AkjT
0:15-07-04 09:43:44 [86/232/232] [pip] Elapsed time 00:00:15
0:15-07-04 09:43:44 [86/232/232] [python-core] Installing pip.68471b602f011719f9a14100455e820e0b4d3aaf45ff9913e6653b5e160f7863 
0:15-07-04 09:43:44 [86/232/232] [pbr] Starting assembly 
0:15-07-04 09:43:44 [86/232/232] [pbr] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 09:43:48 [86/232/232] [pbr] Installing pip.68471b602f011719f9a14100455e820e0b4d3aaf45ff9913e6653b5e160f7863 
0:15-07-04 09:43:48 [87/232/232] [pbr] Start build 
0:15-07-04 09:43:48 [87/232/232] [pbr] Git checkout upstream:pbr in /root/.cache/ybd/tmp/tmpZb_EV_/pbr.build 
0:15-07-04 09:43:48 [87/232/232] [pbr] Upstream version aef4f7ef 0.10.7 (0.10.7 + 0 commits) 
0:15-07-04 09:43:48 [87/232/232] [pbr] Logging build commands to /root/.cache/ybd/artifacts/pbr.7ea3e259e1643cd0e90bb28525d97b7fac48880f9dbf63176641a246f4a2a5f3.build-log.0 
0:15-07-04 09:43:48 [87/232/232] [pbr] Running build-commands
0:15-07-04 09:43:48 [87/232/232] [pbr] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['pbr.build', 'pbr.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:43:50 [87/232/232] [pbr] Running install-commands
0:15-07-04 09:43:50 [87/232/232] [pbr] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 09:43:51 [87/232/232] [pbr] Running strip-commands
0:15-07-04 09:43:51 [87/232/232] [pbr] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:43:51 [87/232/232] [pbr] Creating cache artifact 
0:15-07-04 09:43:52 [87/232/232] [pbr] Now cached as pbr.7ea3e259e1643cd0e90bb28525d97b7fac48880f9dbf63176641a246f4a2a5f3
0:15-07-04 09:43:53 [87/232/232] [pbr] Cleaned up /root/.cache/ybd/tmp/tmpZb_EV_
0:15-07-04 09:43:53 [87/232/232] [pbr] Elapsed time 00:00:09
0:15-07-04 09:43:53 [87/232/232] [python-core] Installing pbr.7ea3e259e1643cd0e90bb28525d97b7fac48880f9dbf63176641a246f4a2a5f3 
0:15-07-04 09:43:53 [87/232/232] [pyyaml] Starting assembly 
0:15-07-04 09:43:53 [87/232/232] [pyyaml] Installing python-setuptools.c0754f3142477adc07dd51a380727d2b56c036e9b0b19c24469c2a93532405a8 
0:15-07-04 09:43:57 [88/232/232] [pyyaml] Start build 
0:15-07-04 09:43:57 [88/232/232] [pyyaml] Git checkout upstream:pyyaml in /root/.cache/ybd/tmp/tmp9qBZMc/pyyaml.build 
0:15-07-04 09:43:57 [88/232/232] [pyyaml] Upstream version d9fbccea (No tag found) 
0:15-07-04 09:43:57 [88/232/232] [pyyaml] Logging build commands to /root/.cache/ybd/artifacts/pyyaml.a55848bc8dccceefccc95075cd75b6d95cb876e6e5d468fea2a82f02d95b1d39.build-log.0 
0:15-07-04 09:43:57 [88/232/232] [pyyaml] Running build-commands
0:15-07-04 09:43:57 [88/232/232] [pyyaml] Running command:
python setup.py --without-libyaml build 
WARNING: Unable to set filesystem_writable_paths=['pyyaml.build', 'pyyaml.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:43:58 [88/232/232] [pyyaml] Running install-commands
0:15-07-04 09:43:58 [88/232/232] [pyyaml] Running command:
python setup.py --without-libyaml install --prefix="$PREFIX" --root "$DESTDIR" 
0:15-07-04 09:43:59 [88/232/232] [pyyaml] Running strip-commands
0:15-07-04 09:43:59 [88/232/232] [pyyaml] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:43:59 [88/232/232] [pyyaml] Creating cache artifact 
0:15-07-04 09:43:59 [88/232/232] [pyyaml] Now cached as pyyaml.a55848bc8dccceefccc95075cd75b6d95cb876e6e5d468fea2a82f02d95b1d39
0:15-07-04 09:44:01 [88/232/232] [pyyaml] Cleaned up /root/.cache/ybd/tmp/tmp9qBZMc
0:15-07-04 09:44:01 [88/232/232] [pyyaml] Elapsed time 00:00:07
0:15-07-04 09:44:01 [88/232/232] [python-core] Installing pyyaml.a55848bc8dccceefccc95075cd75b6d95cb876e6e5d468fea2a82f02d95b1d39 
0:15-07-04 09:44:01 [88/232/232] [python-requests] Starting assembly 
0:15-07-04 09:44:01 [88/232/232] [python-requests] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 09:44:05 [89/232/232] [python-requests] Start build 
0:15-07-04 09:44:05 [89/232/232] [python-requests] Git checkout upstream:python-requests in /root/.cache/ybd/tmp/tmpDm53Qs/python-requests.build 
0:15-07-04 09:44:05 [89/232/232] [python-requests] Upstream version b8313177 v2.5.1 (v2.5.1 + 0 commits) 
0:15-07-04 09:44:05 [89/232/232] [python-requests] Logging build commands to /root/.cache/ybd/artifacts/python-requests.aa81fcce18aad909447a5df18944a4180ea80f0b73d845a833ce9fb12a44a563.build-log.0 
0:15-07-04 09:44:05 [89/232/232] [python-requests] Running build-commands
0:15-07-04 09:44:05 [89/232/232] [python-requests] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-requests.build', 'python-requests.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:44:07 [89/232/232] [python-requests] Running install-commands
0:15-07-04 09:44:07 [89/232/232] [python-requests] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 09:44:08 [89/232/232] [python-requests] Running strip-commands
0:15-07-04 09:44:08 [89/232/232] [python-requests] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:44:09 [89/232/232] [python-requests] Creating cache artifact 
0:15-07-04 09:44:11 [89/232/232] [python-requests] Now cached as python-requests.aa81fcce18aad909447a5df18944a4180ea80f0b73d845a833ce9fb12a44a563
0:15-07-04 09:44:13 [89/232/232] [python-requests] Cleaned up /root/.cache/ybd/tmp/tmpDm53Qs
0:15-07-04 09:44:13 [89/232/232] [python-requests] Elapsed time 00:00:11
0:15-07-04 09:44:13 [89/232/232] [python-core] Installing python-requests.aa81fcce18aad909447a5df18944a4180ea80f0b73d845a833ce9fb12a44a563 
0:15-07-04 09:44:13 [89/232/232] [python-markdown] Starting assembly 
0:15-07-04 09:44:13 [89/232/232] [python-markdown] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 09:44:17 [90/232/232] [python-markdown] Start build 
0:15-07-04 09:44:17 [90/232/232] [python-markdown] Git checkout upstream:python-markdown in /root/.cache/ybd/tmp/tmpKRevOx/python-markdown.build 
0:15-07-04 09:44:17 [90/232/232] [python-markdown] Upstream version f0c5b71a 2.5.1-final (2.5.1-final + 0 commits) 
0:15-07-04 09:44:17 [90/232/232] [python-markdown] Logging build commands to /root/.cache/ybd/artifacts/python-markdown.b8aa00f205e64d7367883359e6d0bc6ef3cdae61e28dee8d9501424d0ebd95e7.build-log.0 
0:15-07-04 09:44:17 [90/232/232] [python-markdown] Running build-commands
0:15-07-04 09:44:17 [90/232/232] [python-markdown] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-markdown.build', 'python-markdown.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:44:21 [90/232/232] [python-markdown] Running install-commands
0:15-07-04 09:44:21 [90/232/232] [python-markdown] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 09:44:22 [90/232/232] [python-markdown] Running strip-commands
0:15-07-04 09:44:22 [90/232/232] [python-markdown] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:44:22 [90/232/232] [python-markdown] Creating cache artifact 
0:15-07-04 09:44:22 [90/232/232] [python-markdown] Now cached as python-markdown.b8aa00f205e64d7367883359e6d0bc6ef3cdae61e28dee8d9501424d0ebd95e7
0:15-07-04 09:44:24 [90/232/232] [python-markdown] Cleaned up /root/.cache/ybd/tmp/tmpKRevOx
0:15-07-04 09:44:24 [90/232/232] [python-markdown] Elapsed time 00:00:10
0:15-07-04 09:44:24 [90/232/232] [python-core] Installing python-markdown.b8aa00f205e64d7367883359e6d0bc6ef3cdae61e28dee8d9501424d0ebd95e7 
0:15-07-04 09:44:24 [91/232/232] [python-core] Start build 
0:15-07-04 09:44:24 [91/232/232] [python-core] Logging build commands to /root/.cache/ybd/artifacts/python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5.build-log.0 
0:15-07-04 09:44:24 [91/232/232] [python-core] Running strip-commands
0:15-07-04 09:44:24 [91/232/232] [python-core] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
WARNING: Unable to set filesystem_writable_paths=['python-core.build', 'python-core.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:44:24 [91/232/232] [python-core] Creating cache artifact 
0:15-07-04 09:44:24 [91/232/232] [python-core] Now cached as python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5
0:15-07-04 09:44:26 [91/232/232] [python-core] Cleaned up /root/.cache/ybd/tmp/tmpxcNA1F
0:15-07-04 09:44:26 [91/232/232] [python-core] Elapsed time 00:05:52
0:15-07-04 09:44:26 [91/232/232] [python-coverage-test-runner] Installing python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5 
0:15-07-04 09:44:29 [91/232/232] [python-coveragepy] Starting assembly 
0:15-07-04 09:44:30 [91/232/232] [python-coveragepy] Installing python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5 
0:15-07-04 09:44:33 [92/232/232] [python-coveragepy] Start build 
0:15-07-04 09:44:34 [92/232/232] [python-coveragepy] Git checkout upstream:python-coveragepy in /root/.cache/ybd/tmp/tmpCzVfwW/python-coveragepy.build 
0:15-07-04 09:44:34 [92/232/232] [python-coveragepy] Upstream version 77d2e3bf coverage-3.5.1-10-g77d2e3b (coverage-3.5.1 + 10 commits) 
0:15-07-04 09:44:34 [92/232/232] [python-coveragepy] Logging build commands to /root/.cache/ybd/artifacts/python-coveragepy.020c49424325293f65060c11fe17a28a0206f137fb85249bb1a64b1d7155c669.build-log.0 
0:15-07-04 09:44:34 [92/232/232] [python-coveragepy] Running build-commands
0:15-07-04 09:44:34 [92/232/232] [python-coveragepy] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-coveragepy.build', 'python-coveragepy.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:44:36 [92/232/232] [python-coveragepy] Running install-commands
0:15-07-04 09:44:36 [92/232/232] [python-coveragepy] Running command:
python setup.py install --prefix=/usr --root "$DESTDIR" 
0:15-07-04 09:44:37 [92/232/232] [python-coveragepy] Running strip-commands
0:15-07-04 09:44:37 [92/232/232] [python-coveragepy] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:44:38 [92/232/232] [python-coveragepy] Creating cache artifact 
0:15-07-04 09:44:38 [92/232/232] [python-coveragepy] Now cached as python-coveragepy.020c49424325293f65060c11fe17a28a0206f137fb85249bb1a64b1d7155c669
0:15-07-04 09:44:40 [92/232/232] [python-coveragepy] Cleaned up /root/.cache/ybd/tmp/tmpCzVfwW
0:15-07-04 09:44:40 [92/232/232] [python-coveragepy] Elapsed time 00:00:10
0:15-07-04 09:44:40 [92/232/232] [python-coverage-test-runner] Installing python-coveragepy.020c49424325293f65060c11fe17a28a0206f137fb85249bb1a64b1d7155c669 
0:15-07-04 09:44:40 [93/232/232] [python-coverage-test-runner] Start build 
0:15-07-04 09:44:40 [93/232/232] [python-coverage-test-runner] Git checkout upstream:python-coverage-test-runner in /root/.cache/ybd/tmp/tmpxlqlls/python-coverage-test-runner.build 
0:15-07-04 09:44:40 [93/232/232] [python-coverage-test-runner] Upstream version 8ea9421a CoverageTestRunner-1.10-3-g8ea9421 (CoverageTestRunner-1.10 + 3 commits) 
0:15-07-04 09:44:40 [93/232/232] [python-coverage-test-runner] Logging build commands to /root/.cache/ybd/artifacts/python-coverage-test-runner.b6b09257b838dbda6e9f4e3a277cabf5b7429d9be09fa990bfbe51db5e68dc81.build-log.0 
0:15-07-04 09:44:40 [93/232/232] [python-coverage-test-runner] Running build-commands
0:15-07-04 09:44:40 [93/232/232] [python-coverage-test-runner] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-coverage-test-runner.build', 'python-coverage-test-runner.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:44:41 [93/232/232] [python-coverage-test-runner] Running install-commands
0:15-07-04 09:44:41 [93/232/232] [python-coverage-test-runner] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 09:44:42 [93/232/232] [python-coverage-test-runner] Running strip-commands
0:15-07-04 09:44:42 [93/232/232] [python-coverage-test-runner] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:44:42 [93/232/232] [python-coverage-test-runner] Creating cache artifact 
0:15-07-04 09:44:42 [93/232/232] [python-coverage-test-runner] Now cached as python-coverage-test-runner.b6b09257b838dbda6e9f4e3a277cabf5b7429d9be09fa990bfbe51db5e68dc81
0:15-07-04 09:44:44 [93/232/232] [python-coverage-test-runner] Cleaned up /root/.cache/ybd/tmp/tmpxlqlls
0:15-07-04 09:44:44 [93/232/232] [python-coverage-test-runner] Elapsed time 00:06:10
0:15-07-04 09:44:44 [93/232/232] [python-cliapp] Installing python-coverage-test-runner.b6b09257b838dbda6e9f4e3a277cabf5b7429d9be09fa990bfbe51db5e68dc81 
0:15-07-04 09:44:47 [93/232/232] [cliapp] Starting assembly 
0:15-07-04 09:44:47 [93/232/232] [cliapp] Installing python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5 
0:15-07-04 09:44:51 [93/232/232] [cliapp] Installing python-coverage-test-runner.b6b09257b838dbda6e9f4e3a277cabf5b7429d9be09fa990bfbe51db5e68dc81 
0:15-07-04 09:44:51 [94/232/232] [cliapp] Start build 
0:15-07-04 09:44:51 [94/232/232] [cliapp] Git checkout upstream:cliapp in /root/.cache/ybd/tmp/tmpCNlXeX/cliapp.build 
0:15-07-04 09:44:51 [94/232/232] [cliapp] Upstream version cec20ced cliapp-1.20130808-18-gcec20ce (cliapp-1.20130808 + 18 commits) 
0:15-07-04 09:44:51 [94/232/232] [cliapp] Logging build commands to /root/.cache/ybd/artifacts/cliapp.e68d7d362718a32abf93251638ce0fafe6f461e101cb4e05455a58938ca70e2c.build-log.0 
0:15-07-04 09:44:51 [94/232/232] [cliapp] Running build-commands
0:15-07-04 09:44:51 [94/232/232] [cliapp] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['cliapp.build', 'cliapp.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:44:53 [94/232/232] [cliapp] Running install-commands
0:15-07-04 09:44:53 [94/232/232] [cliapp] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 09:44:53 [94/232/232] [cliapp] Running strip-commands
0:15-07-04 09:44:53 [94/232/232] [cliapp] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:44:54 [94/232/232] [cliapp] Creating cache artifact 
0:15-07-04 09:44:54 [94/232/232] [cliapp] Now cached as cliapp.e68d7d362718a32abf93251638ce0fafe6f461e101cb4e05455a58938ca70e2c
0:15-07-04 09:44:56 [94/232/232] [cliapp] Cleaned up /root/.cache/ybd/tmp/tmpCNlXeX
0:15-07-04 09:44:56 [94/232/232] [cliapp] Elapsed time 00:00:08
0:15-07-04 09:44:56 [94/232/232] [python-cliapp] Installing cliapp.e68d7d362718a32abf93251638ce0fafe6f461e101cb4e05455a58938ca70e2c 
0:15-07-04 09:44:56 [95/232/232] [python-cliapp] Start build 
0:15-07-04 09:44:56 [95/232/232] [python-cliapp] Logging build commands to /root/.cache/ybd/artifacts/python-cliapp.4be72763c46ba95ff15cc2a413d6c86f1038c44cceba7b907a096bd15f6da04b.build-log.0 
0:15-07-04 09:44:56 [95/232/232] [python-cliapp] Running strip-commands
0:15-07-04 09:44:56 [95/232/232] [python-cliapp] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
WARNING: Unable to set filesystem_writable_paths=['python-cliapp.build', 'python-cliapp.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:44:56 [95/232/232] [python-cliapp] Creating cache artifact 
0:15-07-04 09:44:56 [95/232/232] [python-cliapp] Now cached as python-cliapp.4be72763c46ba95ff15cc2a413d6c86f1038c44cceba7b907a096bd15f6da04b
0:15-07-04 09:44:58 [95/232/232] [python-cliapp] Cleaned up /root/.cache/ybd/tmp/tmpkhUQY1
0:15-07-04 09:44:58 [95/232/232] [python-cliapp] Elapsed time 00:06:24
0:15-07-04 09:44:58 [95/232/232] [cmdtest] Installing python-cliapp.4be72763c46ba95ff15cc2a413d6c86f1038c44cceba7b907a096bd15f6da04b 
0:15-07-04 09:44:58 [95/232/232] [python-wsgi] Starting assembly 
0:15-07-04 09:44:58 [95/232/232] [bottle] Starting assembly 
0:15-07-04 09:44:58 [95/232/232] [bottle] Installing python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5 
0:15-07-04 09:45:02 [96/232/232] [bottle] Start build 
0:15-07-04 09:45:02 [96/232/232] [bottle] Git checkout upstream:bottle in /root/.cache/ybd/tmp/tmpVzJLzx/bottle.build 
0:15-07-04 09:45:02 [96/232/232] [bottle] Upstream version 5238c615 0.7.1rc-699-g5238c61 (0.7.1rc + 699 commits) 
0:15-07-04 09:45:02 [96/232/232] [bottle] Logging build commands to /root/.cache/ybd/artifacts/bottle.7cffc5c5fa9ecb30e0e2b2ccde456af91462749e9d122ce0318dff1bdba6a6ed.build-log.0 
0:15-07-04 09:45:02 [96/232/232] [bottle] Running build-commands
0:15-07-04 09:45:02 [96/232/232] [bottle] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['bottle.build', 'bottle.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:45:03 [96/232/232] [bottle] Running install-commands
0:15-07-04 09:45:03 [96/232/232] [bottle] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 09:45:04 [96/232/232] [bottle] Running strip-commands
0:15-07-04 09:45:04 [96/232/232] [bottle] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:45:04 [96/232/232] [bottle] Creating cache artifact 
0:15-07-04 09:45:05 [96/232/232] [bottle] Now cached as bottle.7cffc5c5fa9ecb30e0e2b2ccde456af91462749e9d122ce0318dff1bdba6a6ed
0:15-07-04 09:45:06 [96/232/232] [bottle] Cleaned up /root/.cache/ybd/tmp/tmpVzJLzx
0:15-07-04 09:45:06 [96/232/232] [bottle] Elapsed time 00:00:08
0:15-07-04 09:45:06 [96/232/232] [python-wsgi] Installing bottle.7cffc5c5fa9ecb30e0e2b2ccde456af91462749e9d122ce0318dff1bdba6a6ed 
0:15-07-04 09:45:10 [96/232/232] [flup] Starting assembly 
0:15-07-04 09:45:10 [96/232/232] [flup] Installing python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5 
0:15-07-04 09:45:14 [97/232/232] [flup] Start build 
0:15-07-04 09:45:14 [97/232/232] [flup] Git checkout upstream:flup in /root/.cache/ybd/tmp/tmpKjypB5/flup.build 
0:15-07-04 09:45:14 [97/232/232] [flup] Upstream version 0f97c5e0 1.0.2-1-g0f97c5e (1.0.2 + 1 commits) 
0:15-07-04 09:45:14 [97/232/232] [flup] Logging build commands to /root/.cache/ybd/artifacts/flup.1258d1c11464ab069502d26fe084e8f440144e08d84b0d8389a5756a8ad215b8.build-log.0 
0:15-07-04 09:45:14 [97/232/232] [flup] Running build-commands
0:15-07-04 09:45:14 [97/232/232] [flup] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['flup.build', 'flup.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:45:16 [97/232/232] [flup] Running install-commands
0:15-07-04 09:45:16 [97/232/232] [flup] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 09:45:17 [97/232/232] [flup] Running strip-commands
0:15-07-04 09:45:17 [97/232/232] [flup] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:45:17 [97/232/232] [flup] Creating cache artifact 
0:15-07-04 09:45:17 [97/232/232] [flup] Now cached as flup.1258d1c11464ab069502d26fe084e8f440144e08d84b0d8389a5756a8ad215b8
0:15-07-04 09:45:19 [97/232/232] [flup] Cleaned up /root/.cache/ybd/tmp/tmpKjypB5
0:15-07-04 09:45:19 [97/232/232] [flup] Elapsed time 00:00:09
0:15-07-04 09:45:19 [97/232/232] [python-wsgi] Installing flup.1258d1c11464ab069502d26fe084e8f440144e08d84b0d8389a5756a8ad215b8 
0:15-07-04 09:45:19 [98/232/232] [python-wsgi] Start build 
0:15-07-04 09:45:19 [98/232/232] [python-wsgi] Logging build commands to /root/.cache/ybd/artifacts/python-wsgi.a3892e4f80115ebf50af1f647e3588f8772944ca31bd2ff7f23454e384785a80.build-log.0 
0:15-07-04 09:45:19 [98/232/232] [python-wsgi] Running strip-commands
0:15-07-04 09:45:19 [98/232/232] [python-wsgi] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
WARNING: Unable to set filesystem_writable_paths=['python-wsgi.build', 'python-wsgi.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:45:20 [98/232/232] [python-wsgi] Creating cache artifact 
0:15-07-04 09:45:20 [98/232/232] [python-wsgi] Now cached as python-wsgi.a3892e4f80115ebf50af1f647e3588f8772944ca31bd2ff7f23454e384785a80
0:15-07-04 09:45:21 [98/232/232] [python-wsgi] Cleaned up /root/.cache/ybd/tmp/tmpqi6KhO
0:15-07-04 09:45:21 [98/232/232] [python-wsgi] Elapsed time 00:00:23
0:15-07-04 09:45:21 [98/232/232] [cmdtest] Installing python-wsgi.a3892e4f80115ebf50af1f647e3588f8772944ca31bd2ff7f23454e384785a80 
0:15-07-04 09:45:21 [98/232/232] [python-ttystatus] Starting assembly 
0:15-07-04 09:45:21 [98/232/232] [python-ttystatus] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 09:45:25 [98/232/232] [python-ttystatus] Installing python-wsgi.a3892e4f80115ebf50af1f647e3588f8772944ca31bd2ff7f23454e384785a80 
0:15-07-04 09:45:25 [98/232/232] [python-ttystatus] Installing ostree-core.59d09c4a882ef1bd276c0c3c352fcd6ae2dd66668b2f62e9809effd0509a9b81 
0:15-07-04 09:45:25 [98/232/232] [python-ttystatus] Installing python-cliapp.4be72763c46ba95ff15cc2a413d6c86f1038c44cceba7b907a096bd15f6da04b 
0:15-07-04 09:45:25 [98/232/232] [python-ttystatus] Installing python-pygobject.c096bf161a5d048df9260c5f025747a04033fd36c77749d888cf7c787497c561 
0:15-07-04 09:45:25 [99/232/232] [python-ttystatus] Start build 
0:15-07-04 09:45:25 [99/232/232] [python-ttystatus] Git checkout upstream:python-ttystatus in /root/.cache/ybd/tmp/tmpJyJlOk/python-ttystatus.build 
0:15-07-04 09:45:25 [99/232/232] [python-ttystatus] Upstream version 47d87121 ttystatus-0.15-1-g47d8712 (ttystatus-0.15 + 1 commits) 
0:15-07-04 09:45:25 [99/232/232] [python-ttystatus] Logging build commands to /root/.cache/ybd/artifacts/python-ttystatus.2ff24bbbe8ad453552e4ba424aa26e63b5d058dd28bfab54348d2db941e2b717.build-log.0 
0:15-07-04 09:45:25 [99/232/232] [python-ttystatus] Running build-commands
0:15-07-04 09:45:25 [99/232/232] [python-ttystatus] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-ttystatus.build', 'python-ttystatus.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:45:26 [99/232/232] [python-ttystatus] Running install-commands
0:15-07-04 09:45:26 [99/232/232] [python-ttystatus] Running command:
python setup.py install --prefix=/usr --root "$DESTDIR" 
0:15-07-04 09:45:27 [99/232/232] [python-ttystatus] Running strip-commands
0:15-07-04 09:45:27 [99/232/232] [python-ttystatus] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:45:27 [99/232/232] [python-ttystatus] Creating cache artifact 
0:15-07-04 09:45:27 [99/232/232] [python-ttystatus] Now cached as python-ttystatus.2ff24bbbe8ad453552e4ba424aa26e63b5d058dd28bfab54348d2db941e2b717
0:15-07-04 09:45:29 [99/232/232] [python-ttystatus] Cleaned up /root/.cache/ybd/tmp/tmpJyJlOk
0:15-07-04 09:45:29 [99/232/232] [python-ttystatus] Elapsed time 00:00:07
0:15-07-04 09:45:29 [99/232/232] [cmdtest] Installing python-ttystatus.2ff24bbbe8ad453552e4ba424aa26e63b5d058dd28bfab54348d2db941e2b717 
0:15-07-04 09:45:29 [100/232/232] [cmdtest] Start build 
0:15-07-04 09:45:29 [100/232/232] [cmdtest] Git checkout upstream:cmdtest in /root/.cache/ybd/tmp/tmpVxHWh8/cmdtest.build 
0:15-07-04 09:45:29 [100/232/232] [cmdtest] Upstream version ac917918 cmdtest-0.12-29-gac91791 (cmdtest-0.12 + 29 commits) 
0:15-07-04 09:45:29 [100/232/232] [cmdtest] Logging build commands to /root/.cache/ybd/artifacts/cmdtest.23c2e149bc9b6675d010a60e913a311eaf1d993fc2c1f4cd5b267db9e395a68b.build-log.0 
0:15-07-04 09:45:29 [100/232/232] [cmdtest] Running build-commands
0:15-07-04 09:45:29 [100/232/232] [cmdtest] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['cmdtest.build', 'cmdtest.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:45:31 [100/232/232] [cmdtest] Running install-commands
0:15-07-04 09:45:31 [100/232/232] [cmdtest] Running command:
python setup.py install --prefix=/usr --root "$DESTDIR" 
0:15-07-04 09:45:32 [100/232/232] [cmdtest] Running strip-commands
0:15-07-04 09:45:32 [100/232/232] [cmdtest] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:45:33 [100/232/232] [cmdtest] Creating cache artifact 
0:15-07-04 09:45:33 [100/232/232] [cmdtest] Now cached as cmdtest.23c2e149bc9b6675d010a60e913a311eaf1d993fc2c1f4cd5b267db9e395a68b
0:15-07-04 09:45:34 [100/232/232] [cmdtest] Cleaned up /root/.cache/ybd/tmp/tmpVxHWh8
0:15-07-04 09:45:34 [100/232/232] [cmdtest] Elapsed time 01:31:49
0:15-07-04 09:45:34 [100/232/232] [morph-utils] Installing cmdtest.23c2e149bc9b6675d010a60e913a311eaf1d993fc2c1f4cd5b267db9e395a68b 
0:15-07-04 09:45:38 [100/232/232] [pyfilesystem] Starting assembly 
0:15-07-04 09:45:38 [100/232/232] [pyfilesystem] Installing ostree-core.59d09c4a882ef1bd276c0c3c352fcd6ae2dd66668b2f62e9809effd0509a9b81 
0:15-07-04 09:45:42 [100/232/232] [pyfilesystem] Installing python-pygobject.c096bf161a5d048df9260c5f025747a04033fd36c77749d888cf7c787497c561 
0:15-07-04 09:45:42 [100/232/232] [pyfilesystem] Installing python-cliapp.4be72763c46ba95ff15cc2a413d6c86f1038c44cceba7b907a096bd15f6da04b 
0:15-07-04 09:45:42 [100/232/232] [pyfilesystem] Installing python-wsgi.a3892e4f80115ebf50af1f647e3588f8772944ca31bd2ff7f23454e384785a80 
0:15-07-04 09:45:42 [101/232/232] [pyfilesystem] Start build 
0:15-07-04 09:45:42 [101/232/232] [pyfilesystem] Git checkout upstream:pyfilesystem in /root/.cache/ybd/tmp/tmpLf8iZu/pyfilesystem.build 
0:15-07-04 09:45:42 [101/232/232] [pyfilesystem] Upstream version 821f7db1 (No tag found) 
0:15-07-04 09:45:43 [101/232/232] [pyfilesystem] Logging build commands to /root/.cache/ybd/artifacts/pyfilesystem.018ffda87fb4839d09edc5e4017368ddb57cf913c1947d89f7b1dfe2665fef2d.build-log.0 
0:15-07-04 09:45:43 [101/232/232] [pyfilesystem] Running build-commands
0:15-07-04 09:45:43 [101/232/232] [pyfilesystem] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['pyfilesystem.build', 'pyfilesystem.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:45:44 [101/232/232] [pyfilesystem] Running install-commands
0:15-07-04 09:45:44 [101/232/232] [pyfilesystem] Running command:
python setup.py install --prefix="$PREFIX" --root "$DESTDIR" 
0:15-07-04 09:45:46 [101/232/232] [pyfilesystem] Running strip-commands
0:15-07-04 09:45:46 [101/232/232] [pyfilesystem] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:45:47 [101/232/232] [pyfilesystem] Creating cache artifact 
0:15-07-04 09:45:48 [101/232/232] [pyfilesystem] Now cached as pyfilesystem.018ffda87fb4839d09edc5e4017368ddb57cf913c1947d89f7b1dfe2665fef2d
0:15-07-04 09:45:49 [101/232/232] [pyfilesystem] Cleaned up /root/.cache/ybd/tmp/tmpLf8iZu
0:15-07-04 09:45:49 [101/232/232] [pyfilesystem] Elapsed time 00:00:11
0:15-07-04 09:45:49 [101/232/232] [morph-utils] Installing pyfilesystem.018ffda87fb4839d09edc5e4017368ddb57cf913c1947d89f7b1dfe2665fef2d 
0:15-07-04 09:45:49 [101/232/232] [morph] Starting assembly 
0:15-07-04 09:45:49 [101/232/232] [morph] Installing cmdtest.23c2e149bc9b6675d010a60e913a311eaf1d993fc2c1f4cd5b267db9e395a68b 
0:15-07-04 09:45:53 [101/232/232] [morph] Installing pyfilesystem.018ffda87fb4839d09edc5e4017368ddb57cf913c1947d89f7b1dfe2665fef2d 
0:15-07-04 09:45:53 [101/232/232] [pylru] Starting assembly 
0:15-07-04 09:45:53 [101/232/232] [pylru] Installing python-cliapp.4be72763c46ba95ff15cc2a413d6c86f1038c44cceba7b907a096bd15f6da04b 
0:15-07-04 09:45:57 [101/232/232] [pylru] Installing ostree-core.59d09c4a882ef1bd276c0c3c352fcd6ae2dd66668b2f62e9809effd0509a9b81 
0:15-07-04 09:45:57 [101/232/232] [pylru] Installing python-pygobject.c096bf161a5d048df9260c5f025747a04033fd36c77749d888cf7c787497c561 
0:15-07-04 09:45:57 [101/232/232] [pylru] Installing python-wsgi.a3892e4f80115ebf50af1f647e3588f8772944ca31bd2ff7f23454e384785a80 
0:15-07-04 09:45:57 [102/232/232] [pylru] Start build 
0:15-07-04 09:45:58 [102/232/232] [pylru] Git checkout upstream:python-packages/pylru in /root/.cache/ybd/tmp/tmpXJEECE/pylru.build 
0:15-07-04 09:45:58 [102/232/232] [pylru] Upstream version 221dd259 (No tag found) 
0:15-07-04 09:45:58 [102/232/232] [pylru] Logging build commands to /root/.cache/ybd/artifacts/pylru.aedbd65fe5e0b029d4ba5a3a4bcb2684357a03a6cae771852df0582ca7071fbf.build-log.0 
0:15-07-04 09:45:58 [102/232/232] [pylru] Running build-commands
0:15-07-04 09:45:58 [102/232/232] [pylru] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['pylru.build', 'pylru.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:45:58 [102/232/232] [pylru] Running install-commands
0:15-07-04 09:45:58 [102/232/232] [pylru] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 09:45:59 [102/232/232] [pylru] Running strip-commands
0:15-07-04 09:45:59 [102/232/232] [pylru] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:45:59 [102/232/232] [pylru] Creating cache artifact 
0:15-07-04 09:45:59 [102/232/232] [pylru] Now cached as pylru.aedbd65fe5e0b029d4ba5a3a4bcb2684357a03a6cae771852df0582ca7071fbf
0:15-07-04 09:46:01 [102/232/232] [pylru] Cleaned up /root/.cache/ybd/tmp/tmpXJEECE
0:15-07-04 09:46:01 [102/232/232] [pylru] Elapsed time 00:00:07
0:15-07-04 09:46:01 [102/232/232] [morph] Installing pylru.aedbd65fe5e0b029d4ba5a3a4bcb2684357a03a6cae771852df0582ca7071fbf 
0:15-07-04 09:46:01 [103/232/232] [morph] Start build 
0:15-07-04 09:46:01 [103/232/232] [morph] Git checkout baserock:baserock/morph in /root/.cache/ybd/tmp/tmpipPi9i/morph.build 
0:15-07-04 09:46:01 [103/232/232] [morph] Upstream version 2579391b baserock-definitions-v3-109-g2579391 (baserock-definitions-v3 + 109 commits) 
0:15-07-04 09:46:01 [103/232/232] [morph] Logging build commands to /root/.cache/ybd/artifacts/morph.2b155dc96275ae5330b99422ae51d11fd0bbc8aded401e700df3bdaab8d21c8c.build-log.0 
0:15-07-04 09:46:01 [103/232/232] [morph] Running build-commands
0:15-07-04 09:46:01 [103/232/232] [morph] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['morph.build', 'morph.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:46:04 [103/232/232] [morph] Running install-commands
0:15-07-04 09:46:04 [103/232/232] [morph] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 09:46:06 [103/232/232] [morph] Running strip-commands
0:15-07-04 09:46:06 [103/232/232] [morph] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:46:07 [103/232/232] [morph] Creating cache artifact 
0:15-07-04 09:46:08 [103/232/232] [morph] Now cached as morph.2b155dc96275ae5330b99422ae51d11fd0bbc8aded401e700df3bdaab8d21c8c
0:15-07-04 09:46:10 [103/232/232] [morph] Cleaned up /root/.cache/ybd/tmp/tmpipPi9i
0:15-07-04 09:46:10 [103/232/232] [morph] Elapsed time 00:00:20
0:15-07-04 09:46:10 [103/232/232] [morph-utils] Installing morph.2b155dc96275ae5330b99422ae51d11fd0bbc8aded401e700df3bdaab8d21c8c 
0:15-07-04 09:46:10 [103/232/232] [git-fat] Starting assembly 
0:15-07-04 09:46:10 [103/232/232] [git-fat] Installing python-pygobject.c096bf161a5d048df9260c5f025747a04033fd36c77749d888cf7c787497c561 
0:15-07-04 09:46:13 [103/232/232] [git-fat] Installing python-cliapp.4be72763c46ba95ff15cc2a413d6c86f1038c44cceba7b907a096bd15f6da04b 
0:15-07-04 09:46:14 [103/232/232] [git-fat] Installing ostree-core.59d09c4a882ef1bd276c0c3c352fcd6ae2dd66668b2f62e9809effd0509a9b81 
0:15-07-04 09:46:14 [103/232/232] [git-fat] Installing python-wsgi.a3892e4f80115ebf50af1f647e3588f8772944ca31bd2ff7f23454e384785a80 
0:15-07-04 09:46:14 [104/232/232] [git-fat] Start build 
0:15-07-04 09:46:15 [104/232/232] [git-fat] Git checkout upstream:git-fat in /root/.cache/ybd/tmp/tmpG7bARG/git-fat.build 
0:15-07-04 09:46:15 [104/232/232] [git-fat] Upstream version 208f88d0 (No tag found) 
0:15-07-04 09:46:15 [104/232/232] [git-fat] Logging build commands to /root/.cache/ybd/artifacts/git-fat.0443e6ab5f1b9a7fc0b538fc579a4a63d66377fd49c09c324d31607ac0f1ae8f.build-log.0 
0:15-07-04 09:46:15 [104/232/232] [git-fat] Running install-commands
0:15-07-04 09:46:15 [104/232/232] [git-fat] Running command:
install -D -m 755 git-fat "$DESTDIR/usr/bin/git-fat" 
WARNING: Unable to set filesystem_writable_paths=['git-fat.build', 'git-fat.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:46:15 [104/232/232] [git-fat] Running strip-commands
0:15-07-04 09:46:15 [104/232/232] [git-fat] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:46:15 [104/232/232] [git-fat] Creating cache artifact 
0:15-07-04 09:46:16 [104/232/232] [git-fat] Now cached as git-fat.0443e6ab5f1b9a7fc0b538fc579a4a63d66377fd49c09c324d31607ac0f1ae8f
0:15-07-04 09:46:17 [104/232/232] [git-fat] Cleaned up /root/.cache/ybd/tmp/tmpG7bARG
0:15-07-04 09:46:17 [104/232/232] [git-fat] Elapsed time 00:00:07
0:15-07-04 09:46:17 [104/232/232] [morph-utils] Installing git-fat.0443e6ab5f1b9a7fc0b538fc579a4a63d66377fd49c09c324d31607ac0f1ae8f 
0:15-07-04 09:46:17 [105/232/232] [morph-utils] Start build 
0:15-07-04 09:46:17 [105/232/232] [morph-utils] Logging build commands to /root/.cache/ybd/artifacts/morph-utils.12161b7e957cf1e6339557bd5b656a86c7e34adc0aeaad84c3c9f6c0cafdf544.build-log.0 
0:15-07-04 09:46:17 [105/232/232] [morph-utils] Running strip-commands
0:15-07-04 09:46:17 [105/232/232] [morph-utils] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
WARNING: Unable to set filesystem_writable_paths=['morph-utils.build', 'morph-utils.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:46:18 [105/232/232] [morph-utils] Creating cache artifact 
0:15-07-04 09:46:18 [105/232/232] [morph-utils] Now cached as morph-utils.12161b7e957cf1e6339557bd5b656a86c7e34adc0aeaad84c3c9f6c0cafdf544
0:15-07-04 09:46:19 [105/232/232] [morph-utils] Cleaned up /root/.cache/ybd/tmp/tmp0Pj2tb
0:15-07-04 09:46:19 [105/232/232] [morph-utils] Elapsed time 01:32:34
0:15-07-04 09:46:19 [105/232/232] [build-system-armv8l64] Installing morph-utils.12161b7e957cf1e6339557bd5b656a86c7e34adc0aeaad84c3c9f6c0cafdf544 
0:15-07-04 09:46:23 [105/232/232] [foundation] Starting assembly 
0:15-07-04 09:46:23 [105/232/232] [usbutils] Starting assembly 
0:15-07-04 09:46:23 [105/232/232] [libusb] Starting assembly 
0:15-07-04 09:46:23 [105/232/232] [coreutils-common] Starting assembly 
0:15-07-04 09:46:23 [105/232/232] [diff] Starting assembly 
0:15-07-04 09:46:23 [105/232/232] [coreutils] Starting assembly 
0:15-07-04 09:46:23 [105/232/232] [coreutils] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 09:46:26 [106/232/232] [coreutils] Start build 
0:15-07-04 09:46:27 [106/232/232] [coreutils] Git checkout upstream:coreutils in /root/.cache/ybd/tmp/tmpmmfNER/coreutils.build 
0:15-07-04 09:46:27 [106/232/232] [coreutils] Upstream version 9df96438 v8.23-1-g9df9643 (v8.23 + 1 commits) 
0:15-07-04 09:46:27 [106/232/232] [coreutils] Git submodules 
0:15-07-04 09:46:31 [106/232/232] [coreutils] Git checkout upstream:gnulib in /root/.cache/ybd/tmp/tmpmmfNER/coreutils.build/gnulib 
0:15-07-04 09:46:31 [106/232/232] [coreutils] Upstream version 71be4c87 v0.1-186-g71be4c8 (v0.1 + 186 commits) 
0:15-07-04 09:46:32 [106/232/232] [coreutils] Logging build commands to /root/.cache/ybd/artifacts/coreutils.5b540116a6e9c02e437dfe2aec41a7bc643accbb777251f14dd28c11157b9bcf.build-log.0 
0:15-07-04 09:46:32 [106/232/232] [coreutils] Running configure-commands
0:15-07-04 09:46:32 [106/232/232] [coreutils] Running command:
sed -i -e '/^buildreq="/,/^"/{/rsync/d}' bootstrap.conf 
WARNING: Unable to set filesystem_writable_paths=['coreutils.build', 'coreutils.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:46:32 [106/232/232] [coreutils] Running command:
bash bootstrap --skip-po --no-git --gnulib-srcdir=gnulib 
0:15-07-04 09:49:38 [106/232/232] [coreutils] Running command:
FORCE_UNSAFE_CONFIGURE=1 ./configure --prefix="$PREFIX" --disable-nls 
0:15-07-04 09:51:07 [106/232/232] [coreutils] Running build-commands


0:15-07-04 09:51:07 [106/232/232] [coreutils] Running command:
make WERROR_CFLAGS= 


0:15-07-04 09:51:37 [106/232/232] [coreutils] Running install-commands
0:15-07-04 09:51:37 [106/232/232] [coreutils] Running command:
make INSTALL_PROGRAM=install DESTDIR="$DESTDIR" install 
0:15-07-04 09:51:42 [106/232/232] [coreutils] Running command:
mkdir -p "$DESTDIR"/bin/ 
0:15-07-04 09:51:42 [106/232/232] [coreutils] Running command:
ln -sf ../usr/bin/dd "$DESTDIR"/bin/ 
0:15-07-04 09:51:43 [106/232/232] [coreutils] Running strip-commands
0:15-07-04 09:51:43 [106/232/232] [coreutils] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:51:44 [106/232/232] [coreutils] Creating cache artifact 
0:15-07-04 09:52:08 [106/232/232] [coreutils] Now cached as coreutils.5b540116a6e9c02e437dfe2aec41a7bc643accbb777251f14dd28c11157b9bcf
0:15-07-04 09:52:12 [106/232/232] [coreutils] Cleaned up /root/.cache/ybd/tmp/tmpmmfNER
0:15-07-04 09:52:12 [106/232/232] [coreutils] Elapsed time 00:05:48
0:15-07-04 09:52:12 [106/232/232] [diff] Installing coreutils.5b540116a6e9c02e437dfe2aec41a7bc643accbb777251f14dd28c11157b9bcf 
0:15-07-04 09:52:16 [107/232/232] [diff] Start build 
0:15-07-04 09:52:16 [107/232/232] [diff] Git checkout upstream:diffutils in /root/.cache/ybd/tmp/tmp8QhumW/diff.build 
0:15-07-04 09:52:16 [107/232/232] [diff] Upstream version bd86eb1a v3.3-2-gbd86eb1 (v3.3 + 2 commits) 
0:15-07-04 09:52:16 [107/232/232] [diff] Git submodules 
0:15-07-04 09:52:19 [107/232/232] [diff] Git checkout upstream:gnulib in /root/.cache/ybd/tmp/tmp8QhumW/diff.build/gnulib 
0:15-07-04 09:52:20 [107/232/232] [diff] Upstream version db9cad7b v0.0-7898-gdb9cad7 (v0.0 + 7898 commits) 
0:15-07-04 09:52:21 [107/232/232] [diff] Logging build commands to /root/.cache/ybd/artifacts/diff.6193fdb2e2c2929de8df380e60cd828d712bc78222b51af11bce6f0b691ff07c.build-log.0 
0:15-07-04 09:52:21 [107/232/232] [diff] Running pre-configure-commands
0:15-07-04 09:52:21 [107/232/232] [diff] Running command:
sed -i -e '/^buildreq="/,/^"/{/rsync/d}' bootstrap.conf 
WARNING: Unable to set filesystem_writable_paths=['diff.build', 'diff.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:52:21 [107/232/232] [diff] Running command:
./bootstrap --skip-po --no-git --gnulib-srcdir=gnulib 
0:15-07-04 09:54:02 [107/232/232] [diff] Running configure-commands
0:15-07-04 09:54:02 [107/232/232] [diff] Running command:
./configure --prefix="$PREFIX" --disable-gcc-warnings 
0:15-07-04 09:54:45 [107/232/232] [diff] Running build-commands
0:15-07-04 09:54:45 [107/232/232] [diff] Running command:
make 
0:15-07-04 09:54:56 [107/232/232] [diff] Running install-commands
0:15-07-04 09:54:56 [107/232/232] [diff] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 09:54:57 [107/232/232] [diff] Running strip-commands
0:15-07-04 09:54:57 [107/232/232] [diff] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:54:57 [107/232/232] [diff] Creating cache artifact 
0:15-07-04 09:54:59 [107/232/232] [diff] Now cached as diff.6193fdb2e2c2929de8df380e60cd828d712bc78222b51af11bce6f0b691ff07c
0:15-07-04 09:55:02 [107/232/232] [diff] Cleaned up /root/.cache/ybd/tmp/tmp8QhumW
0:15-07-04 09:55:02 [107/232/232] [diff] Elapsed time 00:08:38
0:15-07-04 09:55:02 [107/232/232] [coreutils-common] Installing diff.6193fdb2e2c2929de8df380e60cd828d712bc78222b51af11bce6f0b691ff07c 
0:15-07-04 09:55:05 [107/232/232] [findutils] Starting assembly 
0:15-07-04 09:55:05 [107/232/232] [findutils] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 09:55:09 [108/232/232] [findutils] Start build 
0:15-07-04 09:55:09 [108/232/232] [findutils] Git checkout upstream:findutils in /root/.cache/ybd/tmp/tmpxNdl6L/findutils.build 
0:15-07-04 09:55:09 [108/232/232] [findutils] Upstream version ee6b2554 v4.5.14-1-gee6b255 (v4.5.14 + 1 commits) 
0:15-07-04 09:55:09 [108/232/232] [findutils] Git submodules 
0:15-07-04 09:55:13 [108/232/232] [findutils] Git checkout upstream:gnulib in /root/.cache/ybd/tmp/tmpxNdl6L/findutils.build/gnulib 
0:15-07-04 09:55:13 [108/232/232] [findutils] Upstream version 94ee0381 v0.1-126-g94ee038 (v0.1 + 126 commits) 
0:15-07-04 09:55:14 [108/232/232] [findutils] Logging build commands to /root/.cache/ybd/artifacts/findutils.8c8102d3c49af41371569da277c70b97c41ffdb9b2f98b7a2825daccf3e07b94.build-log.0 
0:15-07-04 09:55:14 [108/232/232] [findutils] Running pre-configure-commands
0:15-07-04 09:55:14 [108/232/232] [findutils] Running command:
./import-gnulib.sh -d gnulib 
WARNING: Unable to set filesystem_writable_paths=['findutils.build', 'findutils.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:57:40 [108/232/232] [findutils] Running configure-commands
0:15-07-04 09:57:40 [108/232/232] [findutils] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
0:15-07-04 09:57:41 [108/232/232] [findutils] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 09:58:53 [108/232/232] [findutils] Running build-commands
0:15-07-04 09:58:53 [108/232/232] [findutils] Running command:
make 
0:15-07-04 09:59:12 [108/232/232] [findutils] Running install-commands
0:15-07-04 09:59:12 [108/232/232] [findutils] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 09:59:15 [108/232/232] [findutils] Running strip-commands
0:15-07-04 09:59:15 [108/232/232] [findutils] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 09:59:16 [108/232/232] [findutils] Creating cache artifact 
0:15-07-04 09:59:19 [108/232/232] [findutils] Now cached as findutils.8c8102d3c49af41371569da277c70b97c41ffdb9b2f98b7a2825daccf3e07b94
0:15-07-04 09:59:23 [108/232/232] [findutils] Cleaned up /root/.cache/ybd/tmp/tmpxNdl6L
0:15-07-04 09:59:23 [108/232/232] [findutils] Elapsed time 00:04:17
0:15-07-04 09:59:23 [108/232/232] [coreutils-common] Installing findutils.8c8102d3c49af41371569da277c70b97c41ffdb9b2f98b7a2825daccf3e07b94 
0:15-07-04 09:59:23 [108/232/232] [sed] Starting assembly 
0:15-07-04 09:59:23 [108/232/232] [sed] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 09:59:26 [108/232/232] [sed] Installing coreutils.5b540116a6e9c02e437dfe2aec41a7bc643accbb777251f14dd28c11157b9bcf 
0:15-07-04 09:59:26 [109/232/232] [sed] Start build 
0:15-07-04 09:59:27 [109/232/232] [sed] Git checkout upstream:sed in /root/.cache/ybd/tmp/tmps5FBy9/sed.build 
0:15-07-04 09:59:27 [109/232/232] [sed] Upstream version ed4b1d7c v4.2.2-64-ged4b1d7 (v4.2.2 + 64 commits) 
0:15-07-04 09:59:27 [109/232/232] [sed] Git submodules 
0:15-07-04 09:59:29 [109/232/232] [sed] Git checkout upstream:gnulib in /root/.cache/ybd/tmp/tmps5FBy9/sed.build/gnulib 
0:15-07-04 09:59:30 [109/232/232] [sed] Upstream version aecd3878 v0.1-311-gaecd387 (v0.1 + 311 commits) 
0:15-07-04 09:59:31 [109/232/232] [sed] Logging build commands to /root/.cache/ybd/artifacts/sed.8618050f3245221c3f6e94f3f942866f9a5dff9c42f3f5bff29c169d4bcbb168.build-log.0 
0:15-07-04 09:59:31 [109/232/232] [sed] Running pre-configure-commands
0:15-07-04 09:59:31 [109/232/232] [sed] Running command:
sed -i -e '/^buildreq="/,/^"/{/rsync/d}' bootstrap.conf 
WARNING: Unable to set filesystem_writable_paths=['sed.build', 'sed.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 09:59:31 [109/232/232] [sed] Running command:
./bootstrap --skip-po --no-git --gnulib-srcdir=gnulib 
0:15-07-04 10:00:53 [109/232/232] [sed] Running configure-commands
0:15-07-04 10:00:53 [109/232/232] [sed] Running command:
./configure --prefix="$PREFIX" --disable-gcc-warnings 
0:15-07-04 10:01:32 [109/232/232] [sed] Running build-commands
0:15-07-04 10:01:32 [109/232/232] [sed] Running command:
make 
0:15-07-04 10:01:39 [109/232/232] [sed] Running install-commands
0:15-07-04 10:01:39 [109/232/232] [sed] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:01:41 [109/232/232] [sed] Running post-install-commands
0:15-07-04 10:01:41 [109/232/232] [sed] Running command:
mkdir -p "$DESTDIR"/bin/ 
0:15-07-04 10:01:41 [109/232/232] [sed] Running command:
ln -sf ../usr/bin/sed "$DESTDIR"/bin/ 
0:15-07-04 10:01:41 [109/232/232] [sed] Running strip-commands
0:15-07-04 10:01:41 [109/232/232] [sed] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:01:42 [109/232/232] [sed] Creating cache artifact 
0:15-07-04 10:01:42 [109/232/232] [sed] Now cached as sed.8618050f3245221c3f6e94f3f942866f9a5dff9c42f3f5bff29c169d4bcbb168
0:15-07-04 10:01:45 [109/232/232] [sed] Cleaned up /root/.cache/ybd/tmp/tmps5FBy9
0:15-07-04 10:01:45 [109/232/232] [sed] Elapsed time 00:02:22
0:15-07-04 10:01:45 [109/232/232] [coreutils-common] Installing sed.8618050f3245221c3f6e94f3f942866f9a5dff9c42f3f5bff29c169d4bcbb168 
0:15-07-04 10:01:45 [109/232/232] [tar] Starting assembly 
0:15-07-04 10:01:45 [109/232/232] [tar] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 10:01:49 [109/232/232] [tar] Installing coreutils.5b540116a6e9c02e437dfe2aec41a7bc643accbb777251f14dd28c11157b9bcf 
0:15-07-04 10:01:49 [110/232/232] [tar] Start build 
0:15-07-04 10:01:49 [110/232/232] [tar] Git checkout upstream:tar in /root/.cache/ybd/tmp/tmpyoIo22/tar.build 
0:15-07-04 10:01:49 [110/232/232] [tar] Upstream version 9a58d148 release_1_28-1-g9a58d14 (release_1_28 + 1 commits) 
0:15-07-04 10:01:49 [110/232/232] [tar] Git submodules 
0:15-07-04 10:01:49 [110/232/232] [tar] Git checkout upstream:paxutils in /root/.cache/ybd/tmp/tmpyoIo22/tar.build/paxutils 
0:15-07-04 10:01:49 [110/232/232] [tar] Upstream version 45af1632 (No tag found) 
0:15-07-04 10:01:52 [110/232/232] [tar] Git checkout upstream:gnulib in /root/.cache/ybd/tmp/tmpyoIo22/tar.build/gnulib 
0:15-07-04 10:01:52 [110/232/232] [tar] Upstream version 46d015f9 v0.1-262-g46d015f (v0.1 + 262 commits) 
0:15-07-04 10:01:54 [110/232/232] [tar] Logging build commands to /root/.cache/ybd/artifacts/tar.c1d917b7f83fadf212caaae75bf8d6e6c4768792c495454ab5cd7c228553b53f.build-log.0 
0:15-07-04 10:01:54 [110/232/232] [tar] Running pre-configure-commands
0:15-07-04 10:01:54 [110/232/232] [tar] Running command:
rm .gitmodules 
WARNING: Unable to set filesystem_writable_paths=['tar.build', 'tar.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:01:54 [110/232/232] [tar] Running command:
bash bootstrap --skip-po --gnulib-srcdir="$(pwd)/gnulib" --paxutils-srcdir="$(pwd)/paxutils" 
0:15-07-04 10:03:29 [110/232/232] [tar] Running configure-commands
0:15-07-04 10:03:29 [110/232/232] [tar] Running command:
`# [1]` env FORCE_UNSAFE_CONFIGURE=1          \
        ./configure --prefix="$PREFIX"        \
`# [2]` --disable-gcc-warnings                \
`# [3]` --bindir=/bin
 
0:15-07-04 10:04:31 [110/232/232] [tar] Running build-commands
0:15-07-04 10:04:31 [110/232/232] [tar] Running command:
make 
0:15-07-04 10:04:56 [110/232/232] [tar] Running install-commands
0:15-07-04 10:04:56 [110/232/232] [tar] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:04:57 [110/232/232] [tar] Running strip-commands
0:15-07-04 10:04:57 [110/232/232] [tar] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:04:58 [110/232/232] [tar] Creating cache artifact 
0:15-07-04 10:05:00 [110/232/232] [tar] Now cached as tar.c1d917b7f83fadf212caaae75bf8d6e6c4768792c495454ab5cd7c228553b53f
0:15-07-04 10:05:03 [110/232/232] [tar] Cleaned up /root/.cache/ybd/tmp/tmpyoIo22
0:15-07-04 10:05:03 [110/232/232] [tar] Elapsed time 00:03:18
0:15-07-04 10:05:03 [110/232/232] [coreutils-common] Installing tar.c1d917b7f83fadf212caaae75bf8d6e6c4768792c495454ab5cd7c228553b53f 
0:15-07-04 10:05:03 [111/232/232] [coreutils-common] Start build 
0:15-07-04 10:05:03 [111/232/232] [coreutils-common] Logging build commands to /root/.cache/ybd/artifacts/coreutils-common.40a0127fe04f51dc3d6bb885fadffb65dac0b8abdb08f9f8f5aac203314546c8.build-log.0 
0:15-07-04 10:05:03 [111/232/232] [coreutils-common] Running strip-commands
0:15-07-04 10:05:03 [111/232/232] [coreutils-common] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
WARNING: Unable to set filesystem_writable_paths=['coreutils-common.build', 'coreutils-common.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:05:04 [111/232/232] [coreutils-common] Creating cache artifact 
0:15-07-04 10:05:04 [111/232/232] [coreutils-common] Now cached as coreutils-common.40a0127fe04f51dc3d6bb885fadffb65dac0b8abdb08f9f8f5aac203314546c8
0:15-07-04 10:05:05 [111/232/232] [coreutils-common] Cleaned up /root/.cache/ybd/tmp/tmpETtSwi
0:15-07-04 10:05:05 [111/232/232] [coreutils-common] Elapsed time 00:18:42
0:15-07-04 10:05:05 [111/232/232] [libusb] Installing coreutils-common.40a0127fe04f51dc3d6bb885fadffb65dac0b8abdb08f9f8f5aac203314546c8 
0:15-07-04 10:05:09 [111/232/232] [systemd] Starting assembly 
0:15-07-04 10:05:09 [111/232/232] [kmod] Starting assembly 
0:15-07-04 10:05:09 [111/232/232] [kmod] Installing coreutils-common.40a0127fe04f51dc3d6bb885fadffb65dac0b8abdb08f9f8f5aac203314546c8 
0:15-07-04 10:05:13 [112/232/232] [kmod] Start build 
0:15-07-04 10:05:13 [112/232/232] [kmod] Git checkout upstream:kmod in /root/.cache/ybd/tmp/tmp_w5TrO/kmod.build 
0:15-07-04 10:05:13 [112/232/232] [kmod] Upstream version ae58de0f v18 (v18 + 0 commits) 
0:15-07-04 10:05:13 [112/232/232] [kmod] Logging build commands to /root/.cache/ybd/artifacts/kmod.84e855f6b6ebf0f04e082887db50bdce530fa0f92e6c5e1659a90cbeea59df2a.build-log.0 
0:15-07-04 10:05:13 [112/232/232] [kmod] Running configure-commands
0:15-07-04 10:05:13 [112/232/232] [kmod] Running command:
rm -rf libkmod/docs 
WARNING: Unable to set filesystem_writable_paths=['kmod.build', 'kmod.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:05:14 [112/232/232] [kmod] Running command:
sed -i -e'/SUBDIRS/{s/\S*doc\S*//;s/\S*man\S*//}' Makefile.am 
0:15-07-04 10:05:14 [112/232/232] [kmod] Running command:
sed -i -e'/AC_CONFIG_FILES(\[/,/])/{/docs/d}' configure.ac 
0:15-07-04 10:05:14 [112/232/232] [kmod] Running command:
autoreconf -fiv 
0:15-07-04 10:05:45 [112/232/232] [kmod] Running command:
./configure --prefix="$PREFIX" --bindir="$PREFIX"/bin \
            --libdir="$PREFIX"/lib --sysconfdir=/etc \
            --without-xz --with-zlib \
            --disable-manpages --enable-python
 
0:15-07-04 10:05:54 [112/232/232] [kmod] Running build-commands
0:15-07-04 10:05:54 [112/232/232] [kmod] Running command:
make 
0:15-07-04 10:06:03 [112/232/232] [kmod] Running install-commands
0:15-07-04 10:06:03 [112/232/232] [kmod] Running command:
make DESTDIR="$DESTDIR" pkgconfigdir="$PREFIX"/lib/pkgconfig install 
0:15-07-04 10:06:08 [112/232/232] [kmod] Running command:
if [ -h /sbin ]; then
  for app in modprobe lsmod rmmod insmod modinfo depmod; do
    ln -sf kmod "$DESTDIR$PREFIX/bin/$app"
  done
else
  install -d "$DESTDIR"/sbin
  for app in modprobe lsmod rmmod insmod modinfo depmod; do
    ln -sf ../"$PREFIX"/bin/kmod "$DESTDIR/sbin/$app"
  done
fi
 
0:15-07-04 10:06:08 [112/232/232] [kmod] Running strip-commands
0:15-07-04 10:06:08 [112/232/232] [kmod] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:06:09 [112/232/232] [kmod] Creating cache artifact 
0:15-07-04 10:06:11 [112/232/232] [kmod] Now cached as kmod.84e855f6b6ebf0f04e082887db50bdce530fa0f92e6c5e1659a90cbeea59df2a
0:15-07-04 10:06:12 [112/232/232] [kmod] Cleaned up /root/.cache/ybd/tmp/tmp_w5TrO
0:15-07-04 10:06:12 [112/232/232] [kmod] Elapsed time 00:01:03
0:15-07-04 10:06:12 [112/232/232] [systemd] Installing kmod.84e855f6b6ebf0f04e082887db50bdce530fa0f92e6c5e1659a90cbeea59df2a 
0:15-07-04 10:06:16 [112/232/232] [dbus-pre] Starting assembly 
0:15-07-04 10:06:16 [112/232/232] [dbus-pre] Installing coreutils-common.40a0127fe04f51dc3d6bb885fadffb65dac0b8abdb08f9f8f5aac203314546c8 
0:15-07-04 10:06:20 [113/232/232] [dbus-pre] Start build 
0:15-07-04 10:06:21 [113/232/232] [dbus-pre] Git checkout upstream:dbus in /root/.cache/ybd/tmp/tmp_ogcTm/dbus-pre.build 
0:15-07-04 10:06:21 [113/232/232] [dbus-pre] Upstream version 92a2d95a dbus-1.9.16-1-g92a2d95 (dbus-1.9.16 + 1 commits) 
0:15-07-04 10:06:21 [113/232/232] [dbus-pre] Logging build commands to /root/.cache/ybd/artifacts/dbus-pre.9a38ee3b88d6978f9fe459f89aabc0c5387350a3731556f68d204e7b8e84b087.build-log.0 
0:15-07-04 10:06:21 [113/232/232] [dbus-pre] Running configure-commands
0:15-07-04 10:06:21 [113/232/232] [dbus-pre] Running command:
sh autogen.sh --no-configure 
WARNING: Unable to set filesystem_writable_paths=['dbus-pre.build', 'dbus-pre.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:06:44 [113/232/232] [dbus-pre] Running command:
./configure --prefix="$PREFIX" --localstatedir=/var --sysconfdir=/etc --disable-systemd 
0:15-07-04 10:07:01 [113/232/232] [dbus-pre] Running build-commands
0:15-07-04 10:07:01 [113/232/232] [dbus-pre] Running command:
make XMLTO_OUTPUT= 
0:15-07-04 10:07:21 [113/232/232] [dbus-pre] Running install-commands
0:15-07-04 10:07:21 [113/232/232] [dbus-pre] Running command:
make XMLTO_OUTPUT= DESTDIR="$DESTDIR" install 
0:15-07-04 10:07:23 [113/232/232] [dbus-pre] Running strip-commands
0:15-07-04 10:07:23 [113/232/232] [dbus-pre] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:07:24 [113/232/232] [dbus-pre] Creating cache artifact 
0:15-07-04 10:07:30 [113/232/232] [dbus-pre] Now cached as dbus-pre.9a38ee3b88d6978f9fe459f89aabc0c5387350a3731556f68d204e7b8e84b087
0:15-07-04 10:07:32 [113/232/232] [dbus-pre] Cleaned up /root/.cache/ybd/tmp/tmp_ogcTm
0:15-07-04 10:07:32 [113/232/232] [dbus-pre] Elapsed time 00:01:15
0:15-07-04 10:07:32 [113/232/232] [systemd] Installing dbus-pre.9a38ee3b88d6978f9fe459f89aabc0c5387350a3731556f68d204e7b8e84b087 
0:15-07-04 10:07:32 [113/232/232] [libgcrypt] Starting assembly 
0:15-07-04 10:07:32 [113/232/232] [libgcrypt] Installing coreutils-common.40a0127fe04f51dc3d6bb885fadffb65dac0b8abdb08f9f8f5aac203314546c8 
0:15-07-04 10:07:36 [113/232/232] [libgpg-error] Starting assembly 
0:15-07-04 10:07:36 [113/232/232] [libgpg-error] Installing coreutils-common.40a0127fe04f51dc3d6bb885fadffb65dac0b8abdb08f9f8f5aac203314546c8 
0:15-07-04 10:07:39 [114/232/232] [libgpg-error] Start build 
0:15-07-04 10:07:40 [114/232/232] [libgpg-error] Git checkout upstream:libgpg-error in /root/.cache/ybd/tmp/tmpoMRV_7/libgpg-error.build 
0:15-07-04 10:07:40 [114/232/232] [libgpg-error] Upstream version d77c33ae libgpg-error-1.19 (libgpg-error-1.19 + 0 commits) 
0:15-07-04 10:07:40 [114/232/232] [libgpg-error] Logging build commands to /root/.cache/ybd/artifacts/libgpg-error.14b0f7134bc27c3d6b718e0f1d996fa9fa2a42027f0e7fcabfff2a5c00513382.build-log.0 
0:15-07-04 10:07:40 [114/232/232] [libgpg-error] Running pre-configure-commands
0:15-07-04 10:07:40 [114/232/232] [libgpg-error] Running command:
autoreconf -fi 
WARNING: Unable to set filesystem_writable_paths=['libgpg-error.build', 'libgpg-error.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:08:20 [114/232/232] [libgpg-error] Running configure-commands
0:15-07-04 10:08:20 [114/232/232] [libgpg-error] Running command:
./configure --prefix="$PREFIX" --disable-doc 
0:15-07-04 10:08:29 [114/232/232] [libgpg-error] Running build-commands
0:15-07-04 10:08:29 [114/232/232] [libgpg-error] Running command:
make 
0:15-07-04 10:08:36 [114/232/232] [libgpg-error] Running install-commands
0:15-07-04 10:08:36 [114/232/232] [libgpg-error] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:08:37 [114/232/232] [libgpg-error] Running strip-commands
0:15-07-04 10:08:37 [114/232/232] [libgpg-error] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:08:37 [114/232/232] [libgpg-error] Creating cache artifact 
0:15-07-04 10:08:38 [114/232/232] [libgpg-error] Now cached as libgpg-error.14b0f7134bc27c3d6b718e0f1d996fa9fa2a42027f0e7fcabfff2a5c00513382
0:15-07-04 10:08:39 [114/232/232] [libgpg-error] Cleaned up /root/.cache/ybd/tmp/tmpoMRV_7
0:15-07-04 10:08:39 [114/232/232] [libgpg-error] Elapsed time 00:01:03
0:15-07-04 10:08:39 [114/232/232] [libgcrypt] Installing libgpg-error.14b0f7134bc27c3d6b718e0f1d996fa9fa2a42027f0e7fcabfff2a5c00513382 
0:15-07-04 10:08:39 [115/232/232] [libgcrypt] Start build 
0:15-07-04 10:08:40 [115/232/232] [libgcrypt] Git checkout upstream:libgcrypt in /root/.cache/ybd/tmp/tmp0ZIvsG/libgcrypt.build 
0:15-07-04 10:08:40 [115/232/232] [libgcrypt] Upstream version 412eed47 libgcrypt-1.5.3-2-g412eed4 (libgcrypt-1.5.3 + 2 commits) 
0:15-07-04 10:08:40 [115/232/232] [libgcrypt] Logging build commands to /root/.cache/ybd/artifacts/libgcrypt.d8da8558bef5a14e15934ddefc11f283bab40930c303d5c734e61d87a63bb82a.build-log.0 
0:15-07-04 10:08:40 [115/232/232] [libgcrypt] Running configure-commands
0:15-07-04 10:08:40 [115/232/232] [libgcrypt] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['libgcrypt.build', 'libgcrypt.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:09:15 [115/232/232] [libgcrypt] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 10:09:26 [115/232/232] [libgcrypt] Running build-commands
0:15-07-04 10:09:26 [115/232/232] [libgcrypt] Running command:
make 
0:15-07-04 10:09:43 [115/232/232] [libgcrypt] Running install-commands
0:15-07-04 10:09:43 [115/232/232] [libgcrypt] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:09:44 [115/232/232] [libgcrypt] Running strip-commands
0:15-07-04 10:09:44 [115/232/232] [libgcrypt] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:09:44 [115/232/232] [libgcrypt] Creating cache artifact 
0:15-07-04 10:09:46 [115/232/232] [libgcrypt] Now cached as libgcrypt.d8da8558bef5a14e15934ddefc11f283bab40930c303d5c734e61d87a63bb82a
0:15-07-04 10:09:48 [115/232/232] [libgcrypt] Cleaned up /root/.cache/ybd/tmp/tmp0ZIvsG
0:15-07-04 10:09:48 [115/232/232] [libgcrypt] Elapsed time 00:02:15
0:15-07-04 10:09:48 [115/232/232] [systemd] Installing libgcrypt.d8da8558bef5a14e15934ddefc11f283bab40930c303d5c734e61d87a63bb82a 
0:15-07-04 10:09:48 [116/232/232] [systemd] Start build 
0:15-07-04 10:09:49 [116/232/232] [systemd] Git checkout upstream:systemd in /root/.cache/ybd/tmp/tmpxD1aS5/systemd.build 
0:15-07-04 10:09:49 [116/232/232] [systemd] Upstream version dde8bb32 v220 (v220 + 0 commits) 
0:15-07-04 10:09:50 [116/232/232] [systemd] Logging build commands to /root/.cache/ybd/artifacts/systemd.931086a7169a30cecfd063b84c72c1deb0433a49c0612cc79c7a0ba71c9f3134.build-log.0 
0:15-07-04 10:09:50 [116/232/232] [systemd] Running pre-configure-commands
0:15-07-04 10:09:50 [116/232/232] [systemd] Running command:
cat >> units/user@.service.m4.in <<EOF
KillSignal=SIGCONT
ExecStop=/bin/kill -TERM \$MAINPID
EOF
 
WARNING: Unable to set filesystem_writable_paths=['systemd.build', 'systemd.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:09:50 [116/232/232] [systemd] Running configure-commands
0:15-07-04 10:09:50 [116/232/232] [systemd] Running command:
sh autogen.sh 
0:15-07-04 10:10:37 [116/232/232] [systemd] Running command:
KILL=/bin/kill ./configure --prefix="$PREFIX" --enable-xz --disable-manpages \
    --disable-gudev \
    --disable-tests --sysconfdir=/etc --localstatedir=/var \
    --libdir="$PREFIX/lib" --libexecdir="$PREFIX/libexec" \
    --with-rootprefix= --with-rootlibdir=/lib
 
0:15-07-04 10:10:59 [116/232/232] [systemd] Running build-commands
0:15-07-04 10:10:59 [116/232/232] [systemd] Running command:
make 
0:15-07-04 10:14:21 [116/232/232] [systemd] Running install-commands
0:15-07-04 10:14:21 [116/232/232] [systemd] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:14:32 [116/232/232] [systemd] Running command:
mkdir -p "$DESTDIR"/sbin 
0:15-07-04 10:14:32 [116/232/232] [systemd] Running command:
ln -s /lib/systemd/systemd "$DESTDIR"/sbin/init 
0:15-07-04 10:14:33 [116/232/232] [systemd] Running command:
for f in telinit runlevel shutdown poweroff reboot halt; do ln -s /bin/systemctl "$DESTDIR/sbin/$f"; done 
0:15-07-04 10:14:33 [116/232/232] [systemd] Running command:
sed -e 's|@sushell@|/bin/sh|g' units/debug-shell.service.in >"$DESTDIR/etc/systemd/system/debug-shell.service" 
0:15-07-04 10:14:34 [116/232/232] [systemd] Running command:
sed -r -e '/Options=/s/,?strictatime//' "$DESTDIR/lib/systemd/system/tmp.mount" >"$DESTDIR/etc/systemd/system/tmp.mount" 
0:15-07-04 10:14:34 [116/232/232] [systemd] Running command:
touch "$DESTDIR/etc/machine-id" 
0:15-07-04 10:14:34 [116/232/232] [systemd] Running post-install-commands
0:15-07-04 10:14:34 [116/232/232] [systemd] Running command:
cat > "$DESTDIR/etc/systemd/network/10-dhcp.network" << "EOF"
[Match]
Name=e*

[Network]
DHCP=yes
EOF
 
0:15-07-04 10:14:35 [116/232/232] [systemd] Running command:
cp -a "$DESTDIR/$PREFIX"/share/factory/etc/pam.d/* "$DESTDIR/etc/pam.d" 
0:15-07-04 10:14:35 [116/232/232] [systemd] Running command:
echo 'auth     requisite  pam_deny.so' >> "$DESTDIR"/etc/pam.d/system-auth 
0:15-07-04 10:14:35 [116/232/232] [systemd] Running strip-commands
0:15-07-04 10:14:35 [116/232/232] [systemd] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:14:38 [116/232/232] [systemd] Creating cache artifact 
0:15-07-04 10:16:17 [116/232/232] [systemd] Now cached as systemd.931086a7169a30cecfd063b84c72c1deb0433a49c0612cc79c7a0ba71c9f3134
0:15-07-04 10:16:20 [116/232/232] [systemd] Cleaned up /root/.cache/ybd/tmp/tmpxD1aS5
0:15-07-04 10:16:20 [116/232/232] [systemd] Elapsed time 00:11:10
0:15-07-04 10:16:20 [116/232/232] [libusb] Installing systemd.931086a7169a30cecfd063b84c72c1deb0433a49c0612cc79c7a0ba71c9f3134 
0:15-07-04 10:16:22 [117/232/232] [libusb] Start build 
0:15-07-04 10:16:22 [117/232/232] [libusb] Git checkout upstream:libusb in /root/.cache/ybd/tmp/tmp0yuMYf/libusb.build 
0:15-07-04 10:16:22 [117/232/232] [libusb] Upstream version e11525c6 v1.0.19 (v1.0.19 + 0 commits) 
0:15-07-04 10:16:22 [117/232/232] [libusb] Logging build commands to /root/.cache/ybd/artifacts/libusb.ddfefd338baaa46a1134f00f9930c5d22f57b86455550e5244a9f6c99316a7f0.build-log.0 
0:15-07-04 10:16:22 [117/232/232] [libusb] Running configure-commands
0:15-07-04 10:16:22 [117/232/232] [libusb] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['libusb.build', 'libusb.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:16:38 [117/232/232] [libusb] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 10:16:44 [117/232/232] [libusb] Running build-commands
0:15-07-04 10:16:44 [117/232/232] [libusb] Running command:
make 
0:15-07-04 10:16:49 [117/232/232] [libusb] Running install-commands
0:15-07-04 10:16:49 [117/232/232] [libusb] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:16:50 [117/232/232] [libusb] Running strip-commands
0:15-07-04 10:16:50 [117/232/232] [libusb] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:16:50 [117/232/232] [libusb] Creating cache artifact 
0:15-07-04 10:16:51 [117/232/232] [libusb] Now cached as libusb.ddfefd338baaa46a1134f00f9930c5d22f57b86455550e5244a9f6c99316a7f0
0:15-07-04 10:16:53 [117/232/232] [libusb] Cleaned up /root/.cache/ybd/tmp/tmp0yuMYf
0:15-07-04 10:16:53 [117/232/232] [libusb] Elapsed time 00:30:30
0:15-07-04 10:16:53 [117/232/232] [usbutils] Installing libusb.ddfefd338baaa46a1134f00f9930c5d22f57b86455550e5244a9f6c99316a7f0 
0:15-07-04 10:16:57 [118/232/232] [usbutils] Start build 
0:15-07-04 10:16:57 [118/232/232] [usbutils] Git checkout upstream:usbutils in /root/.cache/ybd/tmp/tmp0P7KuZ/usbutils.build 
0:15-07-04 10:16:57 [118/232/232] [usbutils] Upstream version c37f146e v007-21-gc37f146 (v007 + 21 commits) 
0:15-07-04 10:16:57 [118/232/232] [usbutils] Git submodules 
0:15-07-04 10:16:57 [118/232/232] [usbutils] Git checkout upstream:usbhid-dump in /root/.cache/ybd/tmp/tmp0P7KuZ/usbutils.build/usbhid-dump 
0:15-07-04 10:16:57 [118/232/232] [usbutils] Upstream version 81eab80f 1.3 (1.3 + 0 commits) 
0:15-07-04 10:16:57 [118/232/232] [usbutils] Logging build commands to /root/.cache/ybd/artifacts/usbutils.f91279983dac75ddc1c79b2a60d83ca1f3604a29329838f79289407275e8164c.build-log.0 
0:15-07-04 10:16:57 [118/232/232] [usbutils] Running configure-commands
0:15-07-04 10:16:57 [118/232/232] [usbutils] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['usbutils.build', 'usbutils.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:17:49 [118/232/232] [usbutils] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 10:17:56 [118/232/232] [usbutils] Running build-commands
0:15-07-04 10:17:56 [118/232/232] [usbutils] Running command:
make 
0:15-07-04 10:18:02 [118/232/232] [usbutils] Running install-commands
0:15-07-04 10:18:02 [118/232/232] [usbutils] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:18:03 [118/232/232] [usbutils] Running strip-commands
0:15-07-04 10:18:03 [118/232/232] [usbutils] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:18:04 [118/232/232] [usbutils] Creating cache artifact 
0:15-07-04 10:18:04 [118/232/232] [usbutils] Now cached as usbutils.f91279983dac75ddc1c79b2a60d83ca1f3604a29329838f79289407275e8164c
0:15-07-04 10:18:06 [118/232/232] [usbutils] Cleaned up /root/.cache/ybd/tmp/tmp0P7KuZ
0:15-07-04 10:18:06 [118/232/232] [usbutils] Elapsed time 00:31:43
0:15-07-04 10:18:06 [118/232/232] [foundation] Installing usbutils.f91279983dac75ddc1c79b2a60d83ca1f3604a29329838f79289407275e8164c 
0:15-07-04 10:18:10 [118/232/232] [dbus] Starting assembly 
0:15-07-04 10:18:10 [118/232/232] [dbus] Installing coreutils-common.40a0127fe04f51dc3d6bb885fadffb65dac0b8abdb08f9f8f5aac203314546c8 
0:15-07-04 10:18:14 [118/232/232] [dbus] Installing systemd.931086a7169a30cecfd063b84c72c1deb0433a49c0612cc79c7a0ba71c9f3134 
0:15-07-04 10:18:14 [119/232/232] [dbus] Start build 
0:15-07-04 10:18:14 [119/232/232] [dbus] Git checkout upstream:dbus in /root/.cache/ybd/tmp/tmpJUusOR/dbus.build 
0:15-07-04 10:18:14 [119/232/232] [dbus] Upstream version 92a2d95a dbus-1.9.16-1-g92a2d95 (dbus-1.9.16 + 1 commits) 
0:15-07-04 10:18:14 [119/232/232] [dbus] Logging build commands to /root/.cache/ybd/artifacts/dbus.939b16ce939f1be5c11040c312a339e8b0a2a7dd9a0d8c4b3a97da031a25c5ce.build-log.0 
0:15-07-04 10:18:14 [119/232/232] [dbus] Running configure-commands
0:15-07-04 10:18:14 [119/232/232] [dbus] Running command:
sh autogen.sh --no-configure 
WARNING: Unable to set filesystem_writable_paths=['dbus.build', 'dbus.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:18:37 [119/232/232] [dbus] Running command:
./configure --prefix="$PREFIX" --localstatedir=/var --sysconfdir=/etc --enable-user-session 
0:15-07-04 10:18:55 [119/232/232] [dbus] Running build-commands
0:15-07-04 10:18:55 [119/232/232] [dbus] Running command:
make XMLTO_OUTPUT= 
0:15-07-04 10:19:16 [119/232/232] [dbus] Running install-commands
0:15-07-04 10:19:16 [119/232/232] [dbus] Running command:
make XMLTO_OUTPUT= DESTDIR="$DESTDIR" install 
0:15-07-04 10:19:18 [119/232/232] [dbus] Running strip-commands
0:15-07-04 10:19:18 [119/232/232] [dbus] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:19:19 [119/232/232] [dbus] Creating cache artifact 
0:15-07-04 10:19:25 [119/232/232] [dbus] Now cached as dbus.939b16ce939f1be5c11040c312a339e8b0a2a7dd9a0d8c4b3a97da031a25c5ce
0:15-07-04 10:19:27 [119/232/232] [dbus] Cleaned up /root/.cache/ybd/tmp/tmpJUusOR
0:15-07-04 10:19:27 [119/232/232] [dbus] Elapsed time 00:01:17
0:15-07-04 10:19:27 [119/232/232] [foundation] Installing dbus.939b16ce939f1be5c11040c312a339e8b0a2a7dd9a0d8c4b3a97da031a25c5ce 
0:15-07-04 10:19:27 [119/232/232] [time-zone-database] Starting assembly 
0:15-07-04 10:19:27 [119/232/232] [time-zone-database] Installing coreutils-common.40a0127fe04f51dc3d6bb885fadffb65dac0b8abdb08f9f8f5aac203314546c8 
0:15-07-04 10:19:31 [120/232/232] [time-zone-database] Start build 
0:15-07-04 10:19:31 [120/232/232] [time-zone-database] Git checkout upstream:tz in /root/.cache/ybd/tmp/tmpcAiFBE/time-zone-database.build 
0:15-07-04 10:19:31 [120/232/232] [time-zone-database] Upstream version a0782484 2015a (2015a + 0 commits) 
0:15-07-04 10:19:31 [120/232/232] [time-zone-database] Logging build commands to /root/.cache/ybd/artifacts/time-zone-database.19be5723e5769fafe55c8bb11ce1cab649f3895e058b590c38907be7a991fc09.build-log.0 
0:15-07-04 10:19:31 [120/232/232] [time-zone-database] Running install-commands
0:15-07-04 10:19:31 [120/232/232] [time-zone-database] Running command:
make TOPDIR="$PREFIX" ETCDIR="$PREFIX/bin" TZDIR="$PREFIX/share/zoneinfo" DESTDIR="$DESTDIR" install 
WARNING: Unable to set filesystem_writable_paths=['time-zone-database.build', 'time-zone-database.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:19:34 [120/232/232] [time-zone-database] Running strip-commands
0:15-07-04 10:19:34 [120/232/232] [time-zone-database] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:19:34 [120/232/232] [time-zone-database] Creating cache artifact 
0:15-07-04 10:19:36 [120/232/232] [time-zone-database] Now cached as time-zone-database.19be5723e5769fafe55c8bb11ce1cab649f3895e058b590c38907be7a991fc09
0:15-07-04 10:19:38 [120/232/232] [time-zone-database] Cleaned up /root/.cache/ybd/tmp/tmpcAiFBE
0:15-07-04 10:19:38 [120/232/232] [time-zone-database] Elapsed time 00:00:10
0:15-07-04 10:19:38 [120/232/232] [foundation] Installing time-zone-database.19be5723e5769fafe55c8bb11ce1cab649f3895e058b590c38907be7a991fc09 
0:15-07-04 10:19:38 [120/232/232] [tbdiff] Starting assembly 
0:15-07-04 10:19:38 [120/232/232] [tbdiff] Installing coreutils-common.40a0127fe04f51dc3d6bb885fadffb65dac0b8abdb08f9f8f5aac203314546c8 
0:15-07-04 10:19:42 [121/232/232] [tbdiff] Start build 
0:15-07-04 10:19:42 [121/232/232] [tbdiff] Git checkout baserock:baserock/tbdiff in /root/.cache/ybd/tmp/tmpPUTvL6/tbdiff.build 
0:15-07-04 10:19:42 [121/232/232] [tbdiff] Upstream version 235e95c3 (No tag found) 
0:15-07-04 10:19:42 [121/232/232] [tbdiff] Logging build commands to /root/.cache/ybd/artifacts/tbdiff.068917cb68620ea25d2c6b4a1641ec21553d01fb1e0dd012e12951170bebc5a5.build-log.0 
0:15-07-04 10:19:42 [121/232/232] [tbdiff] Running configure-commands
0:15-07-04 10:19:42 [121/232/232] [tbdiff] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['tbdiff.build', 'tbdiff.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:20:09 [121/232/232] [tbdiff] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 10:20:16 [121/232/232] [tbdiff] Running build-commands
0:15-07-04 10:20:16 [121/232/232] [tbdiff] Running command:
make 
0:15-07-04 10:20:20 [121/232/232] [tbdiff] Running install-commands
0:15-07-04 10:20:20 [121/232/232] [tbdiff] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:20:21 [121/232/232] [tbdiff] Running strip-commands
0:15-07-04 10:20:21 [121/232/232] [tbdiff] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:20:22 [121/232/232] [tbdiff] Creating cache artifact 
0:15-07-04 10:20:22 [121/232/232] [tbdiff] Now cached as tbdiff.068917cb68620ea25d2c6b4a1641ec21553d01fb1e0dd012e12951170bebc5a5
0:15-07-04 10:20:24 [121/232/232] [tbdiff] Cleaned up /root/.cache/ybd/tmp/tmpPUTvL6
0:15-07-04 10:20:24 [121/232/232] [tbdiff] Elapsed time 00:00:45
0:15-07-04 10:20:24 [121/232/232] [foundation] Installing tbdiff.068917cb68620ea25d2c6b4a1641ec21553d01fb1e0dd012e12951170bebc5a5 
0:15-07-04 10:20:24 [121/232/232] [rsync] Starting assembly 
0:15-07-04 10:20:24 [121/232/232] [rsync] Installing coreutils-common.40a0127fe04f51dc3d6bb885fadffb65dac0b8abdb08f9f8f5aac203314546c8 
0:15-07-04 10:20:27 [122/232/232] [rsync] Start build 
0:15-07-04 10:20:28 [122/232/232] [rsync] Git checkout upstream:rsync in /root/.cache/ybd/tmp/tmpmiMvGy/rsync.build 
0:15-07-04 10:20:28 [122/232/232] [rsync] Upstream version 7cb0de63 v3.1.1 (v3.1.1 + 0 commits) 
0:15-07-04 10:20:28 [122/232/232] [rsync] Logging build commands to /root/.cache/ybd/artifacts/rsync.68c121e531de36c7104200196b79cd7e9bcf462297985845793ff7ca45646cf2.build-log.0 
0:15-07-04 10:20:28 [122/232/232] [rsync] Running configure-commands
0:15-07-04 10:20:28 [122/232/232] [rsync] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['rsync.build', 'rsync.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:20:28 [122/232/232] [rsync] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 10:20:51 [122/232/232] [rsync] Running build-commands
0:15-07-04 10:20:51 [122/232/232] [rsync] Running command:
make proto 
0:15-07-04 10:20:51 [122/232/232] [rsync] Running command:
make 
0:15-07-04 10:20:56 [122/232/232] [rsync] Running install-commands
0:15-07-04 10:20:56 [122/232/232] [rsync] Running command:
make install 
0:15-07-04 10:20:57 [122/232/232] [rsync] Running command:
install -D -m 644 packaging/systemd/rsync.service "$DESTDIR$PREFIX"/lib/systemd/system/rsync.service 
0:15-07-04 10:20:57 [122/232/232] [rsync] Running strip-commands
0:15-07-04 10:20:57 [122/232/232] [rsync] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:20:57 [122/232/232] [rsync] Creating cache artifact 
0:15-07-04 10:20:59 [122/232/232] [rsync] Now cached as rsync.68c121e531de36c7104200196b79cd7e9bcf462297985845793ff7ca45646cf2
0:15-07-04 10:21:01 [122/232/232] [rsync] Cleaned up /root/.cache/ybd/tmp/tmpmiMvGy
0:15-07-04 10:21:01 [122/232/232] [rsync] Elapsed time 00:00:37
0:15-07-04 10:21:01 [122/232/232] [foundation] Installing rsync.68c121e531de36c7104200196b79cd7e9bcf462297985845793ff7ca45646cf2 
0:15-07-04 10:21:01 [122/232/232] [pciutils] Starting assembly 
0:15-07-04 10:21:01 [122/232/232] [pciutils] Installing coreutils-common.40a0127fe04f51dc3d6bb885fadffb65dac0b8abdb08f9f8f5aac203314546c8 
0:15-07-04 10:21:04 [123/232/232] [pciutils] Start build 
0:15-07-04 10:21:05 [123/232/232] [pciutils] Git checkout upstream:pciutils in /root/.cache/ybd/tmp/tmpbBWSUY/pciutils.build 
0:15-07-04 10:21:05 [123/232/232] [pciutils] Upstream version bae04bd0 v3.1.9-6-gbae04bd (v3.1.9 + 6 commits) 
0:15-07-04 10:21:05 [123/232/232] [pciutils] Logging build commands to /root/.cache/ybd/artifacts/pciutils.ea2a63b7805c2d42cdda61509f7ccb6ecdc84fe7be136b86aab8baa6f9e44660.build-log.0 
0:15-07-04 10:21:05 [123/232/232] [pciutils] Running configure-commands
0:15-07-04 10:21:05 [123/232/232] [pciutils] Running command:
make PREFIX="$PREFIX" ZLIB=no lib/config.mk 
WARNING: Unable to set filesystem_writable_paths=['pciutils.build', 'pciutils.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:21:05 [123/232/232] [pciutils] Running command:
echo PREFIX="$PREFIX" >>lib/config.mk 
0:15-07-04 10:21:05 [123/232/232] [pciutils] Running command:
echo MANDIR="$PREFIX/share/man" >>lib/config.mk 
0:15-07-04 10:21:06 [123/232/232] [pciutils] Running build-commands
0:15-07-04 10:21:06 [123/232/232] [pciutils] Running command:
make PREFIX="$PREFIX" 
0:15-07-04 10:21:08 [123/232/232] [pciutils] Running install-commands
0:15-07-04 10:21:08 [123/232/232] [pciutils] Running command:
make PREFIX="$PREFIX" DESTDIR="$DESTDIR" install 
0:15-07-04 10:21:08 [123/232/232] [pciutils] Running command:
make PREFIX="$PREFIX" DESTDIR="$DESTDIR" install-lib 
0:15-07-04 10:21:08 [123/232/232] [pciutils] Running strip-commands
0:15-07-04 10:21:08 [123/232/232] [pciutils] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:21:09 [123/232/232] [pciutils] Creating cache artifact 
0:15-07-04 10:21:09 [123/232/232] [pciutils] Now cached as pciutils.ea2a63b7805c2d42cdda61509f7ccb6ecdc84fe7be136b86aab8baa6f9e44660
0:15-07-04 10:21:11 [123/232/232] [pciutils] Cleaned up /root/.cache/ybd/tmp/tmpbBWSUY
0:15-07-04 10:21:11 [123/232/232] [pciutils] Elapsed time 00:00:09
0:15-07-04 10:21:11 [123/232/232] [foundation] Installing pciutils.ea2a63b7805c2d42cdda61509f7ccb6ecdc84fe7be136b86aab8baa6f9e44660 
0:15-07-04 10:21:11 [123/232/232] [lzo] Starting assembly 
0:15-07-04 10:21:11 [123/232/232] [lzo] Installing coreutils-common.40a0127fe04f51dc3d6bb885fadffb65dac0b8abdb08f9f8f5aac203314546c8 
0:15-07-04 10:21:14 [124/232/232] [lzo] Start build 
0:15-07-04 10:21:15 [124/232/232] [lzo] Git checkout upstream:lzo in /root/.cache/ybd/tmp/tmpk8SQR8/lzo.build 
0:15-07-04 10:21:15 [124/232/232] [lzo] Upstream version 5cca83e4 lzo-2.08 (lzo-2.08 + 0 commits) 
0:15-07-04 10:21:15 [124/232/232] [lzo] Logging build commands to /root/.cache/ybd/artifacts/lzo.f9854801c67b5fc21f0b0c9f29713c9c0c58b7ab0837c86e79e02aaa532d5bb0.build-log.0 
0:15-07-04 10:21:15 [124/232/232] [lzo] Running configure-commands
0:15-07-04 10:21:15 [124/232/232] [lzo] Running command:
./configure --enable-shared=yes --prefix="$PREFIX" 
WARNING: Unable to set filesystem_writable_paths=['lzo.build', 'lzo.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:21:30 [124/232/232] [lzo] Running build-commands
0:15-07-04 10:21:30 [124/232/232] [lzo] Running command:
make 
0:15-07-04 10:21:37 [124/232/232] [lzo] Running install-commands
0:15-07-04 10:21:37 [124/232/232] [lzo] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:21:38 [124/232/232] [lzo] Running strip-commands
0:15-07-04 10:21:38 [124/232/232] [lzo] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:21:38 [124/232/232] [lzo] Creating cache artifact 
0:15-07-04 10:21:40 [124/232/232] [lzo] Now cached as lzo.f9854801c67b5fc21f0b0c9f29713c9c0c58b7ab0837c86e79e02aaa532d5bb0
0:15-07-04 10:21:41 [124/232/232] [lzo] Cleaned up /root/.cache/ybd/tmp/tmpk8SQR8
0:15-07-04 10:21:41 [124/232/232] [lzo] Elapsed time 00:00:30
0:15-07-04 10:21:41 [124/232/232] [foundation] Installing lzo.f9854801c67b5fc21f0b0c9f29713c9c0c58b7ab0837c86e79e02aaa532d5bb0 
0:15-07-04 10:21:41 [124/232/232] [groff] Starting assembly 
0:15-07-04 10:21:41 [124/232/232] [groff] Installing coreutils-common.40a0127fe04f51dc3d6bb885fadffb65dac0b8abdb08f9f8f5aac203314546c8 
0:15-07-04 10:21:45 [125/232/232] [groff] Start build 
0:15-07-04 10:21:46 [125/232/232] [groff] Git checkout upstream:groff-git in /root/.cache/ybd/tmp/tmpAaQCtW/groff.build 
0:15-07-04 10:21:46 [125/232/232] [groff] Upstream version 16305a24 1.22.3 (1.22.3 + 0 commits) 
0:15-07-04 10:21:46 [125/232/232] [groff] Logging build commands to /root/.cache/ybd/artifacts/groff.efd7eefb38e933cd2dd99b95c121c06ab640a39984253df167ce4216dcdb3400.build-log.0 
0:15-07-04 10:21:46 [125/232/232] [groff] Running configure-commands
0:15-07-04 10:21:46 [125/232/232] [groff] Running command:
PAGE=A4 ./configure --prefix="$PREFIX" 
WARNING: Unable to set filesystem_writable_paths=['groff.build', 'groff.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:21:58 [125/232/232] [groff] Running build-commands
0:15-07-04 10:21:58 [125/232/232] [groff] Running command:
touch doc/gnu.eps 
0:15-07-04 10:21:59 [125/232/232] [groff] Running command:
make 
0:15-07-04 10:25:31 [125/232/232] [groff] Running install-commands
0:15-07-04 10:25:31 [125/232/232] [groff] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:25:35 [125/232/232] [groff] Running command:
ln -s eqn "$DESTDIR$PREFIX/bin/geqn" 
0:15-07-04 10:25:36 [125/232/232] [groff] Running command:
ln -s tbl "$DESTDIR$PREFIX/bin/gtbl" 
0:15-07-04 10:25:36 [125/232/232] [groff] Running strip-commands
0:15-07-04 10:25:36 [125/232/232] [groff] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:25:37 [125/232/232] [groff] Creating cache artifact 
0:15-07-04 10:25:54 [125/232/232] [groff] Now cached as groff.efd7eefb38e933cd2dd99b95c121c06ab640a39984253df167ce4216dcdb3400
0:15-07-04 10:25:56 [125/232/232] [groff] Cleaned up /root/.cache/ybd/tmp/tmpAaQCtW
0:15-07-04 10:25:56 [125/232/232] [groff] Elapsed time 00:04:14
0:15-07-04 10:25:56 [125/232/232] [foundation] Installing groff.efd7eefb38e933cd2dd99b95c121c06ab640a39984253df167ce4216dcdb3400 
0:15-07-04 10:25:56 [125/232/232] [dbus-glib] Starting assembly 
0:15-07-04 10:25:56 [125/232/232] [dbus-glib] Installing coreutils-common.40a0127fe04f51dc3d6bb885fadffb65dac0b8abdb08f9f8f5aac203314546c8 
0:15-07-04 10:26:00 [125/232/232] [dbus-glib] Installing dbus.939b16ce939f1be5c11040c312a339e8b0a2a7dd9a0d8c4b3a97da031a25c5ce 
0:15-07-04 10:26:00 [126/232/232] [dbus-glib] Start build 
0:15-07-04 10:26:00 [126/232/232] [dbus-glib] Git checkout upstream:dbus-glib in /root/.cache/ybd/tmp/tmpMfCNo7/dbus-glib.build 
0:15-07-04 10:26:00 [126/232/232] [dbus-glib] Upstream version 397e8297 dbus-glib_0.102 (dbus-glib_0.102 + 0 commits) 
0:15-07-04 10:26:00 [126/232/232] [dbus-glib] Logging build commands to /root/.cache/ybd/artifacts/dbus-glib.81319fcfd1a346169eb1d065be11e30bebe6e9ca4f0d375e6a61328be08a6367.build-log.0 
0:15-07-04 10:26:00 [126/232/232] [dbus-glib] Running configure-commands
0:15-07-04 10:26:00 [126/232/232] [dbus-glib] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['dbus-glib.build', 'dbus-glib.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:26:30 [126/232/232] [dbus-glib] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 10:26:36 [126/232/232] [dbus-glib] Running build-commands
0:15-07-04 10:26:36 [126/232/232] [dbus-glib] Running command:
make 
0:15-07-04 10:26:51 [126/232/232] [dbus-glib] Running install-commands
0:15-07-04 10:26:51 [126/232/232] [dbus-glib] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:26:53 [126/232/232] [dbus-glib] Running strip-commands
0:15-07-04 10:26:53 [126/232/232] [dbus-glib] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:26:53 [126/232/232] [dbus-glib] Creating cache artifact 
0:15-07-04 10:26:56 [126/232/232] [dbus-glib] Now cached as dbus-glib.81319fcfd1a346169eb1d065be11e30bebe6e9ca4f0d375e6a61328be08a6367
0:15-07-04 10:26:57 [126/232/232] [dbus-glib] Cleaned up /root/.cache/ybd/tmp/tmpMfCNo7
0:15-07-04 10:26:57 [126/232/232] [dbus-glib] Elapsed time 00:01:01
0:15-07-04 10:26:57 [126/232/232] [foundation] Installing dbus-glib.81319fcfd1a346169eb1d065be11e30bebe6e9ca4f0d375e6a61328be08a6367 
0:15-07-04 10:26:58 [126/232/232] [bash-completion] Starting assembly 
0:15-07-04 10:26:58 [126/232/232] [bash-completion] Installing coreutils-common.40a0127fe04f51dc3d6bb885fadffb65dac0b8abdb08f9f8f5aac203314546c8 
0:15-07-04 10:27:01 [127/232/232] [bash-completion] Start build 
0:15-07-04 10:27:02 [127/232/232] [bash-completion] Git checkout upstream:bash-completion in /root/.cache/ybd/tmp/tmpmoooLq/bash-completion.build 
0:15-07-04 10:27:02 [127/232/232] [bash-completion] Upstream version 3085c7e1 2.1 (2.1 + 0 commits) 
0:15-07-04 10:27:02 [127/232/232] [bash-completion] Logging build commands to /root/.cache/ybd/artifacts/bash-completion.6df8d8a91392054a9cdfd5f61d79149f8d6c400d46a0c09564e14c261c84897a.build-log.0 
0:15-07-04 10:27:02 [127/232/232] [bash-completion] Running configure-commands
0:15-07-04 10:27:02 [127/232/232] [bash-completion] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['bash-completion.build', 'bash-completion.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:27:08 [127/232/232] [bash-completion] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 10:27:09 [127/232/232] [bash-completion] Running build-commands
0:15-07-04 10:27:09 [127/232/232] [bash-completion] Running command:
make 
0:15-07-04 10:27:10 [127/232/232] [bash-completion] Running install-commands
0:15-07-04 10:27:10 [127/232/232] [bash-completion] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:27:12 [127/232/232] [bash-completion] Running strip-commands
0:15-07-04 10:27:12 [127/232/232] [bash-completion] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:27:12 [127/232/232] [bash-completion] Creating cache artifact 
0:15-07-04 10:27:13 [127/232/232] [bash-completion] Now cached as bash-completion.6df8d8a91392054a9cdfd5f61d79149f8d6c400d46a0c09564e14c261c84897a
0:15-07-04 10:27:15 [127/232/232] [bash-completion] Cleaned up /root/.cache/ybd/tmp/tmpmoooLq
0:15-07-04 10:27:15 [127/232/232] [bash-completion] Elapsed time 00:00:17
0:15-07-04 10:27:15 [127/232/232] [foundation] Installing bash-completion.6df8d8a91392054a9cdfd5f61d79149f8d6c400d46a0c09564e14c261c84897a 
0:15-07-04 10:27:15 [127/232/232] [openssh] Starting assembly 
0:15-07-04 10:27:15 [127/232/232] [openssh] Installing coreutils-common.40a0127fe04f51dc3d6bb885fadffb65dac0b8abdb08f9f8f5aac203314546c8 
0:15-07-04 10:27:19 [127/232/232] [openssh] Installing groff.efd7eefb38e933cd2dd99b95c121c06ab640a39984253df167ce4216dcdb3400 
0:15-07-04 10:27:19 [128/232/232] [openssh] Start build 
0:15-07-04 10:27:19 [128/232/232] [openssh] Git checkout upstream:openssh-git in /root/.cache/ybd/tmp/tmpoakrZB/openssh.build 
0:15-07-04 10:27:19 [128/232/232] [openssh] Upstream version 782fe9e7 V_6_7_P1-2-g782fe9e (V_6_7_P1 + 2 commits) 
0:15-07-04 10:27:19 [128/232/232] [openssh] Logging build commands to /root/.cache/ybd/artifacts/openssh.00f45d84e0517f738bca3fdb4baae32d47b7d539dbb7de6e8fc334be061f8bcd.build-log.0 
0:15-07-04 10:27:19 [128/232/232] [openssh] Running configure-commands
0:15-07-04 10:27:19 [128/232/232] [openssh] Running command:
autoreconf -if 
WARNING: Unable to set filesystem_writable_paths=['openssh.build', 'openssh.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:27:28 [128/232/232] [openssh] Running command:
OPENSSL_SEEDS_ITSELF=yes ./configure \
    --prefix="$PREFIX" --sysconfdir=/etc/ssh \
    --datadir="$PREFIX/share/sshd" \
    --libexecdir="$PREFIX/lib/openssh" \
    --with-privsep-path=/var/lib/sshd
 
0:15-07-04 10:28:12 [128/232/232] [openssh] Running build-commands
0:15-07-04 10:28:12 [128/232/232] [openssh] Running command:
make 
0:15-07-04 10:28:18 [128/232/232] [openssh] Running command:
sed -e "s|@prefix@|$PREFIX|g" \
    -e 's|@STARTUP_SCRIPT_SHELL@|/bin/sh|g' \
    -e 's|@sysconfdir@|/etc/ssh|g' \
    -e 's|@COMMENT_OUT_ECC@||g' \
    sshd-keygen.in >sshd-keygen
 
0:15-07-04 10:28:18 [128/232/232] [openssh] Running command:
sed -e "s|@prefix@|$PREFIX|g" opensshd.service.in >opensshd.service 
0:15-07-04 10:28:19 [128/232/232] [openssh] Running install-commands
0:15-07-04 10:28:19 [128/232/232] [openssh] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:28:19 [128/232/232] [openssh] Running command:
mkdir -p "$DESTDIR/$PREFIX/sbin" 
0:15-07-04 10:28:19 [128/232/232] [openssh] Running command:
chmod go= "$DESTDIR"/var/lib/sshd 
0:15-07-04 10:28:20 [128/232/232] [openssh] Running command:
install -m 744 sshd-keygen "$DESTDIR/$PREFIX/sbin/sshd-keygen" 
0:15-07-04 10:28:20 [128/232/232] [openssh] Running command:
install -m 755 contrib/ssh-copy-id "$DESTDIR/$PREFIX/bin/ssh-copy-id" 
0:15-07-04 10:28:21 [128/232/232] [openssh] Running command:
mkdir -p "$DESTDIR/lib/systemd/system/multi-user.target.wants" 
0:15-07-04 10:28:21 [128/232/232] [openssh] Running command:
install -m 644 opensshd.service "$DESTDIR/lib/systemd/system/opensshd.service" 
0:15-07-04 10:28:21 [128/232/232] [openssh] Running command:
ln -s ../opensshd.service "$DESTDIR/lib/systemd/system/multi-user.target.wants/opensshd.service" 
0:15-07-04 10:28:22 [128/232/232] [openssh] Running strip-commands
0:15-07-04 10:28:22 [128/232/232] [openssh] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:28:22 [128/232/232] [openssh] Creating cache artifact 
0:15-07-04 10:28:26 [128/232/232] [openssh] Now cached as openssh.00f45d84e0517f738bca3fdb4baae32d47b7d539dbb7de6e8fc334be061f8bcd
0:15-07-04 10:28:28 [128/232/232] [openssh] Cleaned up /root/.cache/ybd/tmp/tmpoakrZB
0:15-07-04 10:28:28 [128/232/232] [openssh] Elapsed time 00:01:12
0:15-07-04 10:28:28 [128/232/232] [foundation] Installing openssh.00f45d84e0517f738bca3fdb4baae32d47b7d539dbb7de6e8fc334be061f8bcd 
0:15-07-04 10:28:28 [128/232/232] [fuse] Starting assembly 
0:15-07-04 10:28:28 [128/232/232] [fuse] Installing coreutils-common.40a0127fe04f51dc3d6bb885fadffb65dac0b8abdb08f9f8f5aac203314546c8 
0:15-07-04 10:28:31 [129/232/232] [fuse] Start build 
0:15-07-04 10:28:32 [129/232/232] [fuse] Git checkout upstream:fuse in /root/.cache/ybd/tmp/tmpthagt2/fuse.build 
0:15-07-04 10:28:32 [129/232/232] [fuse] Upstream version d69e627e fuse_2_9_3-7-gd69e627 (fuse_2_9_3 + 7 commits) 
0:15-07-04 10:28:32 [129/232/232] [fuse] Logging build commands to /root/.cache/ybd/artifacts/fuse.ad988060485d626b4cc3b20818742942d2307a028afc9d446db26510c1fa8ace.build-log.0 
0:15-07-04 10:28:32 [129/232/232] [fuse] Running pre-configure-commands
0:15-07-04 10:28:32 [129/232/232] [fuse] Running command:
./makeconf.sh 
WARNING: Unable to set filesystem_writable_paths=['fuse.build', 'fuse.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:29:02 [129/232/232] [fuse] Running configure-commands
0:15-07-04 10:29:02 [129/232/232] [fuse] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
0:15-07-04 10:29:02 [129/232/232] [fuse] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 10:29:08 [129/232/232] [fuse] Running build-commands
0:15-07-04 10:29:08 [129/232/232] [fuse] Running command:
make 
0:15-07-04 10:29:21 [129/232/232] [fuse] Running install-commands
0:15-07-04 10:29:21 [129/232/232] [fuse] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:29:22 [129/232/232] [fuse] Running strip-commands
0:15-07-04 10:29:22 [129/232/232] [fuse] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:29:22 [129/232/232] [fuse] Creating cache artifact 
0:15-07-04 10:29:25 [129/232/232] [fuse] Now cached as fuse.ad988060485d626b4cc3b20818742942d2307a028afc9d446db26510c1fa8ace
0:15-07-04 10:29:26 [129/232/232] [fuse] Cleaned up /root/.cache/ybd/tmp/tmpthagt2
0:15-07-04 10:29:26 [129/232/232] [fuse] Elapsed time 00:00:58
0:15-07-04 10:29:26 [129/232/232] [foundation] Installing fuse.ad988060485d626b4cc3b20818742942d2307a028afc9d446db26510c1fa8ace 
0:15-07-04 10:29:26 [129/232/232] [btrfs-progs] Starting assembly 
0:15-07-04 10:29:26 [129/232/232] [btrfs-progs] Installing coreutils-common.40a0127fe04f51dc3d6bb885fadffb65dac0b8abdb08f9f8f5aac203314546c8 
0:15-07-04 10:29:30 [129/232/232] [btrfs-progs] Installing lzo.f9854801c67b5fc21f0b0c9f29713c9c0c58b7ab0837c86e79e02aaa532d5bb0 
0:15-07-04 10:29:30 [130/232/232] [btrfs-progs] Start build 
0:15-07-04 10:29:30 [130/232/232] [btrfs-progs] Git checkout upstream:btrfs-progs in /root/.cache/ybd/tmp/tmpooBQUm/btrfs-progs.build 
0:15-07-04 10:29:30 [130/232/232] [btrfs-progs] Upstream version 19a806f5 v4.0 (v4.0 + 0 commits) 
0:15-07-04 10:29:30 [130/232/232] [btrfs-progs] Logging build commands to /root/.cache/ybd/artifacts/btrfs-progs.611455f35530219bba715164685adb5430cde1822c3ea55e26f39d04cd25e576.build-log.0 
0:15-07-04 10:29:30 [130/232/232] [btrfs-progs] Running pre-configure-commands
0:15-07-04 10:29:30 [130/232/232] [btrfs-progs] Running command:
./autogen.sh 
WARNING: Unable to set filesystem_writable_paths=['btrfs-progs.build', 'btrfs-progs.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:29:35 [130/232/232] [btrfs-progs] Running configure-commands
0:15-07-04 10:29:35 [130/232/232] [btrfs-progs] Running command:
export CFLAGS="-O2 $CFLAGS"; ./configure --prefix="$PREFIX" --disable-documentation 
0:15-07-04 10:29:39 [130/232/232] [btrfs-progs] Running build-commands
0:15-07-04 10:29:39 [130/232/232] [btrfs-progs] Running command:
make 
0:15-07-04 10:29:47 [130/232/232] [btrfs-progs] Running install-commands
0:15-07-04 10:29:47 [130/232/232] [btrfs-progs] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:29:47 [130/232/232] [btrfs-progs] Running strip-commands
0:15-07-04 10:29:47 [130/232/232] [btrfs-progs] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:29:48 [130/232/232] [btrfs-progs] Creating cache artifact 
0:15-07-04 10:29:51 [130/232/232] [btrfs-progs] Now cached as btrfs-progs.611455f35530219bba715164685adb5430cde1822c3ea55e26f39d04cd25e576
0:15-07-04 10:29:52 [130/232/232] [btrfs-progs] Cleaned up /root/.cache/ybd/tmp/tmpooBQUm
0:15-07-04 10:29:52 [130/232/232] [btrfs-progs] Elapsed time 00:00:26
0:15-07-04 10:29:52 [130/232/232] [foundation] Installing btrfs-progs.611455f35530219bba715164685adb5430cde1822c3ea55e26f39d04cd25e576 
0:15-07-04 10:29:52 [131/232/232] [foundation] Start build 
0:15-07-04 10:29:52 [131/232/232] [foundation] Logging build commands to /root/.cache/ybd/artifacts/foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360.build-log.0 
0:15-07-04 10:29:52 [131/232/232] [foundation] Running strip-commands
0:15-07-04 10:29:52 [131/232/232] [foundation] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
WARNING: Unable to set filesystem_writable_paths=['foundation.build', 'foundation.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:29:53 [131/232/232] [foundation] Creating cache artifact 
0:15-07-04 10:29:53 [131/232/232] [foundation] Now cached as foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360
0:15-07-04 10:29:54 [131/232/232] [foundation] Cleaned up /root/.cache/ybd/tmp/tmpfPZ7iD
0:15-07-04 10:29:54 [131/232/232] [foundation] Elapsed time 00:43:31
0:15-07-04 10:29:54 [131/232/232] [build-system-armv8l64] Installing foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360 
0:15-07-04 10:29:55 [131/232/232] [python-common] Starting assembly 
0:15-07-04 10:29:55 [131/232/232] [python-json-pointer] Starting assembly 
0:15-07-04 10:29:55 [131/232/232] [python-json-pointer] Installing python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5 
0:15-07-04 10:29:59 [132/232/232] [python-json-pointer] Start build 
0:15-07-04 10:29:59 [132/232/232] [python-json-pointer] Git checkout upstream:python-json-pointer in /root/.cache/ybd/tmp/tmpXvGUyz/python-json-pointer.build 
0:15-07-04 10:29:59 [132/232/232] [python-json-pointer] Upstream version 34073e56 v1.4 (v1.4 + 0 commits) 
0:15-07-04 10:29:59 [132/232/232] [python-json-pointer] Logging build commands to /root/.cache/ybd/artifacts/python-json-pointer.739804d03a05ac75d406492663cc9bf1fd42c2c16798c5788f618b3a17e22a51.build-log.0 
0:15-07-04 10:29:59 [132/232/232] [python-json-pointer] Running build-commands
0:15-07-04 10:29:59 [132/232/232] [python-json-pointer] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-json-pointer.build', 'python-json-pointer.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:30:00 [132/232/232] [python-json-pointer] Running install-commands
0:15-07-04 10:30:00 [132/232/232] [python-json-pointer] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:30:00 [132/232/232] [python-json-pointer] Running strip-commands
0:15-07-04 10:30:00 [132/232/232] [python-json-pointer] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:30:01 [132/232/232] [python-json-pointer] Creating cache artifact 
0:15-07-04 10:30:01 [132/232/232] [python-json-pointer] Now cached as python-json-pointer.739804d03a05ac75d406492663cc9bf1fd42c2c16798c5788f618b3a17e22a51
0:15-07-04 10:30:03 [132/232/232] [python-json-pointer] Cleaned up /root/.cache/ybd/tmp/tmpXvGUyz
0:15-07-04 10:30:03 [132/232/232] [python-json-pointer] Elapsed time 00:00:07
0:15-07-04 10:30:03 [132/232/232] [python-common] Installing python-json-pointer.739804d03a05ac75d406492663cc9bf1fd42c2c16798c5788f618b3a17e22a51 
0:15-07-04 10:30:06 [132/232/232] [markupsafe] Starting assembly 
0:15-07-04 10:30:06 [132/232/232] [markupsafe] Installing python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5 
0:15-07-04 10:30:10 [133/232/232] [markupsafe] Start build 
0:15-07-04 10:30:10 [133/232/232] [markupsafe] Git checkout upstream:markupsafe in /root/.cache/ybd/tmp/tmpmY79XU/markupsafe.build 
0:15-07-04 10:30:10 [133/232/232] [markupsafe] Upstream version feb1d70c 0.23 (0.23 + 0 commits) 
0:15-07-04 10:30:10 [133/232/232] [markupsafe] Logging build commands to /root/.cache/ybd/artifacts/markupsafe.63a74b7183005fcfa3392f091d4a847d005819d7f8002f3d115ca152d01d77c5.build-log.0 
0:15-07-04 10:30:10 [133/232/232] [markupsafe] Running build-commands
0:15-07-04 10:30:10 [133/232/232] [markupsafe] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['markupsafe.build', 'markupsafe.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:30:13 [133/232/232] [markupsafe] Running install-commands
0:15-07-04 10:30:13 [133/232/232] [markupsafe] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:30:14 [133/232/232] [markupsafe] Running strip-commands
0:15-07-04 10:30:14 [133/232/232] [markupsafe] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:30:14 [133/232/232] [markupsafe] Creating cache artifact 
0:15-07-04 10:30:14 [133/232/232] [markupsafe] Now cached as markupsafe.63a74b7183005fcfa3392f091d4a847d005819d7f8002f3d115ca152d01d77c5
0:15-07-04 10:30:16 [133/232/232] [markupsafe] Cleaned up /root/.cache/ybd/tmp/tmpmY79XU
0:15-07-04 10:30:16 [133/232/232] [markupsafe] Elapsed time 00:00:09
0:15-07-04 10:30:16 [133/232/232] [python-common] Installing markupsafe.63a74b7183005fcfa3392f091d4a847d005819d7f8002f3d115ca152d01d77c5 
0:15-07-04 10:30:16 [133/232/232] [python-decorator] Starting assembly 
0:15-07-04 10:30:16 [133/232/232] [python-decorator] Installing python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5 
0:15-07-04 10:30:19 [134/232/232] [python-decorator] Start build 
0:15-07-04 10:30:20 [134/232/232] [python-decorator] Git checkout upstream:python-packages/python-decorator in /root/.cache/ybd/tmp/tmpObBrN_/python-decorator.build 
0:15-07-04 10:30:20 [134/232/232] [python-decorator] Upstream version b02f7a25 decorator-3.4.0 (decorator-3.4.0 + 0 commits) 
0:15-07-04 10:30:20 [134/232/232] [python-decorator] Logging build commands to /root/.cache/ybd/artifacts/python-decorator.c6a73e9a251184e3e0122939507777a6e59eb182ff23079b35dce95922f863a9.build-log.0 
0:15-07-04 10:30:20 [134/232/232] [python-decorator] Running build-commands
0:15-07-04 10:30:20 [134/232/232] [python-decorator] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-decorator.build', 'python-decorator.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:30:21 [134/232/232] [python-decorator] Running install-commands
0:15-07-04 10:30:21 [134/232/232] [python-decorator] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:30:22 [134/232/232] [python-decorator] Running strip-commands
0:15-07-04 10:30:22 [134/232/232] [python-decorator] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:30:23 [134/232/232] [python-decorator] Creating cache artifact 
0:15-07-04 10:30:23 [134/232/232] [python-decorator] Now cached as python-decorator.c6a73e9a251184e3e0122939507777a6e59eb182ff23079b35dce95922f863a9
0:15-07-04 10:30:24 [134/232/232] [python-decorator] Cleaned up /root/.cache/ybd/tmp/tmpObBrN_
0:15-07-04 10:30:24 [134/232/232] [python-decorator] Elapsed time 00:00:08
0:15-07-04 10:30:24 [134/232/232] [python-common] Installing python-decorator.c6a73e9a251184e3e0122939507777a6e59eb182ff23079b35dce95922f863a9 
0:15-07-04 10:30:24 [134/232/232] [ecdsa] Starting assembly 
0:15-07-04 10:30:24 [134/232/232] [ecdsa] Installing python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5 
0:15-07-04 10:30:28 [135/232/232] [ecdsa] Start build 
0:15-07-04 10:30:28 [135/232/232] [ecdsa] Git checkout upstream:python-packages/ecdsa in /root/.cache/ybd/tmp/tmpXvub_r/ecdsa.build 
0:15-07-04 10:30:28 [135/232/232] [ecdsa] Upstream version 36e9cfa8 python-ecdsa-0.11 (python-ecdsa-0.11 + 0 commits) 
0:15-07-04 10:30:28 [135/232/232] [ecdsa] Logging build commands to /root/.cache/ybd/artifacts/ecdsa.fa57f69c580f05f4a81b3f8696c3a45442e4eadf49874b315c4cb415cb785425.build-log.0 
0:15-07-04 10:30:28 [135/232/232] [ecdsa] Running build-commands
0:15-07-04 10:30:28 [135/232/232] [ecdsa] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['ecdsa.build', 'ecdsa.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:30:29 [135/232/232] [ecdsa] Running install-commands
0:15-07-04 10:30:29 [135/232/232] [ecdsa] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:30:30 [135/232/232] [ecdsa] Running strip-commands
0:15-07-04 10:30:30 [135/232/232] [ecdsa] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:30:30 [135/232/232] [ecdsa] Creating cache artifact 
0:15-07-04 10:30:30 [135/232/232] [ecdsa] Now cached as ecdsa.fa57f69c580f05f4a81b3f8696c3a45442e4eadf49874b315c4cb415cb785425
0:15-07-04 10:30:32 [135/232/232] [ecdsa] Cleaned up /root/.cache/ybd/tmp/tmpXvub_r
0:15-07-04 10:30:32 [135/232/232] [ecdsa] Elapsed time 00:00:07
0:15-07-04 10:30:32 [135/232/232] [python-common] Installing ecdsa.fa57f69c580f05f4a81b3f8696c3a45442e4eadf49874b315c4cb415cb785425 
0:15-07-04 10:30:32 [135/232/232] [configobj] Starting assembly 
0:15-07-04 10:30:32 [135/232/232] [configobj] Installing python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5 
0:15-07-04 10:30:36 [136/232/232] [configobj] Start build 
0:15-07-04 10:30:36 [136/232/232] [configobj] Git checkout upstream:configobj-git in /root/.cache/ybd/tmp/tmpcSgGE5/configobj.build 
0:15-07-04 10:30:36 [136/232/232] [configobj] Upstream version 9d2aab01 v5.0.6 (v5.0.6 + 0 commits) 
0:15-07-04 10:30:36 [136/232/232] [configobj] Logging build commands to /root/.cache/ybd/artifacts/configobj.973d9a4606f2df5b42507dd02255057b1684596a911bd78b5f7a0389f0bb600c.build-log.0 
0:15-07-04 10:30:36 [136/232/232] [configobj] Running build-commands
0:15-07-04 10:30:36 [136/232/232] [configobj] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['configobj.build', 'configobj.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:30:37 [136/232/232] [configobj] Running install-commands
0:15-07-04 10:30:37 [136/232/232] [configobj] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:30:37 [136/232/232] [configobj] Running strip-commands
0:15-07-04 10:30:37 [136/232/232] [configobj] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:30:38 [136/232/232] [configobj] Creating cache artifact 
0:15-07-04 10:30:38 [136/232/232] [configobj] Now cached as configobj.973d9a4606f2df5b42507dd02255057b1684596a911bd78b5f7a0389f0bb600c
0:15-07-04 10:30:39 [136/232/232] [configobj] Cleaned up /root/.cache/ybd/tmp/tmpcSgGE5
0:15-07-04 10:30:39 [136/232/232] [configobj] Elapsed time 00:00:07
0:15-07-04 10:30:39 [136/232/232] [python-common] Installing configobj.973d9a4606f2df5b42507dd02255057b1684596a911bd78b5f7a0389f0bb600c 
0:15-07-04 10:30:39 [136/232/232] [webob] Starting assembly 
0:15-07-04 10:30:39 [136/232/232] [webob] Installing python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5 
0:15-07-04 10:30:43 [137/232/232] [webob] Start build 
0:15-07-04 10:30:43 [137/232/232] [webob] Git checkout upstream:python-packages/webob in /root/.cache/ybd/tmp/tmp_KW8Qx/webob.build 
0:15-07-04 10:30:43 [137/232/232] [webob] Upstream version ae0ac90f 1.4 (1.4 + 0 commits) 
0:15-07-04 10:30:43 [137/232/232] [webob] Logging build commands to /root/.cache/ybd/artifacts/webob.a7ef225476d075db63b97a242aa5278db5594658d31f7b053d2fb36668369b12.build-log.0 
0:15-07-04 10:30:43 [137/232/232] [webob] Running build-commands
0:15-07-04 10:30:43 [137/232/232] [webob] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['webob.build', 'webob.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:30:45 [137/232/232] [webob] Running install-commands
0:15-07-04 10:30:45 [137/232/232] [webob] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:30:46 [137/232/232] [webob] Running strip-commands
0:15-07-04 10:30:46 [137/232/232] [webob] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:30:46 [137/232/232] [webob] Creating cache artifact 
0:15-07-04 10:30:47 [137/232/232] [webob] Now cached as webob.a7ef225476d075db63b97a242aa5278db5594658d31f7b053d2fb36668369b12
0:15-07-04 10:30:49 [137/232/232] [webob] Cleaned up /root/.cache/ybd/tmp/tmp_KW8Qx
0:15-07-04 10:30:49 [137/232/232] [webob] Elapsed time 00:00:09
0:15-07-04 10:30:49 [137/232/232] [python-common] Installing webob.a7ef225476d075db63b97a242aa5278db5594658d31f7b053d2fb36668369b12 
0:15-07-04 10:30:49 [137/232/232] [pycrypto] Starting assembly 
0:15-07-04 10:30:49 [137/232/232] [pycrypto] Installing python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5 
0:15-07-04 10:30:53 [138/232/232] [pycrypto] Start build 
0:15-07-04 10:30:53 [138/232/232] [pycrypto] Git checkout upstream:python-packages/pycrypto in /root/.cache/ybd/tmp/tmpPnaMOc/pycrypto.build 
0:15-07-04 10:30:53 [138/232/232] [pycrypto] Upstream version af058ee6 v2.7a1 (v2.7a1 + 0 commits) 
0:15-07-04 10:30:53 [138/232/232] [pycrypto] Logging build commands to /root/.cache/ybd/artifacts/pycrypto.5fd91e9f601ee2a8e9c6e267d7e50a228ccbd20372b9294839bfb54379b9a93e.build-log.0 
0:15-07-04 10:30:53 [138/232/232] [pycrypto] Running build-commands
0:15-07-04 10:30:53 [138/232/232] [pycrypto] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['pycrypto.build', 'pycrypto.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:31:13 [138/232/232] [pycrypto] Running install-commands
0:15-07-04 10:31:13 [138/232/232] [pycrypto] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:31:14 [138/232/232] [pycrypto] Running strip-commands
0:15-07-04 10:31:14 [138/232/232] [pycrypto] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:31:15 [138/232/232] [pycrypto] Creating cache artifact 
0:15-07-04 10:31:17 [138/232/232] [pycrypto] Now cached as pycrypto.5fd91e9f601ee2a8e9c6e267d7e50a228ccbd20372b9294839bfb54379b9a93e
0:15-07-04 10:31:18 [138/232/232] [pycrypto] Cleaned up /root/.cache/ybd/tmp/tmpPnaMOc
0:15-07-04 10:31:18 [138/232/232] [pycrypto] Elapsed time 00:00:29
0:15-07-04 10:31:18 [138/232/232] [python-common] Installing pycrypto.5fd91e9f601ee2a8e9c6e267d7e50a228ccbd20372b9294839bfb54379b9a93e 
0:15-07-04 10:31:18 [138/232/232] [python-json-patch] Starting assembly 
0:15-07-04 10:31:19 [138/232/232] [python-json-patch] Installing python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5 
0:15-07-04 10:31:22 [138/232/232] [python-json-patch] Installing python-json-pointer.739804d03a05ac75d406492663cc9bf1fd42c2c16798c5788f618b3a17e22a51 
0:15-07-04 10:31:22 [139/232/232] [python-json-patch] Start build 
0:15-07-04 10:31:23 [139/232/232] [python-json-patch] Git checkout upstream:python-json-patch in /root/.cache/ybd/tmp/tmpyZC8O0/python-json-patch.build 
0:15-07-04 10:31:23 [139/232/232] [python-json-patch] Upstream version e4da658a v1.8 (v1.8 + 0 commits) 
0:15-07-04 10:31:23 [139/232/232] [python-json-patch] Logging build commands to /root/.cache/ybd/artifacts/python-json-patch.2bc79dda70484a60be6ac56437b38fab902dc6294e2053974505ceda2ada3306.build-log.0 
0:15-07-04 10:31:23 [139/232/232] [python-json-patch] Running build-commands
0:15-07-04 10:31:23 [139/232/232] [python-json-patch] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-json-patch.build', 'python-json-patch.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:31:24 [139/232/232] [python-json-patch] Running install-commands
0:15-07-04 10:31:24 [139/232/232] [python-json-patch] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:31:25 [139/232/232] [python-json-patch] Running strip-commands
0:15-07-04 10:31:25 [139/232/232] [python-json-patch] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:31:25 [139/232/232] [python-json-patch] Creating cache artifact 
0:15-07-04 10:31:25 [139/232/232] [python-json-patch] Now cached as python-json-patch.2bc79dda70484a60be6ac56437b38fab902dc6294e2053974505ceda2ada3306
0:15-07-04 10:31:27 [139/232/232] [python-json-patch] Cleaned up /root/.cache/ybd/tmp/tmpyZC8O0
0:15-07-04 10:31:27 [139/232/232] [python-json-patch] Elapsed time 00:00:08
0:15-07-04 10:31:27 [139/232/232] [python-common] Installing python-json-patch.2bc79dda70484a60be6ac56437b38fab902dc6294e2053974505ceda2ada3306 
0:15-07-04 10:31:27 [139/232/232] [networkx] Starting assembly 
0:15-07-04 10:31:27 [139/232/232] [networkx] Installing python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5 
0:15-07-04 10:31:31 [140/232/232] [networkx] Start build 
0:15-07-04 10:31:31 [140/232/232] [networkx] Git checkout upstream:python-packages/networkx in /root/.cache/ybd/tmp/tmpromEK5/networkx.build 
0:15-07-04 10:31:32 [140/232/232] [networkx] Upstream version 8ac796ab networkx-1.9.1 (networkx-1.9.1 + 0 commits) 
0:15-07-04 10:31:32 [140/232/232] [networkx] Logging build commands to /root/.cache/ybd/artifacts/networkx.083ee9dce99d41e057a18f476458208cd73079e07781b0e08c59e0aee0941efc.build-log.0 
0:15-07-04 10:31:32 [140/232/232] [networkx] Running build-commands
0:15-07-04 10:31:32 [140/232/232] [networkx] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['networkx.build', 'networkx.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:31:33 [140/232/232] [networkx] Running install-commands
0:15-07-04 10:31:33 [140/232/232] [networkx] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:31:37 [140/232/232] [networkx] Running strip-commands
0:15-07-04 10:31:37 [140/232/232] [networkx] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:31:37 [140/232/232] [networkx] Creating cache artifact 
0:15-07-04 10:31:40 [140/232/232] [networkx] Now cached as networkx.083ee9dce99d41e057a18f476458208cd73079e07781b0e08c59e0aee0941efc
0:15-07-04 10:31:41 [140/232/232] [networkx] Cleaned up /root/.cache/ybd/tmp/tmpromEK5
0:15-07-04 10:31:41 [140/232/232] [networkx] Elapsed time 00:00:14
0:15-07-04 10:31:41 [140/232/232] [python-common] Installing networkx.083ee9dce99d41e057a18f476458208cd73079e07781b0e08c59e0aee0941efc 
0:15-07-04 10:31:42 [140/232/232] [boto] Starting assembly 
0:15-07-04 10:31:42 [140/232/232] [boto] Installing python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5 
0:15-07-04 10:31:45 [141/232/232] [boto] Start build 
0:15-07-04 10:31:46 [141/232/232] [boto] Git checkout upstream:boto in /root/.cache/ybd/tmp/tmpfwgSnq/boto.build 
0:15-07-04 10:31:46 [141/232/232] [boto] Upstream version 2517f660 2.33.0 (2.33.0 + 0 commits) 
0:15-07-04 10:31:46 [141/232/232] [boto] Logging build commands to /root/.cache/ybd/artifacts/boto.19f5c5065af01e6ffe59aa4d08b2a0123d5ff9a4c4b4eea9764a87138674885f.build-log.0 
0:15-07-04 10:31:46 [141/232/232] [boto] Running build-commands
0:15-07-04 10:31:46 [141/232/232] [boto] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['boto.build', 'boto.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:31:49 [141/232/232] [boto] Running install-commands
0:15-07-04 10:31:49 [141/232/232] [boto] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:31:52 [141/232/232] [boto] Running strip-commands
0:15-07-04 10:31:52 [141/232/232] [boto] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:31:52 [141/232/232] [boto] Creating cache artifact 
0:15-07-04 10:31:56 [141/232/232] [boto] Now cached as boto.19f5c5065af01e6ffe59aa4d08b2a0123d5ff9a4c4b4eea9764a87138674885f
0:15-07-04 10:31:58 [141/232/232] [boto] Cleaned up /root/.cache/ybd/tmp/tmpfwgSnq
0:15-07-04 10:31:58 [141/232/232] [boto] Elapsed time 00:00:16
0:15-07-04 10:31:58 [141/232/232] [python-common] Installing boto.19f5c5065af01e6ffe59aa4d08b2a0123d5ff9a4c4b4eea9764a87138674885f 
0:15-07-04 10:31:58 [141/232/232] [jinja2] Starting assembly 
0:15-07-04 10:31:58 [141/232/232] [jinja2] Installing python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5 
0:15-07-04 10:32:02 [141/232/232] [jinja2] Installing markupsafe.63a74b7183005fcfa3392f091d4a847d005819d7f8002f3d115ca152d01d77c5 
0:15-07-04 10:32:02 [142/232/232] [jinja2] Start build 
0:15-07-04 10:32:02 [142/232/232] [jinja2] Git checkout upstream:jinja2 in /root/.cache/ybd/tmp/tmpCPLyhZ/jinja2.build 
0:15-07-04 10:32:02 [142/232/232] [jinja2] Upstream version 762c612e 2.7.3 (2.7.3 + 0 commits) 
0:15-07-04 10:32:02 [142/232/232] [jinja2] Logging build commands to /root/.cache/ybd/artifacts/jinja2.6da12aa52b4ace812db43b1895d90ef5c989c5ad5d390aea667bbe6f445e1be6.build-log.0 
0:15-07-04 10:32:02 [142/232/232] [jinja2] Running build-commands
0:15-07-04 10:32:02 [142/232/232] [jinja2] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['jinja2.build', 'jinja2.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:32:04 [142/232/232] [jinja2] Running install-commands
0:15-07-04 10:32:04 [142/232/232] [jinja2] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:32:05 [142/232/232] [jinja2] Running strip-commands
0:15-07-04 10:32:05 [142/232/232] [jinja2] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:32:06 [142/232/232] [jinja2] Creating cache artifact 
0:15-07-04 10:32:06 [142/232/232] [jinja2] Now cached as jinja2.6da12aa52b4ace812db43b1895d90ef5c989c5ad5d390aea667bbe6f445e1be6
0:15-07-04 10:32:08 [142/232/232] [jinja2] Cleaned up /root/.cache/ybd/tmp/tmpCPLyhZ
0:15-07-04 10:32:08 [142/232/232] [jinja2] Elapsed time 00:00:10
0:15-07-04 10:32:08 [142/232/232] [python-common] Installing jinja2.6da12aa52b4ace812db43b1895d90ef5c989c5ad5d390aea667bbe6f445e1be6 
0:15-07-04 10:32:08 [142/232/232] [python-mimeparse] Starting assembly 
0:15-07-04 10:32:08 [142/232/232] [python-mimeparse] Installing python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5 
0:15-07-04 10:32:12 [143/232/232] [python-mimeparse] Start build 
0:15-07-04 10:32:12 [143/232/232] [python-mimeparse] Git checkout upstream:python-packages/python-mimeparse.git in /root/.cache/ybd/tmp/tmpzQxuiI/python-mimeparse.build 
0:15-07-04 10:32:12 [143/232/232] [python-mimeparse] Upstream version 2d600d3f (No tag found) 
0:15-07-04 10:32:12 [143/232/232] [python-mimeparse] Logging build commands to /root/.cache/ybd/artifacts/python-mimeparse.4bef21b9851ba2f9a6c7bcd766b2fa650d42526fbc3697962c0fbcf102864fd3.build-log.0 
0:15-07-04 10:32:12 [143/232/232] [python-mimeparse] Running build-commands
0:15-07-04 10:32:12 [143/232/232] [python-mimeparse] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-mimeparse.build', 'python-mimeparse.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:32:14 [143/232/232] [python-mimeparse] Running install-commands
0:15-07-04 10:32:14 [143/232/232] [python-mimeparse] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:32:15 [143/232/232] [python-mimeparse] Running strip-commands
0:15-07-04 10:32:15 [143/232/232] [python-mimeparse] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:32:15 [143/232/232] [python-mimeparse] Creating cache artifact 
0:15-07-04 10:32:15 [143/232/232] [python-mimeparse] Now cached as python-mimeparse.4bef21b9851ba2f9a6c7bcd766b2fa650d42526fbc3697962c0fbcf102864fd3
0:15-07-04 10:32:17 [143/232/232] [python-mimeparse] Cleaned up /root/.cache/ybd/tmp/tmpzQxuiI
0:15-07-04 10:32:17 [143/232/232] [python-mimeparse] Elapsed time 00:00:08
0:15-07-04 10:32:17 [143/232/232] [python-common] Installing python-mimeparse.4bef21b9851ba2f9a6c7bcd766b2fa650d42526fbc3697962c0fbcf102864fd3 
0:15-07-04 10:32:17 [143/232/232] [paramiko] Starting assembly 
0:15-07-04 10:32:17 [143/232/232] [paramiko] Installing pycrypto.5fd91e9f601ee2a8e9c6e267d7e50a228ccbd20372b9294839bfb54379b9a93e 
0:15-07-04 10:32:21 [143/232/232] [paramiko] Installing ecdsa.fa57f69c580f05f4a81b3f8696c3a45442e4eadf49874b315c4cb415cb785425 
0:15-07-04 10:32:21 [144/232/232] [paramiko] Start build 
0:15-07-04 10:32:21 [144/232/232] [paramiko] Git checkout upstream:paramiko in /root/.cache/ybd/tmp/tmpgWkVfO/paramiko.build 
0:15-07-04 10:32:21 [144/232/232] [paramiko] Upstream version 424ba615 v1.15.2 (v1.15.2 + 0 commits) 
0:15-07-04 10:32:21 [144/232/232] [paramiko] Logging build commands to /root/.cache/ybd/artifacts/paramiko.7b8ba7c2e24fc8b691305fa568f0a218eec29872f478b86582649e934bbde3d8.build-log.0 
0:15-07-04 10:32:21 [144/232/232] [paramiko] Running build-commands
0:15-07-04 10:32:21 [144/232/232] [paramiko] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['paramiko.build', 'paramiko.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:32:22 [144/232/232] [paramiko] Running install-commands
0:15-07-04 10:32:22 [144/232/232] [paramiko] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:32:24 [144/232/232] [paramiko] Running strip-commands
0:15-07-04 10:32:24 [144/232/232] [paramiko] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:32:24 [144/232/232] [paramiko] Creating cache artifact 
0:15-07-04 10:32:25 [144/232/232] [paramiko] Now cached as paramiko.7b8ba7c2e24fc8b691305fa568f0a218eec29872f478b86582649e934bbde3d8
0:15-07-04 10:32:26 [144/232/232] [paramiko] Cleaned up /root/.cache/ybd/tmp/tmpgWkVfO
0:15-07-04 10:32:26 [144/232/232] [paramiko] Elapsed time 00:00:09
0:15-07-04 10:32:26 [144/232/232] [python-common] Installing paramiko.7b8ba7c2e24fc8b691305fa568f0a218eec29872f478b86582649e934bbde3d8 
0:15-07-04 10:32:26 [144/232/232] [kazoo] Starting assembly 
0:15-07-04 10:32:26 [144/232/232] [kazoo] Installing python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5 
0:15-07-04 10:32:30 [145/232/232] [kazoo] Start build 
0:15-07-04 10:32:30 [145/232/232] [kazoo] Git checkout upstream:python-packages/kazoo.git in /root/.cache/ybd/tmp/tmpC7NVRP/kazoo.build 
0:15-07-04 10:32:31 [145/232/232] [kazoo] Upstream version 93a718ea 2.0 (2.0 + 0 commits) 
0:15-07-04 10:32:31 [145/232/232] [kazoo] Logging build commands to /root/.cache/ybd/artifacts/kazoo.ff42435250103f4bafae20950b63f34842f85550441a5b205756ef81f4afc299.build-log.0 
0:15-07-04 10:32:31 [145/232/232] [kazoo] Running build-commands
0:15-07-04 10:32:31 [145/232/232] [kazoo] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['kazoo.build', 'kazoo.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:32:32 [145/232/232] [kazoo] Running install-commands
0:15-07-04 10:32:32 [145/232/232] [kazoo] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:32:33 [145/232/232] [kazoo] Running strip-commands
0:15-07-04 10:32:33 [145/232/232] [kazoo] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:32:34 [145/232/232] [kazoo] Creating cache artifact 
0:15-07-04 10:32:34 [145/232/232] [kazoo] Now cached as kazoo.ff42435250103f4bafae20950b63f34842f85550441a5b205756ef81f4afc299
0:15-07-04 10:32:36 [145/232/232] [kazoo] Cleaned up /root/.cache/ybd/tmp/tmpC7NVRP
0:15-07-04 10:32:36 [145/232/232] [kazoo] Elapsed time 00:00:09
0:15-07-04 10:32:36 [145/232/232] [python-common] Installing kazoo.ff42435250103f4bafae20950b63f34842f85550441a5b205756ef81f4afc299 
0:15-07-04 10:32:36 [145/232/232] [python-prettytable] Starting assembly 
0:15-07-04 10:32:36 [145/232/232] [python-prettytable] Installing python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5 
0:15-07-04 10:32:40 [146/232/232] [python-prettytable] Start build 
0:15-07-04 10:32:40 [146/232/232] [python-prettytable] Git checkout upstream:python-prettytable in /root/.cache/ybd/tmp/tmpdZVbgC/python-prettytable.build 
0:15-07-04 10:32:40 [146/232/232] [python-prettytable] Upstream version bea6a50e 0.7.2-RELEASE (0.7.2-RELEASE + 0 commits) 
0:15-07-04 10:32:40 [146/232/232] [python-prettytable] Logging build commands to /root/.cache/ybd/artifacts/python-prettytable.ddfe89079af405b9546a566ec78b78025e79cbaf76a13a916a937e9a153bb702.build-log.0 
0:15-07-04 10:32:40 [146/232/232] [python-prettytable] Running build-commands
0:15-07-04 10:32:40 [146/232/232] [python-prettytable] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-prettytable.build', 'python-prettytable.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:32:41 [146/232/232] [python-prettytable] Running install-commands
0:15-07-04 10:32:41 [146/232/232] [python-prettytable] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:32:43 [146/232/232] [python-prettytable] Running strip-commands
0:15-07-04 10:32:43 [146/232/232] [python-prettytable] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:32:43 [146/232/232] [python-prettytable] Creating cache artifact 
0:15-07-04 10:32:43 [146/232/232] [python-prettytable] Now cached as python-prettytable.ddfe89079af405b9546a566ec78b78025e79cbaf76a13a916a937e9a153bb702
0:15-07-04 10:32:45 [146/232/232] [python-prettytable] Cleaned up /root/.cache/ybd/tmp/tmpdZVbgC
0:15-07-04 10:32:45 [146/232/232] [python-prettytable] Elapsed time 00:00:09
0:15-07-04 10:32:45 [146/232/232] [python-common] Installing python-prettytable.ddfe89079af405b9546a566ec78b78025e79cbaf76a13a916a937e9a153bb702 
0:15-07-04 10:32:45 [147/232/232] [python-common] Start build 
0:15-07-04 10:32:45 [147/232/232] [python-common] Logging build commands to /root/.cache/ybd/artifacts/python-common.c21fc779cc7d2132ae5d2920abd7ed81d8c3024355a551b0b6208fad458a3e3c.build-log.0 
0:15-07-04 10:32:45 [147/232/232] [python-common] Running strip-commands
0:15-07-04 10:32:45 [147/232/232] [python-common] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
WARNING: Unable to set filesystem_writable_paths=['python-common.build', 'python-common.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:32:45 [147/232/232] [python-common] Creating cache artifact 
0:15-07-04 10:32:45 [147/232/232] [python-common] Now cached as python-common.c21fc779cc7d2132ae5d2920abd7ed81d8c3024355a551b0b6208fad458a3e3c
0:15-07-04 10:32:47 [147/232/232] [python-common] Cleaned up /root/.cache/ybd/tmp/tmpx40Vb5
0:15-07-04 10:32:47 [147/232/232] [python-common] Elapsed time 00:02:52
0:15-07-04 10:32:47 [147/232/232] [build-system-armv8l64] Installing python-common.c21fc779cc7d2132ae5d2920abd7ed81d8c3024355a551b0b6208fad458a3e3c 
0:15-07-04 10:32:47 [147/232/232] [openstack-common] Starting assembly 
0:15-07-04 10:32:47 [147/232/232] [oslo-config] Starting assembly 
0:15-07-04 10:32:47 [147/232/232] [oslo-config] Installing foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360 
0:15-07-04 10:32:52 [147/232/232] [stevedore] Starting assembly 
0:15-07-04 10:32:52 [147/232/232] [stevedore] Installing foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360 
0:15-07-04 10:32:56 [147/232/232] [stevedore] Installing python-common.c21fc779cc7d2132ae5d2920abd7ed81d8c3024355a551b0b6208fad458a3e3c 
0:15-07-04 10:32:57 [148/232/232] [stevedore] Start build 
0:15-07-04 10:32:57 [148/232/232] [stevedore] Git checkout upstream:openstack/stevedore in /root/.cache/ybd/tmp/tmpxhirTF/stevedore.build 
0:15-07-04 10:32:57 [148/232/232] [stevedore] Upstream version 218e95d5 1.3.0 (1.3.0 + 0 commits) 
0:15-07-04 10:32:57 [148/232/232] [stevedore] Logging build commands to /root/.cache/ybd/artifacts/stevedore.81f08c844e168a47a1e15467db1978d092b3091345e78a98ba94e5830ffdf403.build-log.0 
0:15-07-04 10:32:57 [148/232/232] [stevedore] Running build-commands
0:15-07-04 10:32:57 [148/232/232] [stevedore] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['stevedore.build', 'stevedore.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:32:59 [148/232/232] [stevedore] Running install-commands
0:15-07-04 10:32:59 [148/232/232] [stevedore] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:33:00 [148/232/232] [stevedore] Running strip-commands
0:15-07-04 10:33:00 [148/232/232] [stevedore] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:33:01 [148/232/232] [stevedore] Creating cache artifact 
0:15-07-04 10:33:01 [148/232/232] [stevedore] Now cached as stevedore.81f08c844e168a47a1e15467db1978d092b3091345e78a98ba94e5830ffdf403
0:15-07-04 10:33:03 [148/232/232] [stevedore] Cleaned up /root/.cache/ybd/tmp/tmpxhirTF
0:15-07-04 10:33:03 [148/232/232] [stevedore] Elapsed time 00:00:11
0:15-07-04 10:33:03 [148/232/232] [oslo-config] Installing stevedore.81f08c844e168a47a1e15467db1978d092b3091345e78a98ba94e5830ffdf403 
0:15-07-04 10:33:03 [148/232/232] [netaddr] Starting assembly 
0:15-07-04 10:33:03 [148/232/232] [netaddr] Installing foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360 
0:15-07-04 10:33:08 [148/232/232] [netaddr] Installing python-common.c21fc779cc7d2132ae5d2920abd7ed81d8c3024355a551b0b6208fad458a3e3c 
0:15-07-04 10:33:08 [149/232/232] [netaddr] Start build 
0:15-07-04 10:33:09 [149/232/232] [netaddr] Git checkout upstream:netaddr in /root/.cache/ybd/tmp/tmp7Cu83R/netaddr.build 
0:15-07-04 10:33:09 [149/232/232] [netaddr] Upstream version bbb31ed5 release-0.7.12 (release-0.7.12 + 0 commits) 
0:15-07-04 10:33:09 [149/232/232] [netaddr] Logging build commands to /root/.cache/ybd/artifacts/netaddr.0c7a436d7bb0a8562c6b3e6489780432653f141777627a67e879c6bac07d30d0.build-log.0 
0:15-07-04 10:33:09 [149/232/232] [netaddr] Running build-commands
0:15-07-04 10:33:09 [149/232/232] [netaddr] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['netaddr.build', 'netaddr.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:33:10 [149/232/232] [netaddr] Running install-commands
0:15-07-04 10:33:10 [149/232/232] [netaddr] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:33:11 [149/232/232] [netaddr] Running strip-commands
0:15-07-04 10:33:11 [149/232/232] [netaddr] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:33:11 [149/232/232] [netaddr] Creating cache artifact 
0:15-07-04 10:33:14 [149/232/232] [netaddr] Now cached as netaddr.0c7a436d7bb0a8562c6b3e6489780432653f141777627a67e879c6bac07d30d0
0:15-07-04 10:33:16 [149/232/232] [netaddr] Cleaned up /root/.cache/ybd/tmp/tmp7Cu83R
0:15-07-04 10:33:16 [149/232/232] [netaddr] Elapsed time 00:00:12
0:15-07-04 10:33:16 [149/232/232] [oslo-config] Installing netaddr.0c7a436d7bb0a8562c6b3e6489780432653f141777627a67e879c6bac07d30d0 
0:15-07-04 10:33:17 [150/232/232] [oslo-config] Start build 
0:15-07-04 10:33:17 [150/232/232] [oslo-config] Git checkout upstream:openstack/oslo-config in /root/.cache/ybd/tmp/tmpqQ0RSZ/oslo-config.build 
0:15-07-04 10:33:17 [150/232/232] [oslo-config] Upstream version 3c51838c 1.9.3 (1.9.3 + 0 commits) 
0:15-07-04 10:33:17 [150/232/232] [oslo-config] Logging build commands to /root/.cache/ybd/artifacts/oslo-config.1cc977a7e9a7d9dd39726ae41f1a6dd39c1aadde93bcd374337837ac7d700563.build-log.0 
0:15-07-04 10:33:17 [150/232/232] [oslo-config] Running build-commands
0:15-07-04 10:33:17 [150/232/232] [oslo-config] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['oslo-config.build', 'oslo-config.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:33:19 [150/232/232] [oslo-config] Running install-commands
0:15-07-04 10:33:19 [150/232/232] [oslo-config] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:33:20 [150/232/232] [oslo-config] Running strip-commands
0:15-07-04 10:33:20 [150/232/232] [oslo-config] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:33:20 [150/232/232] [oslo-config] Creating cache artifact 
0:15-07-04 10:33:21 [150/232/232] [oslo-config] Now cached as oslo-config.1cc977a7e9a7d9dd39726ae41f1a6dd39c1aadde93bcd374337837ac7d700563
0:15-07-04 10:33:23 [150/232/232] [oslo-config] Cleaned up /root/.cache/ybd/tmp/tmpqQ0RSZ
0:15-07-04 10:33:23 [150/232/232] [oslo-config] Elapsed time 00:00:35
0:15-07-04 10:33:23 [150/232/232] [openstack-common] Installing oslo-config.1cc977a7e9a7d9dd39726ae41f1a6dd39c1aadde93bcd374337837ac7d700563 
0:15-07-04 10:33:28 [150/232/232] [greenlet] Starting assembly 
0:15-07-04 10:33:28 [150/232/232] [greenlet] Installing foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360 
0:15-07-04 10:33:32 [150/232/232] [greenlet] Installing python-common.c21fc779cc7d2132ae5d2920abd7ed81d8c3024355a551b0b6208fad458a3e3c 
0:15-07-04 10:33:32 [151/232/232] [greenlet] Start build 
0:15-07-04 10:33:33 [151/232/232] [greenlet] Git checkout upstream:python-packages/greenlet in /root/.cache/ybd/tmp/tmpzhcizc/greenlet.build 
0:15-07-04 10:33:33 [151/232/232] [greenlet] Upstream version 42b65a7b 0.4.5 (0.4.5 + 0 commits) 
0:15-07-04 10:33:33 [151/232/232] [greenlet] Logging build commands to /root/.cache/ybd/artifacts/greenlet.c2d0c3b6cc217416c64cf4de7601aa0dee3e9d4657fa8cc2d767ec4f1c457b17.build-log.0 
0:15-07-04 10:33:33 [151/232/232] [greenlet] Running build-commands
0:15-07-04 10:33:33 [151/232/232] [greenlet] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['greenlet.build', 'greenlet.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:33:35 [151/232/232] [greenlet] Running install-commands
0:15-07-04 10:33:35 [151/232/232] [greenlet] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:33:35 [151/232/232] [greenlet] Running strip-commands
0:15-07-04 10:33:35 [151/232/232] [greenlet] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:33:36 [151/232/232] [greenlet] Creating cache artifact 
0:15-07-04 10:33:36 [151/232/232] [greenlet] Now cached as greenlet.c2d0c3b6cc217416c64cf4de7601aa0dee3e9d4657fa8cc2d767ec4f1c457b17
0:15-07-04 10:33:38 [151/232/232] [greenlet] Cleaned up /root/.cache/ybd/tmp/tmpzhcizc
0:15-07-04 10:33:38 [151/232/232] [greenlet] Elapsed time 00:00:10
0:15-07-04 10:33:38 [151/232/232] [openstack-common] Installing greenlet.c2d0c3b6cc217416c64cf4de7601aa0dee3e9d4657fa8cc2d767ec4f1c457b17 
0:15-07-04 10:33:38 [151/232/232] [eventlet] Starting assembly 
0:15-07-04 10:33:38 [151/232/232] [eventlet] Installing greenlet.c2d0c3b6cc217416c64cf4de7601aa0dee3e9d4657fa8cc2d767ec4f1c457b17 
0:15-07-04 10:33:43 [152/232/232] [eventlet] Start build 
0:15-07-04 10:33:43 [152/232/232] [eventlet] Git checkout upstream:python-packages/eventlet in /root/.cache/ybd/tmp/tmpFJXqr8/eventlet.build 
0:15-07-04 10:33:43 [152/232/232] [eventlet] Upstream version bc0a59f8 v0.17.3 (v0.17.3 + 0 commits) 
0:15-07-04 10:33:43 [152/232/232] [eventlet] Logging build commands to /root/.cache/ybd/artifacts/eventlet.e62b7eaaf4606761b176ce952c5aed72f24f817f2a9744719fcdfa86abbc51d0.build-log.0 
0:15-07-04 10:33:43 [152/232/232] [eventlet] Running build-commands
0:15-07-04 10:33:43 [152/232/232] [eventlet] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['eventlet.build', 'eventlet.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:33:45 [152/232/232] [eventlet] Running install-commands
0:15-07-04 10:33:45 [152/232/232] [eventlet] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:33:46 [152/232/232] [eventlet] Running strip-commands
0:15-07-04 10:33:46 [152/232/232] [eventlet] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:33:47 [152/232/232] [eventlet] Creating cache artifact 
0:15-07-04 10:33:47 [152/232/232] [eventlet] Now cached as eventlet.e62b7eaaf4606761b176ce952c5aed72f24f817f2a9744719fcdfa86abbc51d0
0:15-07-04 10:33:49 [152/232/232] [eventlet] Cleaned up /root/.cache/ybd/tmp/tmpFJXqr8
0:15-07-04 10:33:49 [152/232/232] [eventlet] Elapsed time 00:00:11
0:15-07-04 10:33:49 [152/232/232] [openstack-common] Installing eventlet.e62b7eaaf4606761b176ce952c5aed72f24f817f2a9744719fcdfa86abbc51d0 
0:15-07-04 10:33:49 [152/232/232] [babel] Starting assembly 
0:15-07-04 10:33:49 [152/232/232] [babel] Installing foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360 
0:15-07-04 10:33:54 [152/232/232] [babel] Installing python-common.c21fc779cc7d2132ae5d2920abd7ed81d8c3024355a551b0b6208fad458a3e3c 
0:15-07-04 10:33:54 [152/232/232] [pytz] Starting assembly 
0:15-07-04 10:33:54 [152/232/232] [pytz] Installing python-common.c21fc779cc7d2132ae5d2920abd7ed81d8c3024355a551b0b6208fad458a3e3c 
0:15-07-04 10:33:59 [152/232/232] [pytz] Installing foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360 
0:15-07-04 10:33:59 [153/232/232] [pytz] Start build 
0:15-07-04 10:33:59 [153/232/232] [pytz] Git checkout upstream:pytz-tarball in /root/.cache/ybd/tmp/tmpnxBBSq/pytz.build 
0:15-07-04 10:34:00 [153/232/232] [pytz] Upstream version c414cb80 pytz-2014.10 (pytz-2014.10 + 0 commits) 
0:15-07-04 10:34:00 [153/232/232] [pytz] Logging build commands to /root/.cache/ybd/artifacts/pytz.41a9bde65ad610ffbe4fb09dea57e83bcf45fb3e28a8d69f058e3f85c8372fe9.build-log.0 
0:15-07-04 10:34:00 [153/232/232] [pytz] Running build-commands
0:15-07-04 10:34:00 [153/232/232] [pytz] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['pytz.build', 'pytz.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:34:01 [153/232/232] [pytz] Running install-commands
0:15-07-04 10:34:01 [153/232/232] [pytz] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:34:03 [153/232/232] [pytz] Running strip-commands
0:15-07-04 10:34:03 [153/232/232] [pytz] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:34:04 [153/232/232] [pytz] Creating cache artifact 
0:15-07-04 10:34:05 [153/232/232] [pytz] Now cached as pytz.41a9bde65ad610ffbe4fb09dea57e83bcf45fb3e28a8d69f058e3f85c8372fe9
0:15-07-04 10:34:07 [153/232/232] [pytz] Cleaned up /root/.cache/ybd/tmp/tmpnxBBSq
0:15-07-04 10:34:07 [153/232/232] [pytz] Elapsed time 00:00:12
0:15-07-04 10:34:07 [153/232/232] [babel] Installing pytz.41a9bde65ad610ffbe4fb09dea57e83bcf45fb3e28a8d69f058e3f85c8372fe9 
0:15-07-04 10:34:07 [154/232/232] [babel] Start build 
0:15-07-04 10:34:07 [154/232/232] [babel] Git checkout upstream:babel in /root/.cache/ybd/tmp/tmpE2IjOL/babel.build 
0:15-07-04 10:34:08 [154/232/232] [babel] Upstream version 603e77ae 1.3-51-g603e77a (1.3 + 51 commits) 
0:15-07-04 10:34:08 [154/232/232] [babel] Logging build commands to /root/.cache/ybd/artifacts/babel.bf84774f58947883fa275bb57b3bd79fd34f06ddc9fbd597d07195ac1574888f.build-log.0 
0:15-07-04 10:34:08 [154/232/232] [babel] Running pre-build-commands
0:15-07-04 10:34:08 [154/232/232] [babel] Running command:
python setup.py import_cldr 
WARNING: Unable to set filesystem_writable_paths=['babel.build', 'babel.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:34:43 [154/232/232] [babel] Running build-commands
0:15-07-04 10:34:43 [154/232/232] [babel] Running command:
python setup.py build 
0:15-07-04 10:34:44 [154/232/232] [babel] Running install-commands
0:15-07-04 10:34:44 [154/232/232] [babel] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:34:46 [154/232/232] [babel] Running strip-commands
0:15-07-04 10:34:46 [154/232/232] [babel] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:34:46 [154/232/232] [babel] Creating cache artifact 
0:15-07-04 10:34:54 [154/232/232] [babel] Now cached as babel.bf84774f58947883fa275bb57b3bd79fd34f06ddc9fbd597d07195ac1574888f
0:15-07-04 10:34:56 [154/232/232] [babel] Cleaned up /root/.cache/ybd/tmp/tmpE2IjOL
0:15-07-04 10:34:56 [154/232/232] [babel] Elapsed time 00:01:06
0:15-07-04 10:34:56 [154/232/232] [openstack-common] Installing babel.bf84774f58947883fa275bb57b3bd79fd34f06ddc9fbd597d07195ac1574888f 
0:15-07-04 10:34:56 [154/232/232] [oslo-serialization] Starting assembly 
0:15-07-04 10:34:56 [154/232/232] [oslo-serialization] Installing foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360 
0:15-07-04 10:35:00 [154/232/232] [oslo-serialization] Installing python-common.c21fc779cc7d2132ae5d2920abd7ed81d8c3024355a551b0b6208fad458a3e3c 
0:15-07-04 10:35:01 [155/232/232] [oslo-serialization] Start build 
0:15-07-04 10:35:01 [155/232/232] [oslo-serialization] Git checkout upstream:openstack/oslo-serialization.git in /root/.cache/ybd/tmp/tmpvQTYBC/oslo-serialization.build 
0:15-07-04 10:35:01 [155/232/232] [oslo-serialization] Upstream version 7bfd5dec 1.4.0 (1.4.0 + 0 commits) 
0:15-07-04 10:35:01 [155/232/232] [oslo-serialization] Logging build commands to /root/.cache/ybd/artifacts/oslo-serialization.d592329ab68412853dc8292139235c5c0e894787cae0af9392d319a85137a292.build-log.0 
0:15-07-04 10:35:01 [155/232/232] [oslo-serialization] Running build-commands
0:15-07-04 10:35:01 [155/232/232] [oslo-serialization] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['oslo-serialization.build', 'oslo-serialization.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:35:03 [155/232/232] [oslo-serialization] Running install-commands
0:15-07-04 10:35:03 [155/232/232] [oslo-serialization] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:35:04 [155/232/232] [oslo-serialization] Running strip-commands
0:15-07-04 10:35:04 [155/232/232] [oslo-serialization] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:35:04 [155/232/232] [oslo-serialization] Creating cache artifact 
0:15-07-04 10:35:04 [155/232/232] [oslo-serialization] Now cached as oslo-serialization.d592329ab68412853dc8292139235c5c0e894787cae0af9392d319a85137a292
0:15-07-04 10:35:06 [155/232/232] [oslo-serialization] Cleaned up /root/.cache/ybd/tmp/tmpvQTYBC
0:15-07-04 10:35:06 [155/232/232] [oslo-serialization] Elapsed time 00:00:10
0:15-07-04 10:35:06 [155/232/232] [openstack-common] Installing oslo-serialization.d592329ab68412853dc8292139235c5c0e894787cae0af9392d319a85137a292 
0:15-07-04 10:35:07 [155/232/232] [oslo-utils] Starting assembly 
0:15-07-04 10:35:07 [155/232/232] [oslo-utils] Installing netaddr.0c7a436d7bb0a8562c6b3e6489780432653f141777627a67e879c6bac07d30d0 
0:15-07-04 10:35:11 [155/232/232] [oslo-utils] Installing babel.bf84774f58947883fa275bb57b3bd79fd34f06ddc9fbd597d07195ac1574888f 
0:15-07-04 10:35:12 [155/232/232] [pyiso8601] Starting assembly 
0:15-07-04 10:35:12 [155/232/232] [pyiso8601] Installing foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360 
0:15-07-04 10:35:16 [155/232/232] [pyiso8601] Installing python-common.c21fc779cc7d2132ae5d2920abd7ed81d8c3024355a551b0b6208fad458a3e3c 
0:15-07-04 10:35:16 [156/232/232] [pyiso8601] Start build 
0:15-07-04 10:35:16 [156/232/232] [pyiso8601] Git checkout upstream:pyiso8601 in /root/.cache/ybd/tmp/tmpNZAh7b/pyiso8601.build 
0:15-07-04 10:35:17 [156/232/232] [pyiso8601] Upstream version 9eb87a9b 0.1.10 (0.1.10 + 0 commits) 
0:15-07-04 10:35:17 [156/232/232] [pyiso8601] Logging build commands to /root/.cache/ybd/artifacts/pyiso8601.b826dfa76c144de04d893a7a6ee9eaf7979227e2335cd674cfab4d165543e55a.build-log.0 
0:15-07-04 10:35:17 [156/232/232] [pyiso8601] Running build-commands
0:15-07-04 10:35:17 [156/232/232] [pyiso8601] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['pyiso8601.build', 'pyiso8601.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:35:18 [156/232/232] [pyiso8601] Running install-commands
0:15-07-04 10:35:18 [156/232/232] [pyiso8601] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:35:19 [156/232/232] [pyiso8601] Running strip-commands
0:15-07-04 10:35:19 [156/232/232] [pyiso8601] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:35:19 [156/232/232] [pyiso8601] Creating cache artifact 
0:15-07-04 10:35:19 [156/232/232] [pyiso8601] Now cached as pyiso8601.b826dfa76c144de04d893a7a6ee9eaf7979227e2335cd674cfab4d165543e55a
0:15-07-04 10:35:21 [156/232/232] [pyiso8601] Cleaned up /root/.cache/ybd/tmp/tmpNZAh7b
0:15-07-04 10:35:21 [156/232/232] [pyiso8601] Elapsed time 00:00:09
0:15-07-04 10:35:21 [156/232/232] [oslo-utils] Installing pyiso8601.b826dfa76c144de04d893a7a6ee9eaf7979227e2335cd674cfab4d165543e55a 
0:15-07-04 10:35:21 [156/232/232] [netifaces] Starting assembly 
0:15-07-04 10:35:21 [156/232/232] [netifaces] Installing python-common.c21fc779cc7d2132ae5d2920abd7ed81d8c3024355a551b0b6208fad458a3e3c 
0:15-07-04 10:35:26 [156/232/232] [netifaces] Installing foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360 
0:15-07-04 10:35:27 [157/232/232] [netifaces] Start build 
0:15-07-04 10:35:27 [157/232/232] [netifaces] Git checkout upstream:python-packages/netifaces in /root/.cache/ybd/tmp/tmpY6GMCT/netifaces.build 
0:15-07-04 10:35:27 [157/232/232] [netifaces] Upstream version 885b200b release_0_10_4 (release_0_10_4 + 0 commits) 
0:15-07-04 10:35:27 [157/232/232] [netifaces] Logging build commands to /root/.cache/ybd/artifacts/netifaces.305a11e755bc4847176c36d155b206247f4f36b6cd3538dbcfaa32cfce52ca52.build-log.0 
0:15-07-04 10:35:27 [157/232/232] [netifaces] Running build-commands
0:15-07-04 10:35:27 [157/232/232] [netifaces] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['netifaces.build', 'netifaces.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:35:32 [157/232/232] [netifaces] Running install-commands
0:15-07-04 10:35:32 [157/232/232] [netifaces] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:35:33 [157/232/232] [netifaces] Running strip-commands
0:15-07-04 10:35:33 [157/232/232] [netifaces] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:35:34 [157/232/232] [netifaces] Creating cache artifact 
0:15-07-04 10:35:34 [157/232/232] [netifaces] Now cached as netifaces.305a11e755bc4847176c36d155b206247f4f36b6cd3538dbcfaa32cfce52ca52
0:15-07-04 10:35:36 [157/232/232] [netifaces] Cleaned up /root/.cache/ybd/tmp/tmpY6GMCT
0:15-07-04 10:35:36 [157/232/232] [netifaces] Elapsed time 00:00:14
0:15-07-04 10:35:36 [157/232/232] [oslo-utils] Installing netifaces.305a11e755bc4847176c36d155b206247f4f36b6cd3538dbcfaa32cfce52ca52 
0:15-07-04 10:35:36 [157/232/232] [oslo-i18n] Starting assembly 
0:15-07-04 10:35:36 [157/232/232] [oslo-i18n] Installing foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360 
0:15-07-04 10:35:40 [157/232/232] [oslo-i18n] Installing python-common.c21fc779cc7d2132ae5d2920abd7ed81d8c3024355a551b0b6208fad458a3e3c 
0:15-07-04 10:35:40 [157/232/232] [oslo-i18n] Installing babel.bf84774f58947883fa275bb57b3bd79fd34f06ddc9fbd597d07195ac1574888f 
0:15-07-04 10:35:41 [158/232/232] [oslo-i18n] Start build 
0:15-07-04 10:35:41 [158/232/232] [oslo-i18n] Git checkout upstream:openstack/oslo-i18n in /root/.cache/ybd/tmp/tmputSovZ/oslo-i18n.build 
0:15-07-04 10:35:41 [158/232/232] [oslo-i18n] Upstream version b0faab7b 1.5.0 (1.5.0 + 0 commits) 
0:15-07-04 10:35:41 [158/232/232] [oslo-i18n] Logging build commands to /root/.cache/ybd/artifacts/oslo-i18n.585ce42bfe6bf9a464f0821792a44656e353a07a4f467c8f7fbe618334d11d54.build-log.0 
0:15-07-04 10:35:41 [158/232/232] [oslo-i18n] Running build-commands
0:15-07-04 10:35:41 [158/232/232] [oslo-i18n] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['oslo-i18n.build', 'oslo-i18n.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:35:43 [158/232/232] [oslo-i18n] Running install-commands
0:15-07-04 10:35:43 [158/232/232] [oslo-i18n] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:35:44 [158/232/232] [oslo-i18n] Running strip-commands
0:15-07-04 10:35:44 [158/232/232] [oslo-i18n] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:35:45 [158/232/232] [oslo-i18n] Creating cache artifact 
0:15-07-04 10:35:45 [158/232/232] [oslo-i18n] Now cached as oslo-i18n.585ce42bfe6bf9a464f0821792a44656e353a07a4f467c8f7fbe618334d11d54
0:15-07-04 10:35:47 [158/232/232] [oslo-i18n] Cleaned up /root/.cache/ybd/tmp/tmputSovZ
0:15-07-04 10:35:47 [158/232/232] [oslo-i18n] Elapsed time 00:00:11
0:15-07-04 10:35:47 [158/232/232] [oslo-utils] Installing oslo-i18n.585ce42bfe6bf9a464f0821792a44656e353a07a4f467c8f7fbe618334d11d54 
0:15-07-04 10:35:47 [159/232/232] [oslo-utils] Start build 
0:15-07-04 10:35:47 [159/232/232] [oslo-utils] Git checkout upstream:openstack/oslo-utils in /root/.cache/ybd/tmp/tmpRFZL08/oslo-utils.build 
0:15-07-04 10:35:47 [159/232/232] [oslo-utils] Upstream version 91dc782c 1.4.0 (1.4.0 + 0 commits) 
0:15-07-04 10:35:47 [159/232/232] [oslo-utils] Logging build commands to /root/.cache/ybd/artifacts/oslo-utils.67d871a165a343d32e360e5bdfd82cc067ae090fcb0ac0a2b997afc70a42828f.build-log.0 
0:15-07-04 10:35:47 [159/232/232] [oslo-utils] Running build-commands
0:15-07-04 10:35:47 [159/232/232] [oslo-utils] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['oslo-utils.build', 'oslo-utils.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:35:49 [159/232/232] [oslo-utils] Running install-commands
0:15-07-04 10:35:49 [159/232/232] [oslo-utils] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:35:50 [159/232/232] [oslo-utils] Running strip-commands
0:15-07-04 10:35:50 [159/232/232] [oslo-utils] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:35:51 [159/232/232] [oslo-utils] Creating cache artifact 
0:15-07-04 10:35:51 [159/232/232] [oslo-utils] Now cached as oslo-utils.67d871a165a343d32e360e5bdfd82cc067ae090fcb0ac0a2b997afc70a42828f
0:15-07-04 10:35:53 [159/232/232] [oslo-utils] Cleaned up /root/.cache/ybd/tmp/tmpRFZL08
0:15-07-04 10:35:53 [159/232/232] [oslo-utils] Elapsed time 00:00:46
0:15-07-04 10:35:53 [159/232/232] [openstack-common] Installing oslo-utils.67d871a165a343d32e360e5bdfd82cc067ae090fcb0ac0a2b997afc70a42828f 
0:15-07-04 10:35:53 [159/232/232] [pycparser] Starting assembly 
0:15-07-04 10:35:53 [159/232/232] [pycparser] Installing foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360 
0:15-07-04 10:35:57 [159/232/232] [pycparser] Installing python-common.c21fc779cc7d2132ae5d2920abd7ed81d8c3024355a551b0b6208fad458a3e3c 
0:15-07-04 10:35:58 [160/232/232] [pycparser] Start build 
0:15-07-04 10:35:59 [160/232/232] [pycparser] Git checkout upstream:python-packages/pycparser in /root/.cache/ybd/tmp/tmptmIbrC/pycparser.build 
0:15-07-04 10:35:59 [160/232/232] [pycparser] Upstream version c9266706 release_v2.10-49-gc926670 (release_v2.10 + 49 commits) 
0:15-07-04 10:35:59 [160/232/232] [pycparser] Logging build commands to /root/.cache/ybd/artifacts/pycparser.3b495282f2ab4e72e9c1c230fcff94e217c9c1a8821e403a1887d6668121e1a0.build-log.0 
0:15-07-04 10:35:59 [160/232/232] [pycparser] Running build-commands
0:15-07-04 10:35:59 [160/232/232] [pycparser] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['pycparser.build', 'pycparser.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:36:00 [160/232/232] [pycparser] Running install-commands
0:15-07-04 10:36:00 [160/232/232] [pycparser] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:36:05 [160/232/232] [pycparser] Running strip-commands
0:15-07-04 10:36:05 [160/232/232] [pycparser] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:36:05 [160/232/232] [pycparser] Creating cache artifact 
0:15-07-04 10:36:06 [160/232/232] [pycparser] Now cached as pycparser.3b495282f2ab4e72e9c1c230fcff94e217c9c1a8821e403a1887d6668121e1a0
0:15-07-04 10:36:08 [160/232/232] [pycparser] Cleaned up /root/.cache/ybd/tmp/tmptmIbrC
0:15-07-04 10:36:08 [160/232/232] [pycparser] Elapsed time 00:00:14
0:15-07-04 10:36:08 [160/232/232] [openstack-common] Installing pycparser.3b495282f2ab4e72e9c1c230fcff94e217c9c1a8821e403a1887d6668121e1a0 
0:15-07-04 10:36:08 [160/232/232] [enum34] Starting assembly 
0:15-07-04 10:36:08 [160/232/232] [enum34] Installing foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360 
0:15-07-04 10:36:12 [160/232/232] [enum34] Installing python-common.c21fc779cc7d2132ae5d2920abd7ed81d8c3024355a551b0b6208fad458a3e3c 
0:15-07-04 10:36:13 [161/232/232] [enum34] Start build 
0:15-07-04 10:36:13 [161/232/232] [enum34] Git checkout upstream:python-packages/enum34.git in /root/.cache/ybd/tmp/tmpmxRPu6/enum34.build 
0:15-07-04 10:36:13 [161/232/232] [enum34] Upstream version f1fa1787 enum34-1.0 (enum34-1.0 + 0 commits) 
0:15-07-04 10:36:13 [161/232/232] [enum34] Logging build commands to /root/.cache/ybd/artifacts/enum34.7f834d9e5386d1ceaa3e26d0c133544ee8a1cc9519afdbe71d6a80b1780b0fa1.build-log.0 
0:15-07-04 10:36:13 [161/232/232] [enum34] Running build-commands
0:15-07-04 10:36:13 [161/232/232] [enum34] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['enum34.build', 'enum34.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:36:14 [161/232/232] [enum34] Running install-commands
0:15-07-04 10:36:14 [161/232/232] [enum34] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:36:14 [161/232/232] [enum34] Running strip-commands
0:15-07-04 10:36:14 [161/232/232] [enum34] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:36:15 [161/232/232] [enum34] Creating cache artifact 
0:15-07-04 10:36:15 [161/232/232] [enum34] Now cached as enum34.7f834d9e5386d1ceaa3e26d0c133544ee8a1cc9519afdbe71d6a80b1780b0fa1
0:15-07-04 10:36:17 [161/232/232] [enum34] Cleaned up /root/.cache/ybd/tmp/tmpmxRPu6
0:15-07-04 10:36:17 [161/232/232] [enum34] Elapsed time 00:00:09
0:15-07-04 10:36:17 [161/232/232] [openstack-common] Installing enum34.7f834d9e5386d1ceaa3e26d0c133544ee8a1cc9519afdbe71d6a80b1780b0fa1 
0:15-07-04 10:36:17 [161/232/232] [pyopenssl] Starting assembly 
0:15-07-04 10:36:17 [161/232/232] [pyopenssl] Installing python-common.c21fc779cc7d2132ae5d2920abd7ed81d8c3024355a551b0b6208fad458a3e3c 
0:15-07-04 10:36:21 [161/232/232] [pyopenssl] Installing foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360 
0:15-07-04 10:36:22 [162/232/232] [pyopenssl] Start build 
0:15-07-04 10:36:22 [162/232/232] [pyopenssl] Git checkout upstream:python-packages/pyopenssl in /root/.cache/ybd/tmp/tmp2waRiM/pyopenssl.build 
0:15-07-04 10:36:22 [162/232/232] [pyopenssl] Upstream version 0146d447 0.14 (0.14 + 0 commits) 
0:15-07-04 10:36:22 [162/232/232] [pyopenssl] Logging build commands to /root/.cache/ybd/artifacts/pyopenssl.14ab614fc0906b18f2d4108aa2a21771200e150e820c19f0216e47130da08b7e.build-log.0 
0:15-07-04 10:36:22 [162/232/232] [pyopenssl] Running build-commands
0:15-07-04 10:36:22 [162/232/232] [pyopenssl] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['pyopenssl.build', 'pyopenssl.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:36:24 [162/232/232] [pyopenssl] Running install-commands
0:15-07-04 10:36:24 [162/232/232] [pyopenssl] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:36:25 [162/232/232] [pyopenssl] Running strip-commands
0:15-07-04 10:36:25 [162/232/232] [pyopenssl] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:36:26 [162/232/232] [pyopenssl] Creating cache artifact 
0:15-07-04 10:36:26 [162/232/232] [pyopenssl] Now cached as pyopenssl.14ab614fc0906b18f2d4108aa2a21771200e150e820c19f0216e47130da08b7e
0:15-07-04 10:36:28 [162/232/232] [pyopenssl] Cleaned up /root/.cache/ybd/tmp/tmp2waRiM
0:15-07-04 10:36:28 [162/232/232] [pyopenssl] Elapsed time 00:00:11
0:15-07-04 10:36:28 [162/232/232] [openstack-common] Installing pyopenssl.14ab614fc0906b18f2d4108aa2a21771200e150e820c19f0216e47130da08b7e 
0:15-07-04 10:36:28 [162/232/232] [jsonschema] Starting assembly 
0:15-07-04 10:36:28 [162/232/232] [jsonschema] Installing foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360 
0:15-07-04 10:36:32 [162/232/232] [jsonschema] Installing python-common.c21fc779cc7d2132ae5d2920abd7ed81d8c3024355a551b0b6208fad458a3e3c 
0:15-07-04 10:36:33 [163/232/232] [jsonschema] Start build 
0:15-07-04 10:36:33 [163/232/232] [jsonschema] Git checkout upstream:jsonschema in /root/.cache/ybd/tmp/tmpQv1l5g/jsonschema.build 
0:15-07-04 10:36:33 [163/232/232] [jsonschema] Upstream version 35b60f39 v2.3.0 (v2.3.0 + 0 commits) 
0:15-07-04 10:36:33 [163/232/232] [jsonschema] Logging build commands to /root/.cache/ybd/artifacts/jsonschema.ab7bfe0bb337f26b4d4f74cd765273219d612bb4da0df2509828f61a1be7340e.build-log.0 
0:15-07-04 10:36:33 [163/232/232] [jsonschema] Running build-commands
0:15-07-04 10:36:33 [163/232/232] [jsonschema] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['jsonschema.build', 'jsonschema.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:36:34 [163/232/232] [jsonschema] Running install-commands
0:15-07-04 10:36:34 [163/232/232] [jsonschema] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:36:35 [163/232/232] [jsonschema] Running strip-commands
0:15-07-04 10:36:35 [163/232/232] [jsonschema] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:36:35 [163/232/232] [jsonschema] Creating cache artifact 
0:15-07-04 10:36:36 [163/232/232] [jsonschema] Now cached as jsonschema.ab7bfe0bb337f26b4d4f74cd765273219d612bb4da0df2509828f61a1be7340e
0:15-07-04 10:36:37 [163/232/232] [jsonschema] Cleaned up /root/.cache/ybd/tmp/tmpQv1l5g
0:15-07-04 10:36:37 [163/232/232] [jsonschema] Elapsed time 00:00:09
0:15-07-04 10:36:37 [163/232/232] [openstack-common] Installing jsonschema.ab7bfe0bb337f26b4d4f74cd765273219d612bb4da0df2509828f61a1be7340e 
0:15-07-04 10:36:37 [163/232/232] [cryptography] Starting assembly 
0:15-07-04 10:36:38 [163/232/232] [pyasn1] Starting assembly 
0:15-07-04 10:36:38 [163/232/232] [pyasn1] Installing python-common.c21fc779cc7d2132ae5d2920abd7ed81d8c3024355a551b0b6208fad458a3e3c 
0:15-07-04 10:36:42 [163/232/232] [pyasn1] Installing foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360 
0:15-07-04 10:36:42 [164/232/232] [pyasn1] Start build 
0:15-07-04 10:36:43 [164/232/232] [pyasn1] Git checkout upstream:python-packages/pyasn1 in /root/.cache/ybd/tmp/tmpMDffqV/pyasn1.build 
0:15-07-04 10:36:43 [164/232/232] [pyasn1] Upstream version fa8e66c5 release_0_1_7_tag (release_0_1_7_tag + 0 commits) 
0:15-07-04 10:36:43 [164/232/232] [pyasn1] Logging build commands to /root/.cache/ybd/artifacts/pyasn1.fd448303368211e9dfa69f42465dfe20672def8973448cd96c7121862983b536.build-log.0 
0:15-07-04 10:36:43 [164/232/232] [pyasn1] Running build-commands
0:15-07-04 10:36:43 [164/232/232] [pyasn1] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['pyasn1.build', 'pyasn1.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:36:44 [164/232/232] [pyasn1] Running install-commands
0:15-07-04 10:36:44 [164/232/232] [pyasn1] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:36:45 [164/232/232] [pyasn1] Running strip-commands
0:15-07-04 10:36:45 [164/232/232] [pyasn1] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:36:46 [164/232/232] [pyasn1] Creating cache artifact 
0:15-07-04 10:36:46 [164/232/232] [pyasn1] Now cached as pyasn1.fd448303368211e9dfa69f42465dfe20672def8973448cd96c7121862983b536
0:15-07-04 10:36:48 [164/232/232] [pyasn1] Cleaned up /root/.cache/ybd/tmp/tmpMDffqV
0:15-07-04 10:36:48 [164/232/232] [pyasn1] Elapsed time 00:00:10
0:15-07-04 10:36:48 [164/232/232] [cryptography] Installing pyasn1.fd448303368211e9dfa69f42465dfe20672def8973448cd96c7121862983b536 
0:15-07-04 10:36:53 [164/232/232] [cryptography] Installing enum34.7f834d9e5386d1ceaa3e26d0c133544ee8a1cc9519afdbe71d6a80b1780b0fa1 
0:15-07-04 10:36:53 [164/232/232] [cffi] Starting assembly 
0:15-07-04 10:36:53 [164/232/232] [cffi] Installing python-common.c21fc779cc7d2132ae5d2920abd7ed81d8c3024355a551b0b6208fad458a3e3c 
0:15-07-04 10:36:57 [164/232/232] [cffi] Installing foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360 
0:15-07-04 10:36:57 [164/232/232] [cffi] Installing pycparser.3b495282f2ab4e72e9c1c230fcff94e217c9c1a8821e403a1887d6668121e1a0 
0:15-07-04 10:36:57 [165/232/232] [cffi] Start build 
0:15-07-04 10:36:58 [165/232/232] [cffi] Git checkout upstream:python-packages/cffi in /root/.cache/ybd/tmp/tmpiWGMLP/cffi.build 
0:15-07-04 10:36:58 [165/232/232] [cffi] Upstream version fc53b530 (No tag found) 
0:15-07-04 10:36:58 [165/232/232] [cffi] Logging build commands to /root/.cache/ybd/artifacts/cffi.80c680d4ec53aa2898bc3f0d921be85dc2ef5deadd6ddf13ff0184df6b67219e.build-log.0 
0:15-07-04 10:36:58 [165/232/232] [cffi] Running build-commands
0:15-07-04 10:36:58 [165/232/232] [cffi] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['cffi.build', 'cffi.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:37:06 [165/232/232] [cffi] Running install-commands
0:15-07-04 10:37:06 [165/232/232] [cffi] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:37:07 [165/232/232] [cffi] Running strip-commands
0:15-07-04 10:37:07 [165/232/232] [cffi] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:37:07 [165/232/232] [cffi] Creating cache artifact 
0:15-07-04 10:37:08 [165/232/232] [cffi] Now cached as cffi.80c680d4ec53aa2898bc3f0d921be85dc2ef5deadd6ddf13ff0184df6b67219e
0:15-07-04 10:37:10 [165/232/232] [cffi] Cleaned up /root/.cache/ybd/tmp/tmpiWGMLP
0:15-07-04 10:37:10 [165/232/232] [cffi] Elapsed time 00:00:17
0:15-07-04 10:37:10 [165/232/232] [cryptography] Installing cffi.80c680d4ec53aa2898bc3f0d921be85dc2ef5deadd6ddf13ff0184df6b67219e 
0:15-07-04 10:37:10 [166/232/232] [cryptography] Start build 
0:15-07-04 10:37:12 [166/232/232] [cryptography] Git checkout upstream:python-packages/cryptography in /root/.cache/ybd/tmp/tmp3GHem9/cryptography.build 
0:15-07-04 10:37:12 [166/232/232] [cryptography] Upstream version 9ac7d551 0.7.2 (0.7.2 + 0 commits) 
0:15-07-04 10:37:13 [166/232/232] [cryptography] Logging build commands to /root/.cache/ybd/artifacts/cryptography.7116cd0b068faaf0dd62338507d32ed0277b67b782c1876c1b420fb2b2f9b8a2.build-log.0 
0:15-07-04 10:37:13 [166/232/232] [cryptography] Running build-commands
0:15-07-04 10:37:13 [166/232/232] [cryptography] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['cryptography.build', 'cryptography.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:38:01 [166/232/232] [cryptography] Running install-commands
0:15-07-04 10:38:01 [166/232/232] [cryptography] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:38:48 [166/232/232] [cryptography] Running strip-commands
0:15-07-04 10:38:48 [166/232/232] [cryptography] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:38:48 [166/232/232] [cryptography] Creating cache artifact 
0:15-07-04 10:38:51 [166/232/232] [cryptography] Now cached as cryptography.7116cd0b068faaf0dd62338507d32ed0277b67b782c1876c1b420fb2b2f9b8a2
0:15-07-04 10:38:53 [166/232/232] [cryptography] Cleaned up /root/.cache/ybd/tmp/tmp3GHem9
0:15-07-04 10:38:53 [166/232/232] [cryptography] Elapsed time 00:02:15
0:15-07-04 10:38:53 [166/232/232] [openstack-common] Installing cryptography.7116cd0b068faaf0dd62338507d32ed0277b67b782c1876c1b420fb2b2f9b8a2 
0:15-07-04 10:38:53 [166/232/232] [futures] Starting assembly 
0:15-07-04 10:38:53 [166/232/232] [futures] Installing foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360 
0:15-07-04 10:38:58 [166/232/232] [futures] Installing python-common.c21fc779cc7d2132ae5d2920abd7ed81d8c3024355a551b0b6208fad458a3e3c 
0:15-07-04 10:38:58 [167/232/232] [futures] Start build 
0:15-07-04 10:38:58 [167/232/232] [futures] Git checkout upstream:python-packages/futures in /root/.cache/ybd/tmp/tmpc4b4s5/futures.build 
0:15-07-04 10:38:58 [167/232/232] [futures] Upstream version 4f7ceedb 2.2.0 (2.2.0 + 0 commits) 
0:15-07-04 10:38:58 [167/232/232] [futures] Logging build commands to /root/.cache/ybd/artifacts/futures.101c9216a76acc7cd8cfecab5dc3e8388ef49b1d8086383090e06c863ff12579.build-log.0 
0:15-07-04 10:38:58 [167/232/232] [futures] Running build-commands
0:15-07-04 10:38:58 [167/232/232] [futures] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['futures.build', 'futures.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:39:00 [167/232/232] [futures] Running install-commands
0:15-07-04 10:39:00 [167/232/232] [futures] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:39:01 [167/232/232] [futures] Running strip-commands
0:15-07-04 10:39:01 [167/232/232] [futures] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:39:01 [167/232/232] [futures] Creating cache artifact 
0:15-07-04 10:39:01 [167/232/232] [futures] Now cached as futures.101c9216a76acc7cd8cfecab5dc3e8388ef49b1d8086383090e06c863ff12579
0:15-07-04 10:39:03 [167/232/232] [futures] Cleaned up /root/.cache/ybd/tmp/tmpc4b4s5
0:15-07-04 10:39:03 [167/232/232] [futures] Elapsed time 00:00:09
0:15-07-04 10:39:03 [167/232/232] [openstack-common] Installing futures.101c9216a76acc7cd8cfecab5dc3e8388ef49b1d8086383090e06c863ff12579 
0:15-07-04 10:39:03 [167/232/232] [pastedeploy] Starting assembly 
0:15-07-04 10:39:03 [167/232/232] [pastedeploy] Installing python-common.c21fc779cc7d2132ae5d2920abd7ed81d8c3024355a551b0b6208fad458a3e3c 
0:15-07-04 10:39:07 [167/232/232] [pastedeploy] Installing foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360 
0:15-07-04 10:39:08 [168/232/232] [pastedeploy] Start build 
0:15-07-04 10:39:08 [168/232/232] [pastedeploy] Git checkout upstream:python-packages/pastedeploy in /root/.cache/ybd/tmp/tmpxag9UZ/pastedeploy.build 
0:15-07-04 10:39:08 [168/232/232] [pastedeploy] Upstream version 5ad87be6 1.5.2 (1.5.2 + 0 commits) 
0:15-07-04 10:39:08 [168/232/232] [pastedeploy] Logging build commands to /root/.cache/ybd/artifacts/pastedeploy.0c611592d78b997aa159a7f43448a7b3da7067234c83cefe3717c6a8a5ddc5d0.build-log.0 
0:15-07-04 10:39:08 [168/232/232] [pastedeploy] Running build-commands
0:15-07-04 10:39:08 [168/232/232] [pastedeploy] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['pastedeploy.build', 'pastedeploy.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:39:10 [168/232/232] [pastedeploy] Running install-commands
0:15-07-04 10:39:10 [168/232/232] [pastedeploy] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:39:11 [168/232/232] [pastedeploy] Running strip-commands
0:15-07-04 10:39:11 [168/232/232] [pastedeploy] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:39:11 [168/232/232] [pastedeploy] Creating cache artifact 
0:15-07-04 10:39:11 [168/232/232] [pastedeploy] Now cached as pastedeploy.0c611592d78b997aa159a7f43448a7b3da7067234c83cefe3717c6a8a5ddc5d0
0:15-07-04 10:39:14 [168/232/232] [pastedeploy] Cleaned up /root/.cache/ybd/tmp/tmpxag9UZ
0:15-07-04 10:39:14 [168/232/232] [pastedeploy] Elapsed time 00:00:10
0:15-07-04 10:39:14 [168/232/232] [openstack-common] Installing pastedeploy.0c611592d78b997aa159a7f43448a7b3da7067234c83cefe3717c6a8a5ddc5d0 
0:15-07-04 10:39:14 [168/232/232] [simplejson] Starting assembly 
0:15-07-04 10:39:14 [168/232/232] [simplejson] Installing foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360 
0:15-07-04 10:39:18 [168/232/232] [simplejson] Installing python-common.c21fc779cc7d2132ae5d2920abd7ed81d8c3024355a551b0b6208fad458a3e3c 
0:15-07-04 10:39:18 [169/232/232] [simplejson] Start build 
0:15-07-04 10:39:19 [169/232/232] [simplejson] Git checkout upstream:simplejson in /root/.cache/ybd/tmp/tmpfZCn92/simplejson.build 
0:15-07-04 10:39:19 [169/232/232] [simplejson] Upstream version 54d5ff15 v3.6.4 (v3.6.4 + 0 commits) 
0:15-07-04 10:39:19 [169/232/232] [simplejson] Logging build commands to /root/.cache/ybd/artifacts/simplejson.59ea6ffd1a3e4383d9113d5397209939ad98695fd078c02a2b46389b4b82192f.build-log.0 
0:15-07-04 10:39:19 [169/232/232] [simplejson] Running build-commands
0:15-07-04 10:39:19 [169/232/232] [simplejson] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['simplejson.build', 'simplejson.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:39:24 [169/232/232] [simplejson] Running install-commands
0:15-07-04 10:39:24 [169/232/232] [simplejson] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:39:25 [169/232/232] [simplejson] Running strip-commands
0:15-07-04 10:39:25 [169/232/232] [simplejson] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:39:25 [169/232/232] [simplejson] Creating cache artifact 
0:15-07-04 10:39:26 [169/232/232] [simplejson] Now cached as simplejson.59ea6ffd1a3e4383d9113d5397209939ad98695fd078c02a2b46389b4b82192f
0:15-07-04 10:39:28 [169/232/232] [simplejson] Cleaned up /root/.cache/ybd/tmp/tmpfZCn92
0:15-07-04 10:39:28 [169/232/232] [simplejson] Elapsed time 00:00:13
0:15-07-04 10:39:28 [169/232/232] [openstack-common] Installing simplejson.59ea6ffd1a3e4383d9113d5397209939ad98695fd078c02a2b46389b4b82192f 
0:15-07-04 10:39:28 [170/232/232] [openstack-common] Start build 
0:15-07-04 10:39:28 [170/232/232] [openstack-common] Logging build commands to /root/.cache/ybd/artifacts/openstack-common.30164cbea78dfb628bd2893e866c77b7a9497848cd15fed0c86b33cad3677502.build-log.0 
0:15-07-04 10:39:28 [170/232/232] [openstack-common] Running strip-commands
0:15-07-04 10:39:28 [170/232/232] [openstack-common] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
WARNING: Unable to set filesystem_writable_paths=['openstack-common.build', 'openstack-common.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:39:28 [170/232/232] [openstack-common] Creating cache artifact 
0:15-07-04 10:39:28 [170/232/232] [openstack-common] Now cached as openstack-common.30164cbea78dfb628bd2893e866c77b7a9497848cd15fed0c86b33cad3677502
0:15-07-04 10:39:30 [170/232/232] [openstack-common] Cleaned up /root/.cache/ybd/tmp/tmpHhc_Xr
0:15-07-04 10:39:30 [170/232/232] [openstack-common] Elapsed time 00:06:42
0:15-07-04 10:39:30 [170/232/232] [build-system-armv8l64] Installing openstack-common.30164cbea78dfb628bd2893e866c77b7a9497848cd15fed0c86b33cad3677502 
0:15-07-04 10:39:30 [170/232/232] [openstack-clients] Starting assembly 
0:15-07-04 10:39:30 [170/232/232] [python-glanceclient] Starting assembly 
0:15-07-04 10:39:30 [170/232/232] [warlock] Starting assembly 
0:15-07-04 10:39:30 [170/232/232] [warlock] Installing openstack-common.30164cbea78dfb628bd2893e866c77b7a9497848cd15fed0c86b33cad3677502 
0:15-07-04 10:39:36 [171/232/232] [warlock] Start build 
0:15-07-04 10:39:36 [171/232/232] [warlock] Git checkout upstream:warlock in /root/.cache/ybd/tmp/tmpOXKUX_/warlock.build 
0:15-07-04 10:39:36 [171/232/232] [warlock] Upstream version 408ccb82 1.1.0 (1.1.0 + 0 commits) 
0:15-07-04 10:39:36 [171/232/232] [warlock] Logging build commands to /root/.cache/ybd/artifacts/warlock.afbec457e78114030f7f83310eb19f75ffe678fd424849e6c73fb47f55676a12.build-log.0 
0:15-07-04 10:39:36 [171/232/232] [warlock] Running build-commands
0:15-07-04 10:39:36 [171/232/232] [warlock] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['warlock.build', 'warlock.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:39:37 [171/232/232] [warlock] Running install-commands
0:15-07-04 10:39:37 [171/232/232] [warlock] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:39:38 [171/232/232] [warlock] Running strip-commands
0:15-07-04 10:39:38 [171/232/232] [warlock] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:39:39 [171/232/232] [warlock] Creating cache artifact 
0:15-07-04 10:39:39 [171/232/232] [warlock] Now cached as warlock.afbec457e78114030f7f83310eb19f75ffe678fd424849e6c73fb47f55676a12
0:15-07-04 10:39:41 [171/232/232] [warlock] Cleaned up /root/.cache/ybd/tmp/tmpOXKUX_
0:15-07-04 10:39:41 [171/232/232] [warlock] Elapsed time 00:00:10
0:15-07-04 10:39:41 [171/232/232] [python-glanceclient] Installing warlock.afbec457e78114030f7f83310eb19f75ffe678fd424849e6c73fb47f55676a12 
0:15-07-04 10:39:46 [171/232/232] [python-keystoneclient] Starting assembly 
0:15-07-04 10:39:46 [171/232/232] [python-keystoneclient] Installing openstack-common.30164cbea78dfb628bd2893e866c77b7a9497848cd15fed0c86b33cad3677502 
0:15-07-04 10:39:52 [172/232/232] [python-keystoneclient] Start build 
0:15-07-04 10:39:52 [172/232/232] [python-keystoneclient] Git checkout upstream:openstack/python-keystoneclient in /root/.cache/ybd/tmp/tmp3Khxd3/python-keystoneclient.build 
0:15-07-04 10:39:52 [172/232/232] [python-keystoneclient] Upstream version 8fa6b6f0 1.3.1 (1.3.1 + 0 commits) 
0:15-07-04 10:39:52 [172/232/232] [python-keystoneclient] Logging build commands to /root/.cache/ybd/artifacts/python-keystoneclient.6bb5b76e3298918985261fe908ebd605aefcace468334d64f5e23b0935d1bcaa.build-log.0 
0:15-07-04 10:39:52 [172/232/232] [python-keystoneclient] Running build-commands
0:15-07-04 10:39:52 [172/232/232] [python-keystoneclient] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-keystoneclient.build', 'python-keystoneclient.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:39:54 [172/232/232] [python-keystoneclient] Running install-commands
0:15-07-04 10:39:54 [172/232/232] [python-keystoneclient] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:39:56 [172/232/232] [python-keystoneclient] Running strip-commands
0:15-07-04 10:39:56 [172/232/232] [python-keystoneclient] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:39:56 [172/232/232] [python-keystoneclient] Creating cache artifact 
0:15-07-04 10:39:58 [172/232/232] [python-keystoneclient] Now cached as python-keystoneclient.6bb5b76e3298918985261fe908ebd605aefcace468334d64f5e23b0935d1bcaa
0:15-07-04 10:40:00 [172/232/232] [python-keystoneclient] Cleaned up /root/.cache/ybd/tmp/tmp3Khxd3
0:15-07-04 10:40:00 [172/232/232] [python-keystoneclient] Elapsed time 00:00:13
0:15-07-04 10:40:00 [172/232/232] [python-glanceclient] Installing python-keystoneclient.6bb5b76e3298918985261fe908ebd605aefcace468334d64f5e23b0935d1bcaa 
0:15-07-04 10:40:00 [173/232/232] [python-glanceclient] Start build 
0:15-07-04 10:40:00 [173/232/232] [python-glanceclient] Git checkout upstream:openstack/python-glanceclient in /root/.cache/ybd/tmp/tmpEZzAOl/python-glanceclient.build 
0:15-07-04 10:40:01 [173/232/232] [python-glanceclient] Upstream version b176c28b 0.17.1 (0.17.1 + 0 commits) 
0:15-07-04 10:40:01 [173/232/232] [python-glanceclient] Logging build commands to /root/.cache/ybd/artifacts/python-glanceclient.f7757a44b8e0ab6244c55ba8f9fc849d7602b1351da2c59f870eac7093d1775a.build-log.0 
0:15-07-04 10:40:01 [173/232/232] [python-glanceclient] Running build-commands
0:15-07-04 10:40:01 [173/232/232] [python-glanceclient] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-glanceclient.build', 'python-glanceclient.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:40:03 [173/232/232] [python-glanceclient] Running install-commands
0:15-07-04 10:40:03 [173/232/232] [python-glanceclient] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:40:04 [173/232/232] [python-glanceclient] Running strip-commands
0:15-07-04 10:40:04 [173/232/232] [python-glanceclient] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:40:04 [173/232/232] [python-glanceclient] Creating cache artifact 
0:15-07-04 10:40:04 [173/232/232] [python-glanceclient] Now cached as python-glanceclient.f7757a44b8e0ab6244c55ba8f9fc849d7602b1351da2c59f870eac7093d1775a
0:15-07-04 10:40:07 [173/232/232] [python-glanceclient] Cleaned up /root/.cache/ybd/tmp/tmpEZzAOl
0:15-07-04 10:40:07 [173/232/232] [python-glanceclient] Elapsed time 00:00:36
0:15-07-04 10:40:07 [173/232/232] [openstack-clients] Installing python-glanceclient.f7757a44b8e0ab6244c55ba8f9fc849d7602b1351da2c59f870eac7093d1775a 
0:15-07-04 10:40:12 [173/232/232] [appdirs] Starting assembly 
0:15-07-04 10:40:12 [173/232/232] [appdirs] Installing openstack-common.30164cbea78dfb628bd2893e866c77b7a9497848cd15fed0c86b33cad3677502 
0:15-07-04 10:40:17 [174/232/232] [appdirs] Start build 
0:15-07-04 10:40:18 [174/232/232] [appdirs] Git checkout upstream:python-packages/appdirs in /root/.cache/ybd/tmp/tmplZhNjt/appdirs.build 
0:15-07-04 10:40:18 [174/232/232] [appdirs] Upstream version 57f2bc44 1.4.0 (1.4.0 + 0 commits) 
0:15-07-04 10:40:18 [174/232/232] [appdirs] Logging build commands to /root/.cache/ybd/artifacts/appdirs.ed4357439d3ffd23ca1c989f76ae9d54a3350283a7b3e33c5209642f9280f825.build-log.0 
0:15-07-04 10:40:18 [174/232/232] [appdirs] Running build-commands
0:15-07-04 10:40:18 [174/232/232] [appdirs] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['appdirs.build', 'appdirs.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:40:19 [174/232/232] [appdirs] Running install-commands
0:15-07-04 10:40:19 [174/232/232] [appdirs] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:40:20 [174/232/232] [appdirs] Running strip-commands
0:15-07-04 10:40:20 [174/232/232] [appdirs] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:40:21 [174/232/232] [appdirs] Creating cache artifact 
0:15-07-04 10:40:21 [174/232/232] [appdirs] Now cached as appdirs.ed4357439d3ffd23ca1c989f76ae9d54a3350283a7b3e33c5209642f9280f825
0:15-07-04 10:40:23 [174/232/232] [appdirs] Cleaned up /root/.cache/ybd/tmp/tmplZhNjt
0:15-07-04 10:40:23 [174/232/232] [appdirs] Elapsed time 00:00:10
0:15-07-04 10:40:23 [174/232/232] [openstack-clients] Installing appdirs.ed4357439d3ffd23ca1c989f76ae9d54a3350283a7b3e33c5209642f9280f825 
0:15-07-04 10:40:23 [174/232/232] [python-cinderclient] Starting assembly 
0:15-07-04 10:40:23 [174/232/232] [python-cinderclient] Installing openstack-common.30164cbea78dfb628bd2893e866c77b7a9497848cd15fed0c86b33cad3677502 
0:15-07-04 10:40:28 [174/232/232] [python-cinderclient] Installing python-keystoneclient.6bb5b76e3298918985261fe908ebd605aefcace468334d64f5e23b0935d1bcaa 
0:15-07-04 10:40:28 [175/232/232] [python-cinderclient] Start build 
0:15-07-04 10:40:28 [175/232/232] [python-cinderclient] Git checkout upstream:openstack/python-cinderclient in /root/.cache/ybd/tmp/tmpS5vPlR/python-cinderclient.build 
0:15-07-04 10:40:28 [175/232/232] [python-cinderclient] Upstream version ac9b0913 1.1.1 (1.1.1 + 0 commits) 
0:15-07-04 10:40:28 [175/232/232] [python-cinderclient] Logging build commands to /root/.cache/ybd/artifacts/python-cinderclient.74b51dbf7bd26f93457a9d87253cb11384685b18799e3d54fb7ba62185126c42.build-log.0 
0:15-07-04 10:40:28 [175/232/232] [python-cinderclient] Running build-commands
0:15-07-04 10:40:28 [175/232/232] [python-cinderclient] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-cinderclient.build', 'python-cinderclient.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:40:31 [175/232/232] [python-cinderclient] Running install-commands
0:15-07-04 10:40:31 [175/232/232] [python-cinderclient] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:40:32 [175/232/232] [python-cinderclient] Running strip-commands
0:15-07-04 10:40:32 [175/232/232] [python-cinderclient] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:40:32 [175/232/232] [python-cinderclient] Creating cache artifact 
0:15-07-04 10:40:33 [175/232/232] [python-cinderclient] Now cached as python-cinderclient.74b51dbf7bd26f93457a9d87253cb11384685b18799e3d54fb7ba62185126c42
0:15-07-04 10:40:35 [175/232/232] [python-cinderclient] Cleaned up /root/.cache/ybd/tmp/tmpS5vPlR
0:15-07-04 10:40:35 [175/232/232] [python-cinderclient] Elapsed time 00:00:12
0:15-07-04 10:40:35 [175/232/232] [openstack-clients] Installing python-cinderclient.74b51dbf7bd26f93457a9d87253cb11384685b18799e3d54fb7ba62185126c42 
0:15-07-04 10:40:35 [175/232/232] [cliff-tablib] Starting assembly 
0:15-07-04 10:40:35 [175/232/232] [cliff-tablib] Installing openstack-common.30164cbea78dfb628bd2893e866c77b7a9497848cd15fed0c86b33cad3677502 
0:15-07-04 10:40:41 [176/232/232] [cliff-tablib] Start build 
0:15-07-04 10:40:41 [176/232/232] [cliff-tablib] Git checkout upstream:python-packages/cliff-tablib in /root/.cache/ybd/tmp/tmp1et36A/cliff-tablib.build 
0:15-07-04 10:40:41 [176/232/232] [cliff-tablib] Upstream version a83bf47d 1.1 (1.1 + 0 commits) 
0:15-07-04 10:40:41 [176/232/232] [cliff-tablib] Logging build commands to /root/.cache/ybd/artifacts/cliff-tablib.28a228e57091a49776042febd66241b637e5d4d922986b7fdfaf404c7135759f.build-log.0 
0:15-07-04 10:40:41 [176/232/232] [cliff-tablib] Running build-commands
0:15-07-04 10:40:41 [176/232/232] [cliff-tablib] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['cliff-tablib.build', 'cliff-tablib.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:40:43 [176/232/232] [cliff-tablib] Running install-commands
0:15-07-04 10:40:43 [176/232/232] [cliff-tablib] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:40:44 [176/232/232] [cliff-tablib] Running strip-commands
0:15-07-04 10:40:44 [176/232/232] [cliff-tablib] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:40:44 [176/232/232] [cliff-tablib] Creating cache artifact 
0:15-07-04 10:40:44 [176/232/232] [cliff-tablib] Now cached as cliff-tablib.28a228e57091a49776042febd66241b637e5d4d922986b7fdfaf404c7135759f
0:15-07-04 10:40:46 [176/232/232] [cliff-tablib] Cleaned up /root/.cache/ybd/tmp/tmp1et36A
0:15-07-04 10:40:46 [176/232/232] [cliff-tablib] Elapsed time 00:00:10
0:15-07-04 10:40:46 [176/232/232] [openstack-clients] Installing cliff-tablib.28a228e57091a49776042febd66241b637e5d4d922986b7fdfaf404c7135759f 
0:15-07-04 10:40:46 [176/232/232] [cmd2] Starting assembly 
0:15-07-04 10:40:46 [176/232/232] [pyparsing] Starting assembly 
0:15-07-04 10:40:46 [176/232/232] [pyparsing] Installing openstack-common.30164cbea78dfb628bd2893e866c77b7a9497848cd15fed0c86b33cad3677502 
0:15-07-04 10:40:52 [177/232/232] [pyparsing] Start build 
0:15-07-04 10:40:52 [177/232/232] [pyparsing] Git checkout upstream:python-packages/pyparsing.git in /root/.cache/ybd/tmp/tmpW8f28s/pyparsing.build 
0:15-07-04 10:40:52 [177/232/232] [pyparsing] Upstream version 8062c76a pyparsing_2.0.3 (pyparsing_2.0.3 + 0 commits) 
0:15-07-04 10:40:52 [177/232/232] [pyparsing] Logging build commands to /root/.cache/ybd/artifacts/pyparsing.d38af69c1b0118c13745c94e0476ea22530e1bd258ce4a2dc9b2bb3714238687.build-log.0 
0:15-07-04 10:40:52 [177/232/232] [pyparsing] Running build-commands
0:15-07-04 10:40:52 [177/232/232] [pyparsing] Running command:
cd src && python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['pyparsing.build', 'pyparsing.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:40:53 [177/232/232] [pyparsing] Running install-commands
0:15-07-04 10:40:53 [177/232/232] [pyparsing] Running command:
cd src && python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:40:54 [177/232/232] [pyparsing] Running strip-commands
0:15-07-04 10:40:54 [177/232/232] [pyparsing] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:40:54 [177/232/232] [pyparsing] Creating cache artifact 
0:15-07-04 10:40:54 [177/232/232] [pyparsing] Now cached as pyparsing.d38af69c1b0118c13745c94e0476ea22530e1bd258ce4a2dc9b2bb3714238687
0:15-07-04 10:40:56 [177/232/232] [pyparsing] Cleaned up /root/.cache/ybd/tmp/tmpW8f28s
0:15-07-04 10:40:56 [177/232/232] [pyparsing] Elapsed time 00:00:10
0:15-07-04 10:40:56 [177/232/232] [cmd2] Installing pyparsing.d38af69c1b0118c13745c94e0476ea22530e1bd258ce4a2dc9b2bb3714238687 
0:15-07-04 10:41:01 [178/232/232] [cmd2] Start build 
0:15-07-04 10:41:02 [178/232/232] [cmd2] Git checkout upstream:python-packages/cmd2-hg in /root/.cache/ybd/tmp/tmpUvhq9o/cmd2.build 
0:15-07-04 10:41:02 [178/232/232] [cmd2] Upstream version c0d606bd 0.6.7 (0.6.7 + 0 commits) 
0:15-07-04 10:41:02 [178/232/232] [cmd2] Logging build commands to /root/.cache/ybd/artifacts/cmd2.34880f0bd31c6a476193d25fc70d43556f9cbb3cc710ab1c93e5085b5a952f85.build-log.0 
0:15-07-04 10:41:02 [178/232/232] [cmd2] Running build-commands
0:15-07-04 10:41:02 [178/232/232] [cmd2] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['cmd2.build', 'cmd2.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:41:03 [178/232/232] [cmd2] Running install-commands
0:15-07-04 10:41:03 [178/232/232] [cmd2] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:41:04 [178/232/232] [cmd2] Running strip-commands
0:15-07-04 10:41:04 [178/232/232] [cmd2] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:41:05 [178/232/232] [cmd2] Creating cache artifact 
0:15-07-04 10:41:05 [178/232/232] [cmd2] Now cached as cmd2.34880f0bd31c6a476193d25fc70d43556f9cbb3cc710ab1c93e5085b5a952f85
0:15-07-04 10:41:07 [178/232/232] [cmd2] Cleaned up /root/.cache/ybd/tmp/tmpUvhq9o
0:15-07-04 10:41:07 [178/232/232] [cmd2] Elapsed time 00:00:21
0:15-07-04 10:41:07 [178/232/232] [openstack-clients] Installing cmd2.34880f0bd31c6a476193d25fc70d43556f9cbb3cc710ab1c93e5085b5a952f85 
0:15-07-04 10:41:07 [178/232/232] [python-heatclient] Starting assembly 
0:15-07-04 10:41:07 [178/232/232] [python-heatclient] Installing python-keystoneclient.6bb5b76e3298918985261fe908ebd605aefcace468334d64f5e23b0935d1bcaa 
0:15-07-04 10:41:12 [179/232/232] [python-heatclient] Start build 
0:15-07-04 10:41:13 [179/232/232] [python-heatclient] Git checkout upstream:openstack/python-heatclient in /root/.cache/ybd/tmp/tmpJURfoI/python-heatclient.build 
0:15-07-04 10:41:13 [179/232/232] [python-heatclient] Upstream version 6d528f00 0.4.0 (0.4.0 + 0 commits) 
0:15-07-04 10:41:13 [179/232/232] [python-heatclient] Logging build commands to /root/.cache/ybd/artifacts/python-heatclient.f9a6f969204ab5ec1eaa60d51e33dd9672de80a421110db25edccae259676a0c.build-log.0 
0:15-07-04 10:41:13 [179/232/232] [python-heatclient] Running build-commands
0:15-07-04 10:41:13 [179/232/232] [python-heatclient] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-heatclient.build', 'python-heatclient.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:41:15 [179/232/232] [python-heatclient] Running install-commands
0:15-07-04 10:41:15 [179/232/232] [python-heatclient] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:41:16 [179/232/232] [python-heatclient] Running strip-commands
0:15-07-04 10:41:16 [179/232/232] [python-heatclient] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:41:16 [179/232/232] [python-heatclient] Creating cache artifact 
0:15-07-04 10:41:17 [179/232/232] [python-heatclient] Now cached as python-heatclient.f9a6f969204ab5ec1eaa60d51e33dd9672de80a421110db25edccae259676a0c
0:15-07-04 10:41:19 [179/232/232] [python-heatclient] Cleaned up /root/.cache/ybd/tmp/tmpJURfoI
0:15-07-04 10:41:19 [179/232/232] [python-heatclient] Elapsed time 00:00:11
0:15-07-04 10:41:19 [179/232/232] [openstack-clients] Installing python-heatclient.f9a6f969204ab5ec1eaa60d51e33dd9672de80a421110db25edccae259676a0c 
0:15-07-04 10:41:19 [179/232/232] [os-client-config] Starting assembly 
0:15-07-04 10:41:19 [179/232/232] [os-client-config] Installing openstack-common.30164cbea78dfb628bd2893e866c77b7a9497848cd15fed0c86b33cad3677502 
0:15-07-04 10:41:24 [180/232/232] [os-client-config] Start build 
0:15-07-04 10:41:25 [180/232/232] [os-client-config] Git checkout upstream:openstack/os-client-config in /root/.cache/ybd/tmp/tmpkWwa2h/os-client-config.build 
0:15-07-04 10:41:25 [180/232/232] [os-client-config] Upstream version a0df6770 1.3.0 (1.3.0 + 0 commits) 
0:15-07-04 10:41:25 [180/232/232] [os-client-config] Logging build commands to /root/.cache/ybd/artifacts/os-client-config.7c5e69ba10b2b6fcad118a21ba8ec7408a6a26e961df1ef93ddec5c2890286ee.build-log.0 
0:15-07-04 10:41:25 [180/232/232] [os-client-config] Running build-commands
0:15-07-04 10:41:25 [180/232/232] [os-client-config] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['os-client-config.build', 'os-client-config.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:41:27 [180/232/232] [os-client-config] Running install-commands
0:15-07-04 10:41:27 [180/232/232] [os-client-config] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:41:28 [180/232/232] [os-client-config] Running strip-commands
0:15-07-04 10:41:28 [180/232/232] [os-client-config] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:41:28 [180/232/232] [os-client-config] Creating cache artifact 
0:15-07-04 10:41:29 [180/232/232] [os-client-config] Now cached as os-client-config.7c5e69ba10b2b6fcad118a21ba8ec7408a6a26e961df1ef93ddec5c2890286ee
0:15-07-04 10:41:31 [180/232/232] [os-client-config] Cleaned up /root/.cache/ybd/tmp/tmpkWwa2h
0:15-07-04 10:41:31 [180/232/232] [os-client-config] Elapsed time 00:00:11
0:15-07-04 10:41:31 [180/232/232] [openstack-clients] Installing os-client-config.7c5e69ba10b2b6fcad118a21ba8ec7408a6a26e961df1ef93ddec5c2890286ee 
0:15-07-04 10:41:31 [180/232/232] [cliff] Starting assembly 
0:15-07-04 10:41:31 [180/232/232] [cliff] Installing openstack-common.30164cbea78dfb628bd2893e866c77b7a9497848cd15fed0c86b33cad3677502 
0:15-07-04 10:41:36 [180/232/232] [cliff] Installing pyparsing.d38af69c1b0118c13745c94e0476ea22530e1bd258ce4a2dc9b2bb3714238687 
0:15-07-04 10:41:36 [180/232/232] [cliff] Installing cmd2.34880f0bd31c6a476193d25fc70d43556f9cbb3cc710ab1c93e5085b5a952f85 
0:15-07-04 10:41:36 [181/232/232] [cliff] Start build 
0:15-07-04 10:41:36 [181/232/232] [cliff] Git checkout upstream:openstack/cliff in /root/.cache/ybd/tmp/tmpHpfyic/cliff.build 
0:15-07-04 10:41:36 [181/232/232] [cliff] Upstream version b703ad32 1.10.1 (1.10.1 + 0 commits) 
0:15-07-04 10:41:36 [181/232/232] [cliff] Logging build commands to /root/.cache/ybd/artifacts/cliff.cfd57986120165043ca15df92851893f9b92518bb58607f1f78258031dd55e72.build-log.0 
0:15-07-04 10:41:36 [181/232/232] [cliff] Running build-commands
0:15-07-04 10:41:36 [181/232/232] [cliff] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['cliff.build', 'cliff.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:41:38 [181/232/232] [cliff] Running install-commands
0:15-07-04 10:41:38 [181/232/232] [cliff] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:41:39 [181/232/232] [cliff] Running strip-commands
0:15-07-04 10:41:39 [181/232/232] [cliff] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:41:39 [181/232/232] [cliff] Creating cache artifact 
0:15-07-04 10:41:39 [181/232/232] [cliff] Now cached as cliff.cfd57986120165043ca15df92851893f9b92518bb58607f1f78258031dd55e72
0:15-07-04 10:41:42 [181/232/232] [cliff] Cleaned up /root/.cache/ybd/tmp/tmpHpfyic
0:15-07-04 10:41:42 [181/232/232] [cliff] Elapsed time 00:00:10
0:15-07-04 10:41:42 [181/232/232] [openstack-clients] Installing cliff.cfd57986120165043ca15df92851893f9b92518bb58607f1f78258031dd55e72 
0:15-07-04 10:41:42 [181/232/232] [tablib] Starting assembly 
0:15-07-04 10:41:42 [181/232/232] [tablib] Installing openstack-common.30164cbea78dfb628bd2893e866c77b7a9497848cd15fed0c86b33cad3677502 
0:15-07-04 10:41:47 [182/232/232] [tablib] Start build 
0:15-07-04 10:41:47 [182/232/232] [tablib] Git checkout upstream:python-packages/tablib in /root/.cache/ybd/tmp/tmpyN6Slt/tablib.build 
0:15-07-04 10:41:47 [182/232/232] [tablib] Upstream version 1cc051f3 v0.10.0 (v0.10.0 + 0 commits) 
0:15-07-04 10:41:47 [182/232/232] [tablib] Logging build commands to /root/.cache/ybd/artifacts/tablib.9473a519efc458a85436fd798eabdd26cc1de48145f61e57fbc9181fd254ee37.build-log.0 
0:15-07-04 10:41:47 [182/232/232] [tablib] Running build-commands
0:15-07-04 10:41:47 [182/232/232] [tablib] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['tablib.build', 'tablib.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:41:51 [182/232/232] [tablib] Running install-commands
0:15-07-04 10:41:51 [182/232/232] [tablib] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:41:54 [182/232/232] [tablib] Running strip-commands
0:15-07-04 10:41:54 [182/232/232] [tablib] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:41:54 [182/232/232] [tablib] Creating cache artifact 
0:15-07-04 10:41:57 [182/232/232] [tablib] Now cached as tablib.9473a519efc458a85436fd798eabdd26cc1de48145f61e57fbc9181fd254ee37
0:15-07-04 10:42:00 [182/232/232] [tablib] Cleaned up /root/.cache/ybd/tmp/tmpyN6Slt
0:15-07-04 10:42:00 [182/232/232] [tablib] Elapsed time 00:00:17
0:15-07-04 10:42:00 [182/232/232] [openstack-clients] Installing tablib.9473a519efc458a85436fd798eabdd26cc1de48145f61e57fbc9181fd254ee37 
0:15-07-04 10:42:00 [182/232/232] [argparse] Starting assembly 
0:15-07-04 10:42:00 [182/232/232] [argparse] Installing openstack-common.30164cbea78dfb628bd2893e866c77b7a9497848cd15fed0c86b33cad3677502 
0:15-07-04 10:42:05 [183/232/232] [argparse] Start build 
0:15-07-04 10:42:05 [183/232/232] [argparse] Git checkout upstream:argparse in /root/.cache/ybd/tmp/tmpJKEHOy/argparse.build 
0:15-07-04 10:42:05 [183/232/232] [argparse] Upstream version ec94cd42 r130 (r130 + 0 commits) 
0:15-07-04 10:42:05 [183/232/232] [argparse] Logging build commands to /root/.cache/ybd/artifacts/argparse.f5a24e9afaa9a0eb11313545176c73cc9126e42247730a72b3466cadf9172d8c.build-log.0 
0:15-07-04 10:42:05 [183/232/232] [argparse] Running build-commands
0:15-07-04 10:42:05 [183/232/232] [argparse] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['argparse.build', 'argparse.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:42:07 [183/232/232] [argparse] Running install-commands
0:15-07-04 10:42:07 [183/232/232] [argparse] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:42:08 [183/232/232] [argparse] Running strip-commands
0:15-07-04 10:42:08 [183/232/232] [argparse] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:42:08 [183/232/232] [argparse] Creating cache artifact 
0:15-07-04 10:42:08 [183/232/232] [argparse] Now cached as argparse.f5a24e9afaa9a0eb11313545176c73cc9126e42247730a72b3466cadf9172d8c
0:15-07-04 10:42:10 [183/232/232] [argparse] Cleaned up /root/.cache/ybd/tmp/tmpJKEHOy
0:15-07-04 10:42:10 [183/232/232] [argparse] Elapsed time 00:00:10
0:15-07-04 10:42:10 [183/232/232] [openstack-clients] Installing argparse.f5a24e9afaa9a0eb11313545176c73cc9126e42247730a72b3466cadf9172d8c 
0:15-07-04 10:42:10 [183/232/232] [python-saharaclient] Starting assembly 
0:15-07-04 10:42:10 [183/232/232] [python-saharaclient] Installing python-keystoneclient.6bb5b76e3298918985261fe908ebd605aefcace468334d64f5e23b0935d1bcaa 
0:15-07-04 10:42:16 [184/232/232] [python-saharaclient] Start build 
0:15-07-04 10:42:16 [184/232/232] [python-saharaclient] Git checkout upstream:openstack/python-saharaclient in /root/.cache/ybd/tmp/tmpq0xUWm/python-saharaclient.build 
0:15-07-04 10:42:16 [184/232/232] [python-saharaclient] Upstream version 319ceb6a 0.8.0 (0.8.0 + 0 commits) 
0:15-07-04 10:42:16 [184/232/232] [python-saharaclient] Logging build commands to /root/.cache/ybd/artifacts/python-saharaclient.0c4c830fe12804539c228ed95953a730183d63d8e54f433590cddc2e5f2e0f73.build-log.0 
0:15-07-04 10:42:16 [184/232/232] [python-saharaclient] Running build-commands
0:15-07-04 10:42:16 [184/232/232] [python-saharaclient] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-saharaclient.build', 'python-saharaclient.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:42:18 [184/232/232] [python-saharaclient] Running install-commands
0:15-07-04 10:42:18 [184/232/232] [python-saharaclient] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:42:19 [184/232/232] [python-saharaclient] Running strip-commands
0:15-07-04 10:42:19 [184/232/232] [python-saharaclient] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:42:19 [184/232/232] [python-saharaclient] Creating cache artifact 
0:15-07-04 10:42:20 [184/232/232] [python-saharaclient] Now cached as python-saharaclient.0c4c830fe12804539c228ed95953a730183d63d8e54f433590cddc2e5f2e0f73
0:15-07-04 10:42:22 [184/232/232] [python-saharaclient] Cleaned up /root/.cache/ybd/tmp/tmpq0xUWm
0:15-07-04 10:42:22 [184/232/232] [python-saharaclient] Elapsed time 00:00:11
0:15-07-04 10:42:22 [184/232/232] [openstack-clients] Installing python-saharaclient.0c4c830fe12804539c228ed95953a730183d63d8e54f433590cddc2e5f2e0f73 
0:15-07-04 10:42:22 [184/232/232] [python-barbicanclient] Starting assembly 
0:15-07-04 10:42:22 [184/232/232] [python-barbicanclient] Installing python-keystoneclient.6bb5b76e3298918985261fe908ebd605aefcace468334d64f5e23b0935d1bcaa 
0:15-07-04 10:42:27 [184/232/232] [python-barbicanclient] Installing cliff.cfd57986120165043ca15df92851893f9b92518bb58607f1f78258031dd55e72 
0:15-07-04 10:42:27 [185/232/232] [python-barbicanclient] Start build 
0:15-07-04 10:42:28 [185/232/232] [python-barbicanclient] Git checkout upstream:openstack/python-barbicanclient in /root/.cache/ybd/tmp/tmpNnfQQo/python-barbicanclient.build 
0:15-07-04 10:42:28 [185/232/232] [python-barbicanclient] Upstream version 29193668 3.0.3 (3.0.3 + 0 commits) 
0:15-07-04 10:42:28 [185/232/232] [python-barbicanclient] Logging build commands to /root/.cache/ybd/artifacts/python-barbicanclient.fcbe3218cf46af229a2527b492a67ad1f2a2872ec0c1c9be0f0f7ea289ab3e06.build-log.0 
0:15-07-04 10:42:28 [185/232/232] [python-barbicanclient] Running build-commands
0:15-07-04 10:42:28 [185/232/232] [python-barbicanclient] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-barbicanclient.build', 'python-barbicanclient.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:42:30 [185/232/232] [python-barbicanclient] Running install-commands
0:15-07-04 10:42:30 [185/232/232] [python-barbicanclient] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:42:31 [185/232/232] [python-barbicanclient] Running strip-commands
0:15-07-04 10:42:31 [185/232/232] [python-barbicanclient] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:42:31 [185/232/232] [python-barbicanclient] Creating cache artifact 
0:15-07-04 10:42:31 [185/232/232] [python-barbicanclient] Now cached as python-barbicanclient.fcbe3218cf46af229a2527b492a67ad1f2a2872ec0c1c9be0f0f7ea289ab3e06
0:15-07-04 10:42:34 [185/232/232] [python-barbicanclient] Cleaned up /root/.cache/ybd/tmp/tmpNnfQQo
0:15-07-04 10:42:34 [185/232/232] [python-barbicanclient] Elapsed time 00:00:11
0:15-07-04 10:42:34 [185/232/232] [openstack-clients] Installing python-barbicanclient.fcbe3218cf46af229a2527b492a67ad1f2a2872ec0c1c9be0f0f7ea289ab3e06 
0:15-07-04 10:42:34 [185/232/232] [python-neutronclient] Starting assembly 
0:15-07-04 10:42:34 [185/232/232] [python-neutronclient] Installing openstack-common.30164cbea78dfb628bd2893e866c77b7a9497848cd15fed0c86b33cad3677502 
0:15-07-04 10:42:39 [185/232/232] [python-neutronclient] Installing python-keystoneclient.6bb5b76e3298918985261fe908ebd605aefcace468334d64f5e23b0935d1bcaa 
0:15-07-04 10:42:39 [185/232/232] [python-neutronclient] Installing cliff.cfd57986120165043ca15df92851893f9b92518bb58607f1f78258031dd55e72 
0:15-07-04 10:42:39 [186/232/232] [python-neutronclient] Start build 
0:15-07-04 10:42:39 [186/232/232] [python-neutronclient] Git checkout upstream:openstack/python-neutronclient in /root/.cache/ybd/tmp/tmpvUSbm9/python-neutronclient.build 
0:15-07-04 10:42:39 [186/232/232] [python-neutronclient] Upstream version aa1215a5 2.4.0 (2.4.0 + 0 commits) 
0:15-07-04 10:42:39 [186/232/232] [python-neutronclient] Logging build commands to /root/.cache/ybd/artifacts/python-neutronclient.0c74432ca56fa957197f19157a2b580fc1d2df224766fc24efa30abae28dceaa.build-log.0 
0:15-07-04 10:42:39 [186/232/232] [python-neutronclient] Running build-commands
0:15-07-04 10:42:39 [186/232/232] [python-neutronclient] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-neutronclient.build', 'python-neutronclient.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:42:42 [186/232/232] [python-neutronclient] Running install-commands
0:15-07-04 10:42:42 [186/232/232] [python-neutronclient] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:42:43 [186/232/232] [python-neutronclient] Running strip-commands
0:15-07-04 10:42:43 [186/232/232] [python-neutronclient] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:42:43 [186/232/232] [python-neutronclient] Creating cache artifact 
0:15-07-04 10:42:44 [186/232/232] [python-neutronclient] Now cached as python-neutronclient.0c74432ca56fa957197f19157a2b580fc1d2df224766fc24efa30abae28dceaa
0:15-07-04 10:42:46 [186/232/232] [python-neutronclient] Cleaned up /root/.cache/ybd/tmp/tmpvUSbm9
0:15-07-04 10:42:46 [186/232/232] [python-neutronclient] Elapsed time 00:00:12
0:15-07-04 10:42:46 [186/232/232] [openstack-clients] Installing python-neutronclient.0c74432ca56fa957197f19157a2b580fc1d2df224766fc24efa30abae28dceaa 
0:15-07-04 10:42:46 [186/232/232] [python-swiftclient] Starting assembly 
0:15-07-04 10:42:47 [186/232/232] [python-swiftclient] Installing openstack-common.30164cbea78dfb628bd2893e866c77b7a9497848cd15fed0c86b33cad3677502 
0:15-07-04 10:42:52 [187/232/232] [python-swiftclient] Start build 
0:15-07-04 10:42:52 [187/232/232] [python-swiftclient] Git checkout upstream:openstack/python-swiftclient in /root/.cache/ybd/tmp/tmpcZWNX0/python-swiftclient.build 
0:15-07-04 10:42:52 [187/232/232] [python-swiftclient] Upstream version bb4d2ab5 2.3.1 (2.3.1 + 0 commits) 
0:15-07-04 10:42:52 [187/232/232] [python-swiftclient] Logging build commands to /root/.cache/ybd/artifacts/python-swiftclient.c8e2b5051b6f4b1818f620bc9dcb3537395c8d3ec2434ff6d96b7ad637b5e8e6.build-log.0 
0:15-07-04 10:42:52 [187/232/232] [python-swiftclient] Running build-commands
0:15-07-04 10:42:52 [187/232/232] [python-swiftclient] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-swiftclient.build', 'python-swiftclient.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:42:54 [187/232/232] [python-swiftclient] Running install-commands
0:15-07-04 10:42:54 [187/232/232] [python-swiftclient] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:42:55 [187/232/232] [python-swiftclient] Running strip-commands
0:15-07-04 10:42:55 [187/232/232] [python-swiftclient] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:42:55 [187/232/232] [python-swiftclient] Creating cache artifact 
0:15-07-04 10:42:56 [187/232/232] [python-swiftclient] Now cached as python-swiftclient.c8e2b5051b6f4b1818f620bc9dcb3537395c8d3ec2434ff6d96b7ad637b5e8e6
0:15-07-04 10:42:58 [187/232/232] [python-swiftclient] Cleaned up /root/.cache/ybd/tmp/tmpcZWNX0
0:15-07-04 10:42:58 [187/232/232] [python-swiftclient] Elapsed time 00:00:11
0:15-07-04 10:42:58 [187/232/232] [openstack-clients] Installing python-swiftclient.c8e2b5051b6f4b1818f620bc9dcb3537395c8d3ec2434ff6d96b7ad637b5e8e6 
0:15-07-04 10:42:58 [187/232/232] [python-troveclient] Starting assembly 
0:15-07-04 10:42:58 [187/232/232] [python-troveclient] Installing openstack-common.30164cbea78dfb628bd2893e866c77b7a9497848cd15fed0c86b33cad3677502 
0:15-07-04 10:43:03 [188/232/232] [python-troveclient] Start build 
0:15-07-04 10:43:03 [188/232/232] [python-troveclient] Git checkout upstream:openstack/python-troveclient in /root/.cache/ybd/tmp/tmpD6nZkQ/python-troveclient.build 
0:15-07-04 10:43:03 [188/232/232] [python-troveclient] Upstream version e010a919 1.0.7 (1.0.7 + 0 commits) 
0:15-07-04 10:43:03 [188/232/232] [python-troveclient] Logging build commands to /root/.cache/ybd/artifacts/python-troveclient.d8f591435aa550d40d891606a0259fbb9334f9216c6e8860064b6e5eb3b4a04a.build-log.0 
0:15-07-04 10:43:03 [188/232/232] [python-troveclient] Running build-commands
0:15-07-04 10:43:03 [188/232/232] [python-troveclient] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-troveclient.build', 'python-troveclient.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:43:05 [188/232/232] [python-troveclient] Running install-commands
0:15-07-04 10:43:05 [188/232/232] [python-troveclient] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:43:07 [188/232/232] [python-troveclient] Running strip-commands
0:15-07-04 10:43:07 [188/232/232] [python-troveclient] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:43:07 [188/232/232] [python-troveclient] Creating cache artifact 
0:15-07-04 10:43:07 [188/232/232] [python-troveclient] Now cached as python-troveclient.d8f591435aa550d40d891606a0259fbb9334f9216c6e8860064b6e5eb3b4a04a
0:15-07-04 10:43:10 [188/232/232] [python-troveclient] Cleaned up /root/.cache/ybd/tmp/tmpD6nZkQ
0:15-07-04 10:43:10 [188/232/232] [python-troveclient] Elapsed time 00:00:11
0:15-07-04 10:43:10 [188/232/232] [openstack-clients] Installing python-troveclient.d8f591435aa550d40d891606a0259fbb9334f9216c6e8860064b6e5eb3b4a04a 
0:15-07-04 10:43:10 [188/232/232] [python-designateclient] Starting assembly 
0:15-07-04 10:43:10 [188/232/232] [python-designateclient] Installing cliff.cfd57986120165043ca15df92851893f9b92518bb58607f1f78258031dd55e72 
0:15-07-04 10:43:15 [188/232/232] [python-designateclient] Installing python-keystoneclient.6bb5b76e3298918985261fe908ebd605aefcace468334d64f5e23b0935d1bcaa 
0:15-07-04 10:43:15 [189/232/232] [python-designateclient] Start build 
0:15-07-04 10:43:15 [189/232/232] [python-designateclient] Git checkout upstream:openstack/python-designateclient in /root/.cache/ybd/tmp/tmpEf2Xix/python-designateclient.build 
0:15-07-04 10:43:15 [189/232/232] [python-designateclient] Upstream version a900b41e 1.1.0 (1.1.0 + 0 commits) 
0:15-07-04 10:43:15 [189/232/232] [python-designateclient] Logging build commands to /root/.cache/ybd/artifacts/python-designateclient.c07cff92e403bd29cefc6b89b5e474621d011169afaa8355a37faea69fa8b566.build-log.0 
0:15-07-04 10:43:15 [189/232/232] [python-designateclient] Running build-commands
0:15-07-04 10:43:15 [189/232/232] [python-designateclient] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-designateclient.build', 'python-designateclient.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:43:17 [189/232/232] [python-designateclient] Running install-commands
0:15-07-04 10:43:17 [189/232/232] [python-designateclient] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:43:18 [189/232/232] [python-designateclient] Running strip-commands
0:15-07-04 10:43:18 [189/232/232] [python-designateclient] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:43:19 [189/232/232] [python-designateclient] Creating cache artifact 
0:15-07-04 10:43:19 [189/232/232] [python-designateclient] Now cached as python-designateclient.c07cff92e403bd29cefc6b89b5e474621d011169afaa8355a37faea69fa8b566
0:15-07-04 10:43:21 [189/232/232] [python-designateclient] Cleaned up /root/.cache/ybd/tmp/tmpEf2Xix
0:15-07-04 10:43:21 [189/232/232] [python-designateclient] Elapsed time 00:00:11
0:15-07-04 10:43:21 [189/232/232] [openstack-clients] Installing python-designateclient.c07cff92e403bd29cefc6b89b5e474621d011169afaa8355a37faea69fa8b566 
0:15-07-04 10:43:21 [189/232/232] [python-openstackclient] Starting assembly 
0:15-07-04 10:43:21 [189/232/232] [python-openstackclient] Installing openstack-common.30164cbea78dfb628bd2893e866c77b7a9497848cd15fed0c86b33cad3677502 
0:15-07-04 10:43:26 [190/232/232] [python-openstackclient] Start build 
0:15-07-04 10:43:27 [190/232/232] [python-openstackclient] Git checkout upstream:openstack/python-openstackclient in /root/.cache/ybd/tmp/tmpxoDib4/python-openstackclient.build 
0:15-07-04 10:43:27 [190/232/232] [python-openstackclient] Upstream version 28f65e66 1.2.0 (1.2.0 + 0 commits) 
0:15-07-04 10:43:27 [190/232/232] [python-openstackclient] Logging build commands to /root/.cache/ybd/artifacts/python-openstackclient.996f7770f98347e6cde0706f9b975147db4f0df2bc2ce783230a98ff92c00050.build-log.0 
0:15-07-04 10:43:27 [190/232/232] [python-openstackclient] Running build-commands
0:15-07-04 10:43:27 [190/232/232] [python-openstackclient] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-openstackclient.build', 'python-openstackclient.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:43:29 [190/232/232] [python-openstackclient] Running install-commands
0:15-07-04 10:43:29 [190/232/232] [python-openstackclient] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:43:31 [190/232/232] [python-openstackclient] Running strip-commands
0:15-07-04 10:43:31 [190/232/232] [python-openstackclient] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:43:32 [190/232/232] [python-openstackclient] Creating cache artifact 
0:15-07-04 10:43:33 [190/232/232] [python-openstackclient] Now cached as python-openstackclient.996f7770f98347e6cde0706f9b975147db4f0df2bc2ce783230a98ff92c00050
0:15-07-04 10:43:35 [190/232/232] [python-openstackclient] Cleaned up /root/.cache/ybd/tmp/tmpxoDib4
0:15-07-04 10:43:35 [190/232/232] [python-openstackclient] Elapsed time 00:00:13
0:15-07-04 10:43:35 [190/232/232] [openstack-clients] Installing python-openstackclient.996f7770f98347e6cde0706f9b975147db4f0df2bc2ce783230a98ff92c00050 
0:15-07-04 10:43:35 [190/232/232] [python-ironicclient] Starting assembly 
0:15-07-04 10:43:35 [190/232/232] [python-ironicclient] Installing openstack-common.30164cbea78dfb628bd2893e866c77b7a9497848cd15fed0c86b33cad3677502 
0:15-07-04 10:43:40 [191/232/232] [python-ironicclient] Start build 
0:15-07-04 10:43:41 [191/232/232] [python-ironicclient] Git checkout upstream:openstack/python-ironicclient in /root/.cache/ybd/tmp/tmp59H1E9/python-ironicclient.build 
0:15-07-04 10:43:41 [191/232/232] [python-ironicclient] Upstream version 4390a216 0.4.1 (0.4.1 + 0 commits) 
0:15-07-04 10:43:41 [191/232/232] [python-ironicclient] Logging build commands to /root/.cache/ybd/artifacts/python-ironicclient.431e513bdcf022de4af308bcad3c12e02faef379879284aa6139e01adc657d8b.build-log.0 
0:15-07-04 10:43:41 [191/232/232] [python-ironicclient] Running build-commands
0:15-07-04 10:43:41 [191/232/232] [python-ironicclient] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-ironicclient.build', 'python-ironicclient.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:43:43 [191/232/232] [python-ironicclient] Running install-commands
0:15-07-04 10:43:43 [191/232/232] [python-ironicclient] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:43:44 [191/232/232] [python-ironicclient] Running strip-commands
0:15-07-04 10:43:44 [191/232/232] [python-ironicclient] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:43:44 [191/232/232] [python-ironicclient] Creating cache artifact 
0:15-07-04 10:43:45 [191/232/232] [python-ironicclient] Now cached as python-ironicclient.431e513bdcf022de4af308bcad3c12e02faef379879284aa6139e01adc657d8b
0:15-07-04 10:43:47 [191/232/232] [python-ironicclient] Cleaned up /root/.cache/ybd/tmp/tmp59H1E9
0:15-07-04 10:43:47 [191/232/232] [python-ironicclient] Elapsed time 00:00:11
0:15-07-04 10:43:47 [191/232/232] [openstack-clients] Installing python-ironicclient.431e513bdcf022de4af308bcad3c12e02faef379879284aa6139e01adc657d8b 
0:15-07-04 10:43:47 [191/232/232] [python-novaclient] Starting assembly 
0:15-07-04 10:43:47 [191/232/232] [python-novaclient] Installing openstack-common.30164cbea78dfb628bd2893e866c77b7a9497848cd15fed0c86b33cad3677502 
0:15-07-04 10:43:52 [191/232/232] [python-novaclient] Installing python-keystoneclient.6bb5b76e3298918985261fe908ebd605aefcace468334d64f5e23b0935d1bcaa 
0:15-07-04 10:43:52 [192/232/232] [python-novaclient] Start build 
0:15-07-04 10:43:52 [192/232/232] [python-novaclient] Git checkout upstream:openstack/python-novaclient in /root/.cache/ybd/tmp/tmp5OY8cf/python-novaclient.build 
0:15-07-04 10:43:52 [192/232/232] [python-novaclient] Upstream version e0f50729 2.23.0 (2.23.0 + 0 commits) 
0:15-07-04 10:43:52 [192/232/232] [python-novaclient] Logging build commands to /root/.cache/ybd/artifacts/python-novaclient.68d38613c70d0870b3ec6d32b79ee9e3fe8026588764e786c531c4ddfc52d12a.build-log.0 
0:15-07-04 10:43:52 [192/232/232] [python-novaclient] Running build-commands
0:15-07-04 10:43:52 [192/232/232] [python-novaclient] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-novaclient.build', 'python-novaclient.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:43:55 [192/232/232] [python-novaclient] Running install-commands
0:15-07-04 10:43:55 [192/232/232] [python-novaclient] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:43:56 [192/232/232] [python-novaclient] Running strip-commands
0:15-07-04 10:43:56 [192/232/232] [python-novaclient] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:43:57 [192/232/232] [python-novaclient] Creating cache artifact 
0:15-07-04 10:43:58 [192/232/232] [python-novaclient] Now cached as python-novaclient.68d38613c70d0870b3ec6d32b79ee9e3fe8026588764e786c531c4ddfc52d12a
0:15-07-04 10:44:00 [192/232/232] [python-novaclient] Cleaned up /root/.cache/ybd/tmp/tmp5OY8cf
0:15-07-04 10:44:00 [192/232/232] [python-novaclient] Elapsed time 00:00:13
0:15-07-04 10:44:00 [192/232/232] [openstack-clients] Installing python-novaclient.68d38613c70d0870b3ec6d32b79ee9e3fe8026588764e786c531c4ddfc52d12a 
0:15-07-04 10:44:00 [192/232/232] [python-ceilometerclient] Starting assembly 
0:15-07-04 10:44:00 [192/232/232] [python-ceilometerclient] Installing openstack-common.30164cbea78dfb628bd2893e866c77b7a9497848cd15fed0c86b33cad3677502 
0:15-07-04 10:44:06 [192/232/232] [python-ceilometerclient] Installing python-keystoneclient.6bb5b76e3298918985261fe908ebd605aefcace468334d64f5e23b0935d1bcaa 
0:15-07-04 10:44:06 [193/232/232] [python-ceilometerclient] Start build 
0:15-07-04 10:44:06 [193/232/232] [python-ceilometerclient] Git checkout upstream:openstack/python-ceilometerclient in /root/.cache/ybd/tmp/tmp25klgk/python-ceilometerclient.build 
0:15-07-04 10:44:06 [193/232/232] [python-ceilometerclient] Upstream version 127aadfd 1.0.14 (1.0.14 + 0 commits) 
0:15-07-04 10:44:06 [193/232/232] [python-ceilometerclient] Logging build commands to /root/.cache/ybd/artifacts/python-ceilometerclient.4312e5e46c81fc8cc450a59f80d9b29bcedd6dd077d2b57732df33b456795528.build-log.0 
0:15-07-04 10:44:06 [193/232/232] [python-ceilometerclient] Running build-commands
0:15-07-04 10:44:06 [193/232/232] [python-ceilometerclient] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-ceilometerclient.build', 'python-ceilometerclient.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:44:08 [193/232/232] [python-ceilometerclient] Running install-commands
0:15-07-04 10:44:08 [193/232/232] [python-ceilometerclient] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:44:09 [193/232/232] [python-ceilometerclient] Running strip-commands
0:15-07-04 10:44:09 [193/232/232] [python-ceilometerclient] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:44:10 [193/232/232] [python-ceilometerclient] Creating cache artifact 
0:15-07-04 10:44:10 [193/232/232] [python-ceilometerclient] Now cached as python-ceilometerclient.4312e5e46c81fc8cc450a59f80d9b29bcedd6dd077d2b57732df33b456795528
0:15-07-04 10:44:12 [193/232/232] [python-ceilometerclient] Cleaned up /root/.cache/ybd/tmp/tmp25klgk
0:15-07-04 10:44:12 [193/232/232] [python-ceilometerclient] Elapsed time 00:00:11
0:15-07-04 10:44:12 [193/232/232] [openstack-clients] Installing python-ceilometerclient.4312e5e46c81fc8cc450a59f80d9b29bcedd6dd077d2b57732df33b456795528 
0:15-07-04 10:44:12 [194/232/232] [openstack-clients] Start build 
0:15-07-04 10:44:13 [194/232/232] [openstack-clients] Logging build commands to /root/.cache/ybd/artifacts/openstack-clients.7fb649e915d927f8b8f6c1e424d2f3d5fde5a0860357f6ef7397df3204cf7ecd.build-log.0 
0:15-07-04 10:44:13 [194/232/232] [openstack-clients] Running strip-commands
0:15-07-04 10:44:13 [194/232/232] [openstack-clients] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
WARNING: Unable to set filesystem_writable_paths=['openstack-clients.build', 'openstack-clients.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:44:13 [194/232/232] [openstack-clients] Creating cache artifact 
0:15-07-04 10:44:13 [194/232/232] [openstack-clients] Now cached as openstack-clients.7fb649e915d927f8b8f6c1e424d2f3d5fde5a0860357f6ef7397df3204cf7ecd
0:15-07-04 10:44:15 [194/232/232] [openstack-clients] Cleaned up /root/.cache/ybd/tmp/tmpZlUtnT
0:15-07-04 10:44:15 [194/232/232] [openstack-clients] Elapsed time 00:04:44
0:15-07-04 10:44:15 [194/232/232] [build-system-armv8l64] Installing openstack-clients.7fb649e915d927f8b8f6c1e424d2f3d5fde5a0860357f6ef7397df3204cf7ecd 
0:15-07-04 10:44:16 [194/232/232] [ansible] Starting assembly 
0:15-07-04 10:44:16 [194/232/232] [ansible] Starting assembly 
0:15-07-04 10:44:16 [194/232/232] [ansible] Installing python-common.c21fc779cc7d2132ae5d2920abd7ed81d8c3024355a551b0b6208fad458a3e3c 
0:15-07-04 10:44:20 [195/232/232] [ansible] Start build 
0:15-07-04 10:44:20 [195/232/232] [ansible] Git checkout upstream:ansible in /root/.cache/ybd/tmp/tmpioCrd7/ansible.build 
0:15-07-04 10:44:20 [195/232/232] [ansible] Upstream version 0a712454 v1.8.4-1-g0a71245 (v1.8.4 + 1 commits) 
0:15-07-04 10:44:20 [195/232/232] [ansible] Git submodules 
0:15-07-04 10:44:21 [195/232/232] [ansible] Git checkout upstream:ansible-modules-core.git in /root/.cache/ybd/tmp/tmpioCrd7/ansible.build/lib/ansible/modules/core 
0:15-07-04 10:44:21 [195/232/232] [ansible] Upstream version f22df783 (No tag found) 
0:15-07-04 10:44:21 [195/232/232] [ansible] Git checkout upstream:ansible-modules-extras.git in /root/.cache/ybd/tmp/tmpioCrd7/ansible.build/lib/ansible/modules/extras 
0:15-07-04 10:44:21 [195/232/232] [ansible] Upstream version 23190986 (No tag found) 
0:15-07-04 10:44:21 [195/232/232] [ansible] Git checkout upstream:ansible-modules-core.git in /root/.cache/ybd/tmp/tmpioCrd7/ansible.build/v2/ansible/modules/core 
0:15-07-04 10:44:21 [195/232/232] [ansible] Upstream version cb69744b (No tag found) 
0:15-07-04 10:44:21 [195/232/232] [ansible] Git checkout upstream:ansible-modules-extras.git in /root/.cache/ybd/tmp/tmpioCrd7/ansible.build/v2/ansible/modules/extras 
0:15-07-04 10:44:21 [195/232/232] [ansible] Upstream version 8a4f07ee (No tag found) 
0:15-07-04 10:44:21 [195/232/232] [ansible] Logging build commands to /root/.cache/ybd/artifacts/ansible.3ddcfe487123812fb3a0a44db2d71798a2f1c4812b274d58f3f09f34455c807d.build-log.0 
0:15-07-04 10:44:21 [195/232/232] [ansible] Running build-commands
0:15-07-04 10:44:21 [195/232/232] [ansible] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['ansible.build', 'ansible.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:44:23 [195/232/232] [ansible] Running install-commands
0:15-07-04 10:44:23 [195/232/232] [ansible] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 10:44:27 [195/232/232] [ansible] Running post-install-commands
0:15-07-04 10:44:27 [195/232/232] [ansible] Running command:
install -D -m644 /proc/self/fd/0 "$DESTDIR/etc/ansible/ansible.cfg" <<EOF
[defaults]
log_path=/var/log/ansible
EOF
 
0:15-07-04 10:44:28 [195/232/232] [ansible] Running strip-commands
0:15-07-04 10:44:28 [195/232/232] [ansible] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:44:28 [195/232/232] [ansible] Creating cache artifact 
0:15-07-04 10:44:31 [195/232/232] [ansible] Now cached as ansible.3ddcfe487123812fb3a0a44db2d71798a2f1c4812b274d58f3f09f34455c807d
0:15-07-04 10:44:33 [195/232/232] [ansible] Cleaned up /root/.cache/ybd/tmp/tmpioCrd7
0:15-07-04 10:44:33 [195/232/232] [ansible] Elapsed time 00:00:17
0:15-07-04 10:44:33 [195/232/232] [ansible] Installing ansible.3ddcfe487123812fb3a0a44db2d71798a2f1c4812b274d58f3f09f34455c807d 
0:15-07-04 10:44:38 [195/232/232] [openstack-ansible-modules] Starting assembly 
0:15-07-04 10:44:38 [195/232/232] [openstack-ansible-modules] Installing python-common.c21fc779cc7d2132ae5d2920abd7ed81d8c3024355a551b0b6208fad458a3e3c 
0:15-07-04 10:44:42 [196/232/232] [openstack-ansible-modules] Start build 
0:15-07-04 10:44:42 [196/232/232] [openstack-ansible-modules] Git checkout upstream:openstack/openstack-ansible-modules in /root/.cache/ybd/tmp/tmpnLuSli/openstack-ansible-modules.build 
0:15-07-04 10:44:42 [196/232/232] [openstack-ansible-modules] Upstream version 451dcdea (No tag found) 
0:15-07-04 10:44:42 [196/232/232] [openstack-ansible-modules] Logging build commands to /root/.cache/ybd/artifacts/openstack-ansible-modules.cf7805d8d98589dfd1dbe00aeb8f3b90a7e62be24ddc1c5aeac99a0915c06d1a.build-log.0 
0:15-07-04 10:44:42 [196/232/232] [openstack-ansible-modules] Running install-commands
0:15-07-04 10:44:42 [196/232/232] [openstack-ansible-modules] Running command:
mkdir -p "$DESTDIR$PREFIX"/share/ansible/ansible-openstack-modules 
WARNING: Unable to set filesystem_writable_paths=['openstack-ansible-modules.build', 'openstack-ansible-modules.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:44:42 [196/232/232] [openstack-ansible-modules] Running command:
cp -r * "$DESTDIR$PREFIX"/share/ansible/ansible-openstack-modules 
0:15-07-04 10:44:43 [196/232/232] [openstack-ansible-modules] Running strip-commands
0:15-07-04 10:44:43 [196/232/232] [openstack-ansible-modules] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:44:43 [196/232/232] [openstack-ansible-modules] Creating cache artifact 
0:15-07-04 10:44:43 [196/232/232] [openstack-ansible-modules] Now cached as openstack-ansible-modules.cf7805d8d98589dfd1dbe00aeb8f3b90a7e62be24ddc1c5aeac99a0915c06d1a
0:15-07-04 10:44:45 [196/232/232] [openstack-ansible-modules] Cleaned up /root/.cache/ybd/tmp/tmpnLuSli
0:15-07-04 10:44:45 [196/232/232] [openstack-ansible-modules] Elapsed time 00:00:07
0:15-07-04 10:44:45 [196/232/232] [ansible] Installing openstack-ansible-modules.cf7805d8d98589dfd1dbe00aeb8f3b90a7e62be24ddc1c5aeac99a0915c06d1a 
0:15-07-04 10:44:45 [197/232/232] [ansible] Start build 
0:15-07-04 10:44:45 [197/232/232] [ansible] Logging build commands to /root/.cache/ybd/artifacts/ansible.febe4ccce3d0db5c539905cc0599eb477c066b95dd7d0fce8736e7027085e2cf.build-log.0 
0:15-07-04 10:44:45 [197/232/232] [ansible] Running strip-commands
0:15-07-04 10:44:45 [197/232/232] [ansible] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:44:45 [197/232/232] [ansible] Creating cache artifact 
0:15-07-04 10:44:45 [197/232/232] [ansible] Now cached as ansible.febe4ccce3d0db5c539905cc0599eb477c066b95dd7d0fce8736e7027085e2cf
0:15-07-04 10:44:47 [197/232/232] [ansible] Cleaned up /root/.cache/ybd/tmp/tmp2PjBXQ
0:15-07-04 10:44:47 [197/232/232] [ansible] Elapsed time 00:00:31
0:15-07-04 10:44:47 [197/232/232] [build-system-armv8l64] Installing ansible.febe4ccce3d0db5c539905cc0599eb477c066b95dd7d0fce8736e7027085e2cf 
0:15-07-04 10:44:47 [197/232/232] [nfs] Starting assembly 
0:15-07-04 10:44:47 [197/232/232] [rpcbind] Starting assembly 
0:15-07-04 10:44:47 [197/232/232] [ti-rpc] Starting assembly 
0:15-07-04 10:44:47 [197/232/232] [ti-rpc] Installing foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360 
0:15-07-04 10:44:52 [198/232/232] [ti-rpc] Start build 
0:15-07-04 10:44:52 [198/232/232] [ti-rpc] Git checkout upstream:ti-rpc in /root/.cache/ybd/tmp/tmpryPWHZ/ti-rpc.build 
0:15-07-04 10:44:52 [198/232/232] [ti-rpc] Upstream version c5a7a190 libtirpc-0-2-3-rc4-5-gc5a7a19 (libtirpc-0-2-3-rc4 + 5 commits) 
0:15-07-04 10:44:52 [198/232/232] [ti-rpc] Logging build commands to /root/.cache/ybd/artifacts/ti-rpc.cc5664bb66a82802ff7f433182d98734c9833ebec66b9094bfd3a49e61435b67.build-log.0 
0:15-07-04 10:44:52 [198/232/232] [ti-rpc] Running configure-commands
0:15-07-04 10:44:52 [198/232/232] [ti-rpc] Running command:
NOCONFIGURE=1 ./autogen.sh 
WARNING: Unable to set filesystem_writable_paths=['ti-rpc.build', 'ti-rpc.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:45:07 [198/232/232] [ti-rpc] Running command:
./configure --prefix="$PREFIX" --sysconfdir=/etc 
0:15-07-04 10:45:14 [198/232/232] [ti-rpc] Running build-commands
0:15-07-04 10:45:14 [198/232/232] [ti-rpc] Running command:
make 
0:15-07-04 10:45:18 [198/232/232] [ti-rpc] Running install-commands
0:15-07-04 10:45:18 [198/232/232] [ti-rpc] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:45:19 [198/232/232] [ti-rpc] Running strip-commands
0:15-07-04 10:45:19 [198/232/232] [ti-rpc] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:45:19 [198/232/232] [ti-rpc] Creating cache artifact 
0:15-07-04 10:45:22 [198/232/232] [ti-rpc] Now cached as ti-rpc.cc5664bb66a82802ff7f433182d98734c9833ebec66b9094bfd3a49e61435b67
0:15-07-04 10:45:24 [198/232/232] [ti-rpc] Cleaned up /root/.cache/ybd/tmp/tmpryPWHZ
0:15-07-04 10:45:24 [198/232/232] [ti-rpc] Elapsed time 00:00:36
0:15-07-04 10:45:24 [198/232/232] [rpcbind] Installing ti-rpc.cc5664bb66a82802ff7f433182d98734c9833ebec66b9094bfd3a49e61435b67 
0:15-07-04 10:45:28 [199/232/232] [rpcbind] Start build 
0:15-07-04 10:45:29 [199/232/232] [rpcbind] Git checkout upstream:rpcbind in /root/.cache/ybd/tmp/tmpndhPy9/rpcbind.build 
0:15-07-04 10:45:29 [199/232/232] [rpcbind] Upstream version aa3ac0d8 rpcbind-0_2_1-rc4-3-gaa3ac0d (rpcbind-0_2_1-rc4 + 3 commits) 
0:15-07-04 10:45:29 [199/232/232] [rpcbind] Logging build commands to /root/.cache/ybd/artifacts/rpcbind.37783f8df483d35c76b17f5a7970a48a4bdc019a2e269e8bc6b2e2928f893c69.build-log.0 
0:15-07-04 10:45:29 [199/232/232] [rpcbind] Running configure-commands
0:15-07-04 10:45:29 [199/232/232] [rpcbind] Running command:
NOCONFIGURE=1 ./autogen.sh 
WARNING: Unable to set filesystem_writable_paths=['rpcbind.build', 'rpcbind.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:45:32 [199/232/232] [rpcbind] Running command:
./configure --prefix="$PREFIX" --with-rpcuser=nobody --enable-warmstarts 
0:15-07-04 10:45:34 [199/232/232] [rpcbind] Running build-commands
0:15-07-04 10:45:34 [199/232/232] [rpcbind] Running command:
make 
0:15-07-04 10:45:36 [199/232/232] [rpcbind] Running install-commands
0:15-07-04 10:45:36 [199/232/232] [rpcbind] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:45:36 [199/232/232] [rpcbind] Running command:
mkdir -p "$DESTDIR"/lib/systemd/system 
0:15-07-04 10:45:37 [199/232/232] [rpcbind] Running command:
install -m644 rpcbind.service "$DESTDIR"/lib/systemd/system 
0:15-07-04 10:45:37 [199/232/232] [rpcbind] Running command:
install -m644 rpcbind.socket "$DESTDIR"/lib/systemd/system 
0:15-07-04 10:45:37 [199/232/232] [rpcbind] Running strip-commands
0:15-07-04 10:45:37 [199/232/232] [rpcbind] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:45:38 [199/232/232] [rpcbind] Creating cache artifact 
0:15-07-04 10:45:38 [199/232/232] [rpcbind] Now cached as rpcbind.37783f8df483d35c76b17f5a7970a48a4bdc019a2e269e8bc6b2e2928f893c69
0:15-07-04 10:45:40 [199/232/232] [rpcbind] Cleaned up /root/.cache/ybd/tmp/tmpndhPy9
0:15-07-04 10:45:40 [199/232/232] [rpcbind] Elapsed time 00:00:52
0:15-07-04 10:45:40 [199/232/232] [nfs] Installing rpcbind.37783f8df483d35c76b17f5a7970a48a4bdc019a2e269e8bc6b2e2928f893c69 
0:15-07-04 10:45:44 [199/232/232] [libevent] Starting assembly 
0:15-07-04 10:45:44 [199/232/232] [libevent] Installing foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360 
0:15-07-04 10:45:48 [200/232/232] [libevent] Start build 
0:15-07-04 10:45:49 [200/232/232] [libevent] Git checkout upstream:libevent in /root/.cache/ybd/tmp/tmpgfB7xQ/libevent.build 
0:15-07-04 10:45:49 [200/232/232] [libevent] Upstream version 0b49ae34 release-2.1.5-beta (release-2.1.5-beta + 0 commits) 
0:15-07-04 10:45:49 [200/232/232] [libevent] Logging build commands to /root/.cache/ybd/artifacts/libevent.7241487e4a03dce86b0fcfed4d6a3f44241bc07aefd9df8e3ed839182e36f009.build-log.0 
0:15-07-04 10:45:49 [200/232/232] [libevent] Running configure-commands
0:15-07-04 10:45:49 [200/232/232] [libevent] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['libevent.build', 'libevent.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:46:20 [200/232/232] [libevent] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 10:46:38 [200/232/232] [libevent] Running build-commands
0:15-07-04 10:46:38 [200/232/232] [libevent] Running command:
make 
0:15-07-04 10:46:51 [200/232/232] [libevent] Running install-commands
0:15-07-04 10:46:51 [200/232/232] [libevent] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:46:52 [200/232/232] [libevent] Running strip-commands
0:15-07-04 10:46:52 [200/232/232] [libevent] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:46:53 [200/232/232] [libevent] Creating cache artifact 
0:15-07-04 10:47:02 [200/232/232] [libevent] Now cached as libevent.7241487e4a03dce86b0fcfed4d6a3f44241bc07aefd9df8e3ed839182e36f009
0:15-07-04 10:47:04 [200/232/232] [libevent] Cleaned up /root/.cache/ybd/tmp/tmpgfB7xQ
0:15-07-04 10:47:04 [200/232/232] [libevent] Elapsed time 00:01:20
0:15-07-04 10:47:04 [200/232/232] [nfs] Installing libevent.7241487e4a03dce86b0fcfed4d6a3f44241bc07aefd9df8e3ed839182e36f009 
0:15-07-04 10:47:04 [200/232/232] [nfs-utils] Starting assembly 
0:15-07-04 10:47:04 [200/232/232] [nfs-utils] Installing libevent.7241487e4a03dce86b0fcfed4d6a3f44241bc07aefd9df8e3ed839182e36f009 
0:15-07-04 10:47:08 [200/232/232] [nfs-utils] Installing ti-rpc.cc5664bb66a82802ff7f433182d98734c9833ebec66b9094bfd3a49e61435b67 
0:15-07-04 10:47:09 [201/232/232] [nfs-utils] Start build 
0:15-07-04 10:47:09 [201/232/232] [nfs-utils] Git checkout upstream:nfs-utils in /root/.cache/ybd/tmp/tmpxkRWrJ/nfs-utils.build 
0:15-07-04 10:47:09 [201/232/232] [nfs-utils] Upstream version 0da9f20a nfs-utils-1-2-7-10-g0da9f20 (nfs-utils-1-2-7 + 10 commits) 
0:15-07-04 10:47:09 [201/232/232] [nfs-utils] Logging build commands to /root/.cache/ybd/artifacts/nfs-utils.1b7947749d6f13b14b6b8f174878c5f00f877866678b4008a74c329681eea7a6.build-log.0 
0:15-07-04 10:47:09 [201/232/232] [nfs-utils] Running configure-commands
0:15-07-04 10:47:09 [201/232/232] [nfs-utils] Running command:
NOCONFIGURE=1 ./autogen.sh 
WARNING: Unable to set filesystem_writable_paths=['nfs-utils.build', 'nfs-utils.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:47:33 [201/232/232] [nfs-utils] Running command:
./configure --prefix="$PREFIX" --disable-nfsv4 --disable-nfsv41 --disable-gss --with-rpcgen=internal --without-tcp-wrappers 
0:15-07-04 10:47:51 [201/232/232] [nfs-utils] Running build-commands
0:15-07-04 10:47:51 [201/232/232] [nfs-utils] Running command:
make 
0:15-07-04 10:48:05 [201/232/232] [nfs-utils] Running install-commands
0:15-07-04 10:48:05 [201/232/232] [nfs-utils] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:48:08 [201/232/232] [nfs-utils] Running command:
mkdir -p "$DESTDIR"/lib/systemd/system 
0:15-07-04 10:48:08 [201/232/232] [nfs-utils] Running command:
install -m644 proc-fs-nfsd.mount "$DESTDIR"/lib/systemd/system 
0:15-07-04 10:48:09 [201/232/232] [nfs-utils] Running command:
install -m644 nfs-mountd.service "$DESTDIR"/lib/systemd/system 
0:15-07-04 10:48:09 [201/232/232] [nfs-utils] Running command:
install -m644 nfs-server.service "$DESTDIR"/lib/systemd/system 
0:15-07-04 10:48:09 [201/232/232] [nfs-utils] Running strip-commands
0:15-07-04 10:48:09 [201/232/232] [nfs-utils] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:48:10 [201/232/232] [nfs-utils] Creating cache artifact 
0:15-07-04 10:48:12 [201/232/232] [nfs-utils] Now cached as nfs-utils.1b7947749d6f13b14b6b8f174878c5f00f877866678b4008a74c329681eea7a6
0:15-07-04 10:48:14 [201/232/232] [nfs-utils] Cleaned up /root/.cache/ybd/tmp/tmpxkRWrJ
0:15-07-04 10:48:14 [201/232/232] [nfs-utils] Elapsed time 00:01:09
0:15-07-04 10:48:14 [201/232/232] [nfs] Installing nfs-utils.1b7947749d6f13b14b6b8f174878c5f00f877866678b4008a74c329681eea7a6 
0:15-07-04 10:48:14 [202/232/232] [nfs] Start build 
0:15-07-04 10:48:14 [202/232/232] [nfs] Logging build commands to /root/.cache/ybd/artifacts/nfs.93c62fece6af784438eb2275e8ae4b7e751e296d5870b3a4bf41f49ba84e20c6.build-log.0 
0:15-07-04 10:48:14 [202/232/232] [nfs] Running strip-commands
0:15-07-04 10:48:14 [202/232/232] [nfs] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
WARNING: Unable to set filesystem_writable_paths=['nfs.build', 'nfs.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:48:14 [202/232/232] [nfs] Creating cache artifact 
0:15-07-04 10:48:14 [202/232/232] [nfs] Now cached as nfs.93c62fece6af784438eb2275e8ae4b7e751e296d5870b3a4bf41f49ba84e20c6
0:15-07-04 10:48:16 [202/232/232] [nfs] Cleaned up /root/.cache/ybd/tmp/tmpDwMvU5
0:15-07-04 10:48:16 [202/232/232] [nfs] Elapsed time 00:03:28
0:15-07-04 10:48:16 [202/232/232] [build-system-armv8l64] Installing nfs.93c62fece6af784438eb2275e8ae4b7e751e296d5870b3a4bf41f49ba84e20c6 
0:15-07-04 10:48:16 [202/232/232] [tools] Starting assembly 
0:15-07-04 10:48:16 [202/232/232] [file] Starting assembly 
0:15-07-04 10:48:16 [202/232/232] [file] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 10:48:20 [203/232/232] [file] Start build 
0:15-07-04 10:48:20 [203/232/232] [file] Git checkout upstream:file in /root/.cache/ybd/tmp/tmpYyVtpE/file.build 
0:15-07-04 10:48:20 [203/232/232] [file] Upstream version f69c3fd9 file-5.22 (file-5.22 + 0 commits) 
0:15-07-04 10:48:20 [203/232/232] [file] Logging build commands to /root/.cache/ybd/artifacts/file.7cf8771d5052b4f8551e4b476a31dee3d89dc273c37e766c80e8e1b9f93fdfc4.build-log.0 
0:15-07-04 10:48:20 [203/232/232] [file] Running configure-commands
0:15-07-04 10:48:20 [203/232/232] [file] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['file.build', 'file.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:48:21 [203/232/232] [file] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 10:48:34 [203/232/232] [file] Running build-commands
0:15-07-04 10:48:34 [203/232/232] [file] Running command:
make 
0:15-07-04 10:48:38 [203/232/232] [file] Running install-commands
0:15-07-04 10:48:38 [203/232/232] [file] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:48:39 [203/232/232] [file] Running strip-commands
0:15-07-04 10:48:39 [203/232/232] [file] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:48:39 [203/232/232] [file] Creating cache artifact 
0:15-07-04 10:48:41 [203/232/232] [file] Now cached as file.7cf8771d5052b4f8551e4b476a31dee3d89dc273c37e766c80e8e1b9f93fdfc4
0:15-07-04 10:48:42 [203/232/232] [file] Cleaned up /root/.cache/ybd/tmp/tmpYyVtpE
0:15-07-04 10:48:42 [203/232/232] [file] Elapsed time 00:00:26
0:15-07-04 10:48:42 [203/232/232] [tools] Installing file.7cf8771d5052b4f8551e4b476a31dee3d89dc273c37e766c80e8e1b9f93fdfc4 
0:15-07-04 10:48:46 [203/232/232] [parted] Starting assembly 
0:15-07-04 10:48:46 [203/232/232] [parted] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 10:48:50 [204/232/232] [parted] Start build 
0:15-07-04 10:48:50 [204/232/232] [parted] Git checkout upstream:parted in /root/.cache/ybd/tmp/tmpw5Uv6k/parted.build 
0:15-07-04 10:48:50 [204/232/232] [parted] Upstream version 387e96e6 v3.2-3-g387e96e (v3.2 + 3 commits) 
0:15-07-04 10:48:50 [204/232/232] [parted] Git submodules 
0:15-07-04 10:48:53 [204/232/232] [parted] Git checkout upstream:gnulib in /root/.cache/ybd/tmp/tmpw5Uv6k/parted.build/gnulib 
0:15-07-04 10:48:54 [204/232/232] [parted] Upstream version 98ca2c06 v0.1-139-g98ca2c0 (v0.1 + 139 commits) 
0:15-07-04 10:48:55 [204/232/232] [parted] Logging build commands to /root/.cache/ybd/artifacts/parted.3c1cd3817b50dec3beed12190bb75121069fbe08aae04f5a930bfdb086cef337.build-log.0 
0:15-07-04 10:48:55 [204/232/232] [parted] Running pre-configure-commands
0:15-07-04 10:48:55 [204/232/232] [parted] Running command:
sed -i -e '/^buildreq="/,/^"/{/rsync/d}' bootstrap.conf 
WARNING: Unable to set filesystem_writable_paths=['parted.build', 'parted.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:48:55 [204/232/232] [parted] Running command:
./bootstrap --skip-po --no-git --gnulib-srcdir=gnulib 
0:15-07-04 10:50:35 [204/232/232] [parted] Running configure-commands
0:15-07-04 10:50:35 [204/232/232] [parted] Running command:
./configure --prefix="$PREFIX" --disable-device-mapper 
0:15-07-04 10:51:24 [204/232/232] [parted] Running build-commands


0:15-07-04 10:51:24 [204/232/232] [parted] Running command:
make WERROR_CFLAGS="" 


0:15-07-04 10:51:59 [204/232/232] [parted] Running install-commands
0:15-07-04 10:51:59 [204/232/232] [parted] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:52:01 [204/232/232] [parted] Running strip-commands
0:15-07-04 10:52:01 [204/232/232] [parted] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:52:02 [204/232/232] [parted] Creating cache artifact 
0:15-07-04 10:52:08 [204/232/232] [parted] Now cached as parted.3c1cd3817b50dec3beed12190bb75121069fbe08aae04f5a930bfdb086cef337
0:15-07-04 10:52:11 [204/232/232] [parted] Cleaned up /root/.cache/ybd/tmp/tmpw5Uv6k
0:15-07-04 10:52:11 [204/232/232] [parted] Elapsed time 00:03:25
0:15-07-04 10:52:11 [204/232/232] [tools] Installing parted.3c1cd3817b50dec3beed12190bb75121069fbe08aae04f5a930bfdb086cef337 
0:15-07-04 10:52:12 [204/232/232] [lsof] Starting assembly 
0:15-07-04 10:52:12 [204/232/232] [lsof] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 10:52:15 [205/232/232] [lsof] Start build 
0:15-07-04 10:52:16 [205/232/232] [lsof] Git checkout upstream:lsof in /root/.cache/ybd/tmp/tmpc5Yz8x/lsof.build 
0:15-07-04 10:52:16 [205/232/232] [lsof] Upstream version fffb8558 (No tag found) 
0:15-07-04 10:52:16 [205/232/232] [lsof] Logging build commands to /root/.cache/ybd/artifacts/lsof.336c789b7101d1faf79c93217a89e69b9300a31376b4bc775900807ffcc524f8.build-log.0 
0:15-07-04 10:52:16 [205/232/232] [lsof] Running configure-commands
0:15-07-04 10:52:16 [205/232/232] [lsof] Running command:
tar xf lsof_*_src.tar --no-same-owner 
WARNING: Unable to set filesystem_writable_paths=['lsof.build', 'lsof.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:52:16 [205/232/232] [lsof] Running command:
cd lsof_*_src/ && ./Configure -n linux 
0:15-07-04 10:52:17 [205/232/232] [lsof] Running build-commands
0:15-07-04 10:52:17 [205/232/232] [lsof] Running command:
cd lsof_*_src/ && make 
0:15-07-04 10:52:18 [205/232/232] [lsof] Running install-commands
0:15-07-04 10:52:18 [205/232/232] [lsof] Running command:
mkdir -p "$DESTDIR$PREFIX"/bin 
0:15-07-04 10:52:19 [205/232/232] [lsof] Running command:
mv lsof_*_src/lsof "$DESTDIR$PREFIX"/bin/lsof 
0:15-07-04 10:52:19 [205/232/232] [lsof] Running command:
mkdir -p "$DESTDIR$PREFIX"/man/man8 
0:15-07-04 10:52:20 [205/232/232] [lsof] Running command:
mv lsof_*_src/lsof.8 "$DESTDIR$PREFIX"/man/man8 
0:15-07-04 10:52:20 [205/232/232] [lsof] Running strip-commands
0:15-07-04 10:52:20 [205/232/232] [lsof] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:52:21 [205/232/232] [lsof] Creating cache artifact 
0:15-07-04 10:52:21 [205/232/232] [lsof] Now cached as lsof.336c789b7101d1faf79c93217a89e69b9300a31376b4bc775900807ffcc524f8
0:15-07-04 10:52:22 [205/232/232] [lsof] Cleaned up /root/.cache/ybd/tmp/tmpc5Yz8x
0:15-07-04 10:52:22 [205/232/232] [lsof] Elapsed time 00:00:10
0:15-07-04 10:52:22 [205/232/232] [tools] Installing lsof.336c789b7101d1faf79c93217a89e69b9300a31376b4bc775900807ffcc524f8 
0:15-07-04 10:52:22 [205/232/232] [u-boot] Starting assembly 
0:15-07-04 10:52:23 [205/232/232] [u-boot] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 10:52:26 [206/232/232] [u-boot] Start build 
0:15-07-04 10:52:31 [206/232/232] [u-boot] Git checkout upstream:u-boot in /root/.cache/ybd/tmp/tmp3Jl1m3/u-boot.build 
0:15-07-04 10:52:32 [206/232/232] [u-boot] Upstream version fe57382d v2012.04.01-288-gfe57382 (v2012.04.01 + 288 commits) 
0:15-07-04 10:52:32 [206/232/232] [u-boot] Logging build commands to /root/.cache/ybd/artifacts/u-boot.ec9986f826bd133ec6ee440c0ba978a1650178d4bcbe7a915a903bfa5924186d.build-log.0 
0:15-07-04 10:52:32 [206/232/232] [u-boot] Running build-commands
0:15-07-04 10:52:32 [206/232/232] [u-boot] Running command:
make tools 
WARNING: Unable to set filesystem_writable_paths=['u-boot.build', 'u-boot.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:52:35 [206/232/232] [u-boot] Running install-commands
0:15-07-04 10:52:35 [206/232/232] [u-boot] Running command:
mkdir -p "$DESTDIR$PREFIX/bin" 
0:15-07-04 10:52:36 [206/232/232] [u-boot] Running command:
install -m 755 tools/img2brec.sh "$DESTDIR$PREFIX/bin/." 
0:15-07-04 10:52:36 [206/232/232] [u-boot] Running command:
install -m 755 tools/jtagconsole "$DESTDIR$PREFIX/bin/." 
0:15-07-04 10:52:36 [206/232/232] [u-boot] Running command:
install -m 755 tools/netconsole "$DESTDIR$PREFIX/bin/." 
0:15-07-04 10:52:37 [206/232/232] [u-boot] Running command:
install -m 755 tools/mkenvimage "$DESTDIR$PREFIX/bin/." 
0:15-07-04 10:52:38 [206/232/232] [u-boot] Running command:
install -m 755 tools/mkimage "$DESTDIR$PREFIX/bin/." 
0:15-07-04 10:52:38 [206/232/232] [u-boot] Running strip-commands
0:15-07-04 10:52:38 [206/232/232] [u-boot] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:52:38 [206/232/232] [u-boot] Creating cache artifact 
0:15-07-04 10:52:39 [206/232/232] [u-boot] Now cached as u-boot.ec9986f826bd133ec6ee440c0ba978a1650178d4bcbe7a915a903bfa5924186d
0:15-07-04 10:52:41 [206/232/232] [u-boot] Cleaned up /root/.cache/ybd/tmp/tmp3Jl1m3
0:15-07-04 10:52:41 [206/232/232] [u-boot] Elapsed time 00:00:18
0:15-07-04 10:52:41 [206/232/232] [tools] Installing u-boot.ec9986f826bd133ec6ee440c0ba978a1650178d4bcbe7a915a903bfa5924186d 
0:15-07-04 10:52:41 [206/232/232] [device-tree-compiler] Starting assembly 
0:15-07-04 10:52:41 [206/232/232] [device-tree-compiler] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 10:52:45 [207/232/232] [device-tree-compiler] Start build 
0:15-07-04 10:52:45 [207/232/232] [device-tree-compiler] Git checkout upstream:device-tree-compiler in /root/.cache/ybd/tmp/tmpZUCipc/device-tree-compiler.build 
0:15-07-04 10:52:45 [207/232/232] [device-tree-compiler] Upstream version c92f284c v1.4.0-1-gc92f284 (v1.4.0 + 1 commits) 
0:15-07-04 10:52:45 [207/232/232] [device-tree-compiler] Logging build commands to /root/.cache/ybd/artifacts/device-tree-compiler.b05118d1714601b8cc6f9a5a7f6a9ec274a938e2c904363ce0f973ba517c041a.build-log.0 
0:15-07-04 10:52:45 [207/232/232] [device-tree-compiler] Running build-commands
0:15-07-04 10:52:45 [207/232/232] [device-tree-compiler] Running command:
make all 
WARNING: Unable to set filesystem_writable_paths=['device-tree-compiler.build', 'device-tree-compiler.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:52:47 [207/232/232] [device-tree-compiler] Running install-commands
0:15-07-04 10:52:47 [207/232/232] [device-tree-compiler] Running command:
make install DESTDIR="$DESTDIR" PREFIX="$PREFIX" 
0:15-07-04 10:52:48 [207/232/232] [device-tree-compiler] Running strip-commands
0:15-07-04 10:52:48 [207/232/232] [device-tree-compiler] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:52:48 [207/232/232] [device-tree-compiler] Creating cache artifact 
0:15-07-04 10:52:49 [207/232/232] [device-tree-compiler] Now cached as device-tree-compiler.b05118d1714601b8cc6f9a5a7f6a9ec274a938e2c904363ce0f973ba517c041a
0:15-07-04 10:52:51 [207/232/232] [device-tree-compiler] Cleaned up /root/.cache/ybd/tmp/tmpZUCipc
0:15-07-04 10:52:51 [207/232/232] [device-tree-compiler] Elapsed time 00:00:09
0:15-07-04 10:52:51 [207/232/232] [tools] Installing device-tree-compiler.b05118d1714601b8cc6f9a5a7f6a9ec274a938e2c904363ce0f973ba517c041a 
0:15-07-04 10:52:51 [207/232/232] [linux-user-chroot] Starting assembly 
0:15-07-04 10:52:51 [207/232/232] [linux-user-chroot] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 10:52:54 [207/232/232] [linux-user-chroot] Installing python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5 
0:15-07-04 10:52:54 [208/232/232] [linux-user-chroot] Start build 
0:15-07-04 10:52:55 [208/232/232] [linux-user-chroot] Git checkout upstream:linux-user-chroot in /root/.cache/ybd/tmp/tmpmVPBri/linux-user-chroot.build 
0:15-07-04 10:52:55 [208/232/232] [linux-user-chroot] Upstream version d25cc110 v2013.1-2-gd25cc11 (v2013.1 + 2 commits) 
0:15-07-04 10:52:55 [208/232/232] [linux-user-chroot] Logging build commands to /root/.cache/ybd/artifacts/linux-user-chroot.8bb7175af83dbc51558cddf9b3bbc93f0d888a6307f9cef003ac0ac798b53b98.build-log.0 
0:15-07-04 10:52:55 [208/232/232] [linux-user-chroot] Running configure-commands
0:15-07-04 10:52:55 [208/232/232] [linux-user-chroot] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['linux-user-chroot.build', 'linux-user-chroot.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:53:21 [208/232/232] [linux-user-chroot] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 10:53:26 [208/232/232] [linux-user-chroot] Running build-commands
0:15-07-04 10:53:26 [208/232/232] [linux-user-chroot] Running command:
make 
0:15-07-04 10:53:27 [208/232/232] [linux-user-chroot] Running install-commands
0:15-07-04 10:53:27 [208/232/232] [linux-user-chroot] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:53:28 [208/232/232] [linux-user-chroot] Running strip-commands
0:15-07-04 10:53:28 [208/232/232] [linux-user-chroot] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:53:28 [208/232/232] [linux-user-chroot] Creating cache artifact 
0:15-07-04 10:53:28 [208/232/232] [linux-user-chroot] Now cached as linux-user-chroot.8bb7175af83dbc51558cddf9b3bbc93f0d888a6307f9cef003ac0ac798b53b98
0:15-07-04 10:53:29 [208/232/232] [linux-user-chroot] Cleaned up /root/.cache/ybd/tmp/tmpmVPBri
0:15-07-04 10:53:29 [208/232/232] [linux-user-chroot] Elapsed time 00:00:38
0:15-07-04 10:53:29 [208/232/232] [tools] Installing linux-user-chroot.8bb7175af83dbc51558cddf9b3bbc93f0d888a6307f9cef003ac0ac798b53b98 
0:15-07-04 10:53:30 [208/232/232] [strace] Starting assembly 
0:15-07-04 10:53:30 [208/232/232] [strace] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 10:53:33 [209/232/232] [strace] Start build 
0:15-07-04 10:53:34 [209/232/232] [strace] Git checkout upstream:strace in /root/.cache/ybd/tmp/tmpRbELbp/strace.build 
0:15-07-04 10:53:34 [209/232/232] [strace] Upstream version 6d8c0637 v4.8 (v4.8 + 0 commits) 
0:15-07-04 10:53:34 [209/232/232] [strace] Logging build commands to /root/.cache/ybd/artifacts/strace.a6218cfcc7798468a1cc17e906ab8a3927ca25991a5a07dad6b81ceafc7cb399.build-log.0 
0:15-07-04 10:53:34 [209/232/232] [strace] Running configure-commands
0:15-07-04 10:53:34 [209/232/232] [strace] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['strace.build', 'strace.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:53:43 [209/232/232] [strace] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 10:53:55 [209/232/232] [strace] Running build-commands
0:15-07-04 10:53:55 [209/232/232] [strace] Running command:
make 
0:15-07-04 10:53:58 [209/232/232] [strace] Running install-commands
0:15-07-04 10:53:58 [209/232/232] [strace] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:53:58 [209/232/232] [strace] Running strip-commands
0:15-07-04 10:53:58 [209/232/232] [strace] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:53:59 [209/232/232] [strace] Creating cache artifact 
0:15-07-04 10:54:00 [209/232/232] [strace] Now cached as strace.a6218cfcc7798468a1cc17e906ab8a3927ca25991a5a07dad6b81ceafc7cb399
0:15-07-04 10:54:01 [209/232/232] [strace] Cleaned up /root/.cache/ybd/tmp/tmpRbELbp
0:15-07-04 10:54:01 [209/232/232] [strace] Elapsed time 00:00:31
0:15-07-04 10:54:01 [209/232/232] [tools] Installing strace.a6218cfcc7798468a1cc17e906ab8a3927ca25991a5a07dad6b81ceafc7cb399 
0:15-07-04 10:54:01 [209/232/232] [procps-ng] Starting assembly 
0:15-07-04 10:54:01 [209/232/232] [procps-ng] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 10:54:05 [210/232/232] [procps-ng] Start build 
0:15-07-04 10:54:05 [210/232/232] [procps-ng] Git checkout upstream:procps-ng in /root/.cache/ybd/tmp/tmpnkodic/procps-ng.build 
0:15-07-04 10:54:05 [210/232/232] [procps-ng] Upstream version 85fff468 v3.3.9 (v3.3.9 + 0 commits) 
0:15-07-04 10:54:05 [210/232/232] [procps-ng] Logging build commands to /root/.cache/ybd/artifacts/procps-ng.195f801fc1d909bd561814c235ccec040af4874a1d71be69fef5c7ee76018706.build-log.0 
0:15-07-04 10:54:05 [210/232/232] [procps-ng] Running configure-commands
0:15-07-04 10:54:05 [210/232/232] [procps-ng] Running command:
NOCONFIGURE=1 ./autogen.sh 
WARNING: Unable to set filesystem_writable_paths=['procps-ng.build', 'procps-ng.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:54:31 [210/232/232] [procps-ng] Running command:
./configure --prefix="$PREFIX" --exec-prefix=/ 
0:15-07-04 10:54:46 [210/232/232] [procps-ng] Running build-commands
0:15-07-04 10:54:46 [210/232/232] [procps-ng] Running command:
make 
0:15-07-04 10:55:02 [210/232/232] [procps-ng] Running install-commands
0:15-07-04 10:55:02 [210/232/232] [procps-ng] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:55:04 [210/232/232] [procps-ng] Running post-install-commands
0:15-07-04 10:55:04 [210/232/232] [procps-ng] Running command:
usr_binaries="free pidof pmap slabtop top vmstat watch pgrep pkill pwdx tload uptime w"
for file in $usr_binaries; do
    ln -sf "$PREFIX"/bin/$file "$DESTDIR"/bin/$file
done
 
0:15-07-04 10:55:04 [210/232/232] [procps-ng] Running strip-commands
0:15-07-04 10:55:04 [210/232/232] [procps-ng] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:55:05 [210/232/232] [procps-ng] Creating cache artifact 
0:15-07-04 10:55:07 [210/232/232] [procps-ng] Now cached as procps-ng.195f801fc1d909bd561814c235ccec040af4874a1d71be69fef5c7ee76018706
0:15-07-04 10:55:09 [210/232/232] [procps-ng] Cleaned up /root/.cache/ybd/tmp/tmpnkodic
0:15-07-04 10:55:09 [210/232/232] [procps-ng] Elapsed time 00:01:07
0:15-07-04 10:55:09 [210/232/232] [tools] Installing procps-ng.195f801fc1d909bd561814c235ccec040af4874a1d71be69fef5c7ee76018706 
0:15-07-04 10:55:09 [210/232/232] [sudo] Starting assembly 
0:15-07-04 10:55:09 [210/232/232] [sudo] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 10:55:12 [211/232/232] [sudo] Start build 
0:15-07-04 10:55:13 [211/232/232] [sudo] Git checkout upstream:sudo in /root/.cache/ybd/tmp/tmpiGG3EW/sudo.build 
0:15-07-04 10:55:13 [211/232/232] [sudo] Upstream version a4769dc7 SUDO_1_8_10p2 (SUDO_1_8_10p2 + 0 commits) 
0:15-07-04 10:55:13 [211/232/232] [sudo] Logging build commands to /root/.cache/ybd/artifacts/sudo.6fc6467df9f9ca96a17a828bb7e8b6e5b4886fe567fa3acfee810a50ca5a064f.build-log.0 
0:15-07-04 10:55:13 [211/232/232] [sudo] Running configure-commands
0:15-07-04 10:55:13 [211/232/232] [sudo] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['sudo.build', 'sudo.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:55:53 [211/232/232] [sudo] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 10:56:15 [211/232/232] [sudo] Running build-commands
0:15-07-04 10:56:15 [211/232/232] [sudo] Running command:
make 
0:15-07-04 10:56:28 [211/232/232] [sudo] Running install-commands
0:15-07-04 10:56:28 [211/232/232] [sudo] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:56:30 [211/232/232] [sudo] Running strip-commands
0:15-07-04 10:56:30 [211/232/232] [sudo] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:56:31 [211/232/232] [sudo] Creating cache artifact 
0:15-07-04 10:56:34 [211/232/232] [sudo] Now cached as sudo.6fc6467df9f9ca96a17a828bb7e8b6e5b4886fe567fa3acfee810a50ca5a064f
0:15-07-04 10:56:36 [211/232/232] [sudo] Cleaned up /root/.cache/ybd/tmp/tmpiGG3EW
0:15-07-04 10:56:36 [211/232/232] [sudo] Elapsed time 00:01:27
0:15-07-04 10:56:36 [211/232/232] [tools] Installing sudo.6fc6467df9f9ca96a17a828bb7e8b6e5b4886fe567fa3acfee810a50ca5a064f 
0:15-07-04 10:56:36 [211/232/232] [ipmitool] Starting assembly 
0:15-07-04 10:56:36 [211/232/232] [ipmitool] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 10:56:40 [211/232/232] [ipmitool] Installing file.7cf8771d5052b4f8551e4b476a31dee3d89dc273c37e766c80e8e1b9f93fdfc4 
0:15-07-04 10:56:40 [212/232/232] [ipmitool] Start build 
0:15-07-04 10:56:40 [212/232/232] [ipmitool] Git checkout upstream:ipmitool in /root/.cache/ybd/tmp/tmp2p8xTF/ipmitool.build 
0:15-07-04 10:56:40 [212/232/232] [ipmitool] Upstream version be7917f9 IPMITOOL_1_8_14 (IPMITOOL_1_8_14 + 0 commits) 
0:15-07-04 10:56:40 [212/232/232] [ipmitool] Logging build commands to /root/.cache/ybd/artifacts/ipmitool.ac7544c8a829692862044c6957434a19ee265f83e0d286ddb95de8209f12c525.build-log.0 
0:15-07-04 10:56:40 [212/232/232] [ipmitool] Running pre-configure-commands
0:15-07-04 10:56:40 [212/232/232] [ipmitool] Running command:
touch NEWS 
WARNING: Unable to set filesystem_writable_paths=['ipmitool.build', 'ipmitool.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:56:40 [212/232/232] [ipmitool] Running configure-commands
0:15-07-04 10:56:40 [212/232/232] [ipmitool] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
0:15-07-04 10:57:02 [212/232/232] [ipmitool] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 10:57:12 [212/232/232] [ipmitool] Running build-commands
0:15-07-04 10:57:12 [212/232/232] [ipmitool] Running command:
make 
0:15-07-04 10:57:39 [212/232/232] [ipmitool] Running install-commands
0:15-07-04 10:57:39 [212/232/232] [ipmitool] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:57:40 [212/232/232] [ipmitool] Running strip-commands
0:15-07-04 10:57:40 [212/232/232] [ipmitool] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:57:41 [212/232/232] [ipmitool] Creating cache artifact 
0:15-07-04 10:57:44 [212/232/232] [ipmitool] Now cached as ipmitool.ac7544c8a829692862044c6957434a19ee265f83e0d286ddb95de8209f12c525
0:15-07-04 10:57:46 [212/232/232] [ipmitool] Cleaned up /root/.cache/ybd/tmp/tmp2p8xTF
0:15-07-04 10:57:46 [212/232/232] [ipmitool] Elapsed time 00:01:09
0:15-07-04 10:57:46 [212/232/232] [tools] Installing ipmitool.ac7544c8a829692862044c6957434a19ee265f83e0d286ddb95de8209f12c525 
0:15-07-04 10:57:46 [212/232/232] [zip] Starting assembly 
0:15-07-04 10:57:46 [212/232/232] [zip] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 10:57:50 [213/232/232] [zip] Start build 
0:15-07-04 10:57:50 [213/232/232] [zip] Git checkout upstream:zip in /root/.cache/ybd/tmp/tmpHwkLB4/zip.build 
0:15-07-04 10:57:50 [213/232/232] [zip] Upstream version e52e9d6a zip30 (zip30 + 0 commits) 
0:15-07-04 10:57:50 [213/232/232] [zip] Logging build commands to /root/.cache/ybd/artifacts/zip.432c58de3a98f91cb895a5d93e62fed05b07f2c69bf0fe66e19d34f58649518a.build-log.0 
0:15-07-04 10:57:50 [213/232/232] [zip] Running configure-commands
0:15-07-04 10:57:50 [213/232/232] [zip] Running command:
cp unix/Makefile . 
WARNING: Unable to set filesystem_writable_paths=['zip.build', 'zip.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:57:50 [213/232/232] [zip] Running build-commands
0:15-07-04 10:57:50 [213/232/232] [zip] Running command:
sed -i -e 's/^prefix = .*$/prefix = $$DESTDIR\/$$PREFIX/' Makefile 
0:15-07-04 10:57:51 [213/232/232] [zip] Running command:
make generic 
0:15-07-04 10:57:58 [213/232/232] [zip] Running install-commands
0:15-07-04 10:57:58 [213/232/232] [zip] Running command:
make install 
0:15-07-04 10:57:58 [213/232/232] [zip] Running strip-commands
0:15-07-04 10:57:58 [213/232/232] [zip] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:57:59 [213/232/232] [zip] Creating cache artifact 
0:15-07-04 10:57:59 [213/232/232] [zip] Now cached as zip.432c58de3a98f91cb895a5d93e62fed05b07f2c69bf0fe66e19d34f58649518a
0:15-07-04 10:58:01 [213/232/232] [zip] Cleaned up /root/.cache/ybd/tmp/tmpHwkLB4
0:15-07-04 10:58:01 [213/232/232] [zip] Elapsed time 00:00:14
0:15-07-04 10:58:01 [213/232/232] [tools] Installing zip.432c58de3a98f91cb895a5d93e62fed05b07f2c69bf0fe66e19d34f58649518a 
0:15-07-04 10:58:01 [213/232/232] [distcc] Starting assembly 
0:15-07-04 10:58:01 [213/232/232] [distcc] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 10:58:04 [214/232/232] [distcc] Start build 
0:15-07-04 10:58:05 [214/232/232] [distcc] Git checkout upstream:distcc in /root/.cache/ybd/tmp/tmp_MHOyl/distcc.build 
0:15-07-04 10:58:05 [214/232/232] [distcc] Upstream version c9691a96 (No tag found) 
0:15-07-04 10:58:05 [214/232/232] [distcc] Logging build commands to /root/.cache/ybd/artifacts/distcc.390081bb1f0ed8d838d2aedb5ad8cc7714da8051e5332dbfa16dea7ce5484835.build-log.0 
0:15-07-04 10:58:05 [214/232/232] [distcc] Running pre-configure-commands
0:15-07-04 10:58:05 [214/232/232] [distcc] Running command:
NOCONFIGURE=1 ./autogen.sh 
WARNING: Unable to set filesystem_writable_paths=['distcc.build', 'distcc.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:58:08 [214/232/232] [distcc] Running command:
cp /usr/share/automake*/config.guess . 
0:15-07-04 10:58:09 [214/232/232] [distcc] Running command:
cp /usr/share/automake*/config.sub . 
0:15-07-04 10:58:09 [214/232/232] [distcc] Running configure-commands
0:15-07-04 10:58:09 [214/232/232] [distcc] Running command:
./configure --prefix="$PREFIX" --disable-Werror 
0:15-07-04 10:58:20 [214/232/232] [distcc] Running build-commands
0:15-07-04 10:58:20 [214/232/232] [distcc] Running command:
make 
0:15-07-04 10:58:28 [214/232/232] [distcc] Running install-commands
0:15-07-04 10:58:28 [214/232/232] [distcc] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 10:58:29 [214/232/232] [distcc] Running strip-commands
0:15-07-04 10:58:29 [214/232/232] [distcc] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 10:58:30 [214/232/232] [distcc] Creating cache artifact 
0:15-07-04 10:58:32 [214/232/232] [distcc] Now cached as distcc.390081bb1f0ed8d838d2aedb5ad8cc7714da8051e5332dbfa16dea7ce5484835
0:15-07-04 10:58:34 [214/232/232] [distcc] Cleaned up /root/.cache/ybd/tmp/tmp_MHOyl
0:15-07-04 10:58:34 [214/232/232] [distcc] Elapsed time 00:00:33
0:15-07-04 10:58:34 [214/232/232] [tools] Installing distcc.390081bb1f0ed8d838d2aedb5ad8cc7714da8051e5332dbfa16dea7ce5484835 
0:15-07-04 10:58:34 [214/232/232] [gdb] Starting assembly 
0:15-07-04 10:58:34 [214/232/232] [gdb] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 10:58:37 [215/232/232] [gdb] Start build 
0:15-07-04 10:58:50 [215/232/232] [gdb] Git checkout upstream:binutils-gdb in /root/.cache/ybd/tmp/tmp_6V4sI/gdb.build 
0:15-07-04 10:58:52 [215/232/232] [gdb] Upstream version 129ee12d gdb-7.8.2-release-2-g129ee12 (gdb-7.8.2-release + 2 commits) 
0:15-07-04 10:58:54 [215/232/232] [gdb] Logging build commands to /root/.cache/ybd/artifacts/gdb.1d11228e128380ce46bd8a0a3cf32fadcde0e7c9e6ce7bd08080908385de3805.build-log.0 
0:15-07-04 10:58:54 [215/232/232] [gdb] Running configure-commands
0:15-07-04 10:58:54 [215/232/232] [gdb] Running command:
./configure --prefix="$PREFIX" --disable-werror --disable-gas --disable-binutils --disable-ld --disable-gold --disable-gprof 
WARNING: Unable to set filesystem_writable_paths=['gdb.build', 'gdb.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 10:58:59 [215/232/232] [gdb] Running build-commands
0:15-07-04 10:58:59 [215/232/232] [gdb] Running command:
make 
0:15-07-04 11:02:38 [215/232/232] [gdb] Running install-commands
0:15-07-04 11:02:38 [215/232/232] [gdb] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 11:03:54 [215/232/232] [gdb] Running strip-commands
0:15-07-04 11:03:54 [215/232/232] [gdb] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 11:03:55 [215/232/232] [gdb] Creating cache artifact 
0:15-07-04 11:04:41 [215/232/232] [gdb] Now cached as gdb.1d11228e128380ce46bd8a0a3cf32fadcde0e7c9e6ce7bd08080908385de3805
0:15-07-04 11:04:47 [215/232/232] [gdb] Cleaned up /root/.cache/ybd/tmp/tmp_6V4sI
0:15-07-04 11:04:47 [215/232/232] [gdb] Elapsed time 00:06:12
0:15-07-04 11:04:47 [215/232/232] [tools] Installing gdb.1d11228e128380ce46bd8a0a3cf32fadcde0e7c9e6ce7bd08080908385de3805 
0:15-07-04 11:04:47 [215/232/232] [vala-bootstrap] Starting assembly 
0:15-07-04 11:04:47 [215/232/232] [vala-bootstrap] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 11:04:51 [216/232/232] [vala-bootstrap] Start build 
0:15-07-04 11:04:54 [216/232/232] [vala-bootstrap] Git checkout upstream:vala in /root/.cache/ybd/tmp/tmpOKQYbY/vala-bootstrap.build 
0:15-07-04 11:04:54 [216/232/232] [vala-bootstrap] Upstream version 4e4a02c0 0.16.1-3-g4e4a02c (0.16.1 + 3 commits) 
0:15-07-04 11:04:55 [216/232/232] [vala-bootstrap] Logging build commands to /root/.cache/ybd/artifacts/vala-bootstrap.12d7df4a2d238363158fbc84f1fa9a1a07bf5b76d5f1fb15e7570b6e5be9421a.build-log.0 
0:15-07-04 11:04:55 [216/232/232] [vala-bootstrap] Running pre-configure-commands
0:15-07-04 11:04:55 [216/232/232] [vala-bootstrap] Running command:
autoreconf -ivf 
WARNING: Unable to set filesystem_writable_paths=['vala-bootstrap.build', 'vala-bootstrap.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 11:05:25 [216/232/232] [vala-bootstrap] Running configure-commands
0:15-07-04 11:05:25 [216/232/232] [vala-bootstrap] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 11:05:33 [216/232/232] [vala-bootstrap] Running build-commands
0:15-07-04 11:05:33 [216/232/232] [vala-bootstrap] Running command:
make 
0:15-07-04 11:06:45 [216/232/232] [vala-bootstrap] Running install-commands
0:15-07-04 11:06:45 [216/232/232] [vala-bootstrap] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 11:06:49 [216/232/232] [vala-bootstrap] Running strip-commands
0:15-07-04 11:06:49 [216/232/232] [vala-bootstrap] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 11:06:49 [216/232/232] [vala-bootstrap] Creating cache artifact 
0:15-07-04 11:07:15 [216/232/232] [vala-bootstrap] Now cached as vala-bootstrap.12d7df4a2d238363158fbc84f1fa9a1a07bf5b76d5f1fb15e7570b6e5be9421a
0:15-07-04 11:07:17 [216/232/232] [vala-bootstrap] Cleaned up /root/.cache/ybd/tmp/tmpOKQYbY
0:15-07-04 11:07:17 [216/232/232] [vala-bootstrap] Elapsed time 00:02:29
0:15-07-04 11:07:17 [216/232/232] [tools] Installing vala-bootstrap.12d7df4a2d238363158fbc84f1fa9a1a07bf5b76d5f1fb15e7570b6e5be9421a 
0:15-07-04 11:07:17 [216/232/232] [kexec-tools] Starting assembly 
0:15-07-04 11:07:17 [216/232/232] [kexec-tools] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 11:07:21 [217/232/232] [kexec-tools] Start build 
0:15-07-04 11:07:22 [217/232/232] [kexec-tools] Git checkout upstream:kexec-tools in /root/.cache/ybd/tmp/tmpZDl6B8/kexec-tools.build 
0:15-07-04 11:07:22 [217/232/232] [kexec-tools] Upstream version f4d1d2ad v2.0.8-6-gf4d1d2a (v2.0.8 + 6 commits) 
0:15-07-04 11:07:22 [217/232/232] [kexec-tools] Logging build commands to /root/.cache/ybd/artifacts/kexec-tools.d3c8dfdd51b8b84fb3019ea6f0ba4039b3b4142a5b7fcd9bcdf86bc4602fe3bf.build-log.0 
0:15-07-04 11:07:22 [217/232/232] [kexec-tools] Running configure-commands
0:15-07-04 11:07:22 [217/232/232] [kexec-tools] Running command:
./bootstrap 
WARNING: Unable to set filesystem_writable_paths=['kexec-tools.build', 'kexec-tools.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 11:07:25 [217/232/232] [kexec-tools] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 11:07:28 [217/232/232] [kexec-tools] Running build-commands
0:15-07-04 11:07:28 [217/232/232] [kexec-tools] Running command:
make 
0:15-07-04 11:07:30 [217/232/232] [kexec-tools] Running install-commands
0:15-07-04 11:07:30 [217/232/232] [kexec-tools] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 11:07:31 [217/232/232] [kexec-tools] Running strip-commands
0:15-07-04 11:07:31 [217/232/232] [kexec-tools] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 11:07:31 [217/232/232] [kexec-tools] Creating cache artifact 
0:15-07-04 11:07:32 [217/232/232] [kexec-tools] Now cached as kexec-tools.d3c8dfdd51b8b84fb3019ea6f0ba4039b3b4142a5b7fcd9bcdf86bc4602fe3bf
0:15-07-04 11:07:33 [217/232/232] [kexec-tools] Cleaned up /root/.cache/ybd/tmp/tmpZDl6B8
0:15-07-04 11:07:33 [217/232/232] [kexec-tools] Elapsed time 00:00:16
0:15-07-04 11:07:33 [217/232/232] [tools] Installing kexec-tools.d3c8dfdd51b8b84fb3019ea6f0ba4039b3b4142a5b7fcd9bcdf86bc4602fe3bf 
0:15-07-04 11:07:34 [217/232/232] [vala] Starting assembly 
0:15-07-04 11:07:34 [217/232/232] [vala] Installing vala-bootstrap.12d7df4a2d238363158fbc84f1fa9a1a07bf5b76d5f1fb15e7570b6e5be9421a 
0:15-07-04 11:07:37 [218/232/232] [vala] Start build 
0:15-07-04 11:07:38 [218/232/232] [vala] Git checkout upstream:vala in /root/.cache/ybd/tmp/tmp5ich0S/vala.build 
0:15-07-04 11:07:38 [218/232/232] [vala] Upstream version 5f6ebe00 0.28.0 (0.28.0 + 0 commits) 
0:15-07-04 11:07:38 [218/232/232] [vala] Logging build commands to /root/.cache/ybd/artifacts/vala.67761eb25ddc8102a0245dc78957e5a55d6cbbf12739a111f064ebbc8cca582f.build-log.0 
0:15-07-04 11:07:38 [218/232/232] [vala] Running configure-commands
0:15-07-04 11:07:38 [218/232/232] [vala] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['vala.build', 'vala.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 11:08:07 [218/232/232] [vala] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 11:08:16 [218/232/232] [vala] Running build-commands
0:15-07-04 11:08:16 [218/232/232] [vala] Running command:
make 
0:15-07-04 11:09:59 [218/232/232] [vala] Running install-commands
0:15-07-04 11:09:59 [218/232/232] [vala] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 11:10:02 [218/232/232] [vala] Running strip-commands
0:15-07-04 11:10:02 [218/232/232] [vala] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 11:10:03 [218/232/232] [vala] Creating cache artifact 
0:15-07-04 11:10:27 [218/232/232] [vala] Now cached as vala.67761eb25ddc8102a0245dc78957e5a55d6cbbf12739a111f064ebbc8cca582f
0:15-07-04 11:10:29 [218/232/232] [vala] Cleaned up /root/.cache/ybd/tmp/tmp5ich0S
0:15-07-04 11:10:29 [218/232/232] [vala] Elapsed time 00:02:55
0:15-07-04 11:10:29 [218/232/232] [tools] Installing vala.67761eb25ddc8102a0245dc78957e5a55d6cbbf12739a111f064ebbc8cca582f 
0:15-07-04 11:10:30 [219/232/232] [tools] Start build 
0:15-07-04 11:10:30 [219/232/232] [tools] Logging build commands to /root/.cache/ybd/artifacts/tools.37037d7c27e1ec54728078a1d7ef5dead71c693a5bbd1401260fd1bf5061557b.build-log.0 
0:15-07-04 11:10:30 [219/232/232] [tools] Running strip-commands
0:15-07-04 11:10:30 [219/232/232] [tools] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
WARNING: Unable to set filesystem_writable_paths=['tools.build', 'tools.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 11:10:30 [219/232/232] [tools] Creating cache artifact 
0:15-07-04 11:10:30 [219/232/232] [tools] Now cached as tools.37037d7c27e1ec54728078a1d7ef5dead71c693a5bbd1401260fd1bf5061557b
0:15-07-04 11:10:32 [219/232/232] [tools] Cleaned up /root/.cache/ybd/tmp/tmpotlecx
0:15-07-04 11:10:32 [219/232/232] [tools] Elapsed time 00:22:15
0:15-07-04 11:10:32 [219/232/232] [build-system-armv8l64] Installing tools.37037d7c27e1ec54728078a1d7ef5dead71c693a5bbd1401260fd1bf5061557b 
0:15-07-04 11:10:32 [219/232/232] [bsp-armv8l64-generic] Starting assembly 
0:15-07-04 11:10:32 [219/232/232] [linux-armv8l64-generic] Starting assembly 
0:15-07-04 11:10:32 [219/232/232] [linux-armv8l64-generic] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 11:10:36 [220/232/232] [linux-armv8l64-generic] Start build 
0:15-07-04 11:11:06 [220/232/232] [linux-armv8l64-generic] Git checkout upstream:linux in /root/.cache/ybd/tmp/tmpdMmwUR/linux-armv8l64-generic.build 
0:15-07-04 11:11:06 [220/232/232] [linux-armv8l64-generic] Upstream version 5f06398a v3.19-rc5-6-g5f06398 (v3.19-rc5 + 6 commits) 
0:15-07-04 11:11:09 [220/232/232] [linux-armv8l64-generic] Logging build commands to /root/.cache/ybd/artifacts/linux-armv8l64-generic.91b1c8f2143a0f16a296f0bfa7e311ab6f52e083b0956dd9681b3cf3db2de88b.build-log.0 
0:15-07-04 11:11:09 [220/232/232] [linux-armv8l64-generic] Running configure-commands
0:15-07-04 11:11:09 [220/232/232] [linux-armv8l64-generic] Running command:
make ARCH=arm64 defconfig 
WARNING: Unable to set filesystem_writable_paths=['linux-armv8l64-generic.build', 'linux-armv8l64-generic.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 11:11:19 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e PACKET 
0:15-07-04 11:11:21 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e SATA_AHCI 
0:15-07-04 11:11:22 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e ATA_GENERIC 
0:15-07-04 11:11:22 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e HAVE_IDE 
0:15-07-04 11:11:23 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -d BLK_DEV_IDE_SATA 
0:15-07-04 11:11:23 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e BTRFS_FS 
0:15-07-04 11:11:24 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e BTRFS_FS_POSIX_ACL 
0:15-07-04 11:11:24 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e DEVTMPFS 
0:15-07-04 11:11:24 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e DEVTMPFS_MOUNT 
0:15-07-04 11:11:25 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e CONFIG_FHANDLE 
0:15-07-04 11:11:25 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e DEVPTS_MULTIPLE_INSTANCES 
0:15-07-04 11:11:26 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e CGROUPS 
0:15-07-04 11:11:26 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e AUTOFS4_FS 
0:15-07-04 11:11:27 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config --set-str UEVENT_HELPER_PATH '' 
0:15-07-04 11:11:27 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e EXT2_FS 
0:15-07-04 11:11:27 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e EXT2_FS_XATTR 
0:15-07-04 11:11:28 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e EXT2_FS_POSIX_ACL 
0:15-07-04 11:11:28 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e EXT2_FS_SECURITY 
0:15-07-04 11:11:28 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e EXT2_FS_XIP 
0:15-07-04 11:11:29 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e EXT3_FS 
0:15-07-04 11:11:29 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -d EXT3_DEFAULTS_TO_ORDERED 
0:15-07-04 11:11:29 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e EXT3_FS_XATTR 
0:15-07-04 11:11:30 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e EXT3_FS_POSIX_ACL 
0:15-07-04 11:11:30 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e EXT3_FS_SECURITY 
0:15-07-04 11:11:30 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e EXT4_FS 
0:15-07-04 11:11:31 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e EXT4_FS_XATTR 
0:15-07-04 11:11:31 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e EXT4_FS_POSIX_ACL 
0:15-07-04 11:11:32 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e EXT4_FS_SECURITY 
0:15-07-04 11:11:32 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -d EXT4_DEBUG 
0:15-07-04 11:11:32 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e FUSE_FS 
0:15-07-04 11:11:33 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e OVERLAY_FS 
0:15-07-04 11:11:33 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e XFS_FS 
0:15-07-04 11:11:34 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e LIBCRC32C 
0:15-07-04 11:11:34 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -d JBD_DEBUG 
0:15-07-04 11:11:34 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -d JBD2_DEBUG 
0:15-07-04 11:11:35 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e BLK_DEV_LOOP 
0:15-07-04 11:11:35 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -d BLK_DEV_CRYPTOLOOP 
0:15-07-04 11:11:36 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e CEPH_FS 
0:15-07-04 11:11:36 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config --set-val BLK_DEV_LOOP_MIN_COUNT 8 
0:15-07-04 11:11:36 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e DM_SNAPSHOT 
0:15-07-04 11:11:37 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e VIRTIO 
0:15-07-04 11:11:37 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e VIRTIO_RING 
0:15-07-04 11:11:37 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e VIRTIO_PCI 
0:15-07-04 11:11:38 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e VIRTIO_BALLOON 
0:15-07-04 11:11:38 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e VIRTIO_BLK 
0:15-07-04 11:11:39 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e VIRTIO_NET 
0:15-07-04 11:11:39 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e VIRTIO_CONSOLE 
0:15-07-04 11:11:39 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e HW_RANDOM_VIRTIO 
0:15-07-04 11:11:40 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e 9P_FS 
0:15-07-04 11:11:40 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e 9P_FSCACHE 
0:15-07-04 11:11:40 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e 9P_FS_POSIX_ACL 
0:15-07-04 11:11:41 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NET_9P 
0:15-07-04 11:11:41 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NET_9P_VIRTIO 
0:15-07-04 11:11:42 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e R8169 
0:15-07-04 11:11:42 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e 8139TOO 
0:15-07-04 11:11:42 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e 8139CP 
0:15-07-04 11:11:43 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IKCONFIG 
0:15-07-04 11:11:43 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IKCONFIG_PROC 
0:15-07-04 11:11:44 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e SECCOMP 
0:15-07-04 11:11:44 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -d DEBUG_STACK_TRACE 
0:15-07-04 11:11:44 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NFSD 
0:15-07-04 11:11:45 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NFSD_V3 
0:15-07-04 11:11:45 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e KVM 
0:15-07-04 11:11:45 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e TUN 
0:15-07-04 11:11:46 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e BRIDGE 
0:15-07-04 11:11:46 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e VHOST_NET 
0:15-07-04 11:11:46 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_NAT 
0:15-07-04 11:11:47 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_NF_NAT 
0:15-07-04 11:11:47 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_NF_TARGET_MASQUERADE 
0:15-07-04 11:11:48 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e FB_VESA 
0:15-07-04 11:11:48 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e HOTPLUG_PCI 
0:15-07-04 11:11:48 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e HOTPLUG_PCI_ACPI 
0:15-07-04 11:11:49 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e VLAN_8021Q 
0:15-07-04 11:11:49 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e BRIDGE_VLAN_FILTERING 
0:15-07-04 11:11:49 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IPV6 
0:15-07-04 11:11:50 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e BLK_DEV_NBD 
0:15-07-04 11:11:50 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e BRIDGE_NF_EBTABLES 
0:15-07-04 11:11:50 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER 
0:15-07-04 11:11:51 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_ADVANCED 
0:15-07-04 11:11:51 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_ADDRTYPE 
0:15-07-04 11:11:51 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e OPENVSWITCH 
0:15-07-04 11:11:52 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e OPENVSWITCH_VXLAN 
0:15-07-04 11:11:52 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e CONFIG_OPENVSWITCH_GRE 
0:15-07-04 11:11:52 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NET_CLS_BASIC 
0:15-07-04 11:11:53 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NET_SCH_INGRESS 
0:15-07-04 11:11:53 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NET_ACT_POLICE 
0:15-07-04 11:11:53 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NET_IPGRE_DEMUX 
0:15-07-04 11:11:54 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NET_SCH_HTB 
0:15-07-04 11:11:54 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NET_SCH_HFSC 
0:15-07-04 11:11:54 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e VXLAN 
0:15-07-04 11:11:55 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e VETH 
0:15-07-04 11:11:55 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_NF_MATCH_AH 
0:15-07-04 11:11:55 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_NF_MATCH_ECN 
0:15-07-04 11:11:56 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_NF_MATCH_RPFILTER 
0:15-07-04 11:11:56 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_NF_MATCH_TTL 
0:15-07-04 11:11:56 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_NF_TARGET_SYNPROXY 
0:15-07-04 11:11:57 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_NF_TARGET_NETMAP 
0:15-07-04 11:11:57 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_NF_TARGET_REDIRECT 
0:15-07-04 11:11:57 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_NF_TARGET_CLUSTERIP 
0:15-07-04 11:11:58 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_NF_TARGET_ECN 
0:15-07-04 11:11:58 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_NF_TARGET_TTL 
0:15-07-04 11:11:59 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_NF_RAW 
0:15-07-04 11:11:59 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_NF_SECURITY 
0:15-07-04 11:11:59 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_NF_ARPTABLES 
0:15-07-04 11:12:00 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_NETLINK_QUEUE 
0:15-07-04 11:12:00 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e SCSI_NETLINK 
0:15-07-04 11:12:01 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_TARGET_MARK 
0:15-07-04 11:12:01 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_SET 
0:15-07-04 11:12:01 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_SET 
0:15-07-04 11:12:02 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_SET_BITMAP_IP 
0:15-07-04 11:12:02 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_SET_BITMAP_IPMAC 
0:15-07-04 11:12:02 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_SET_BITMAP_PORT 
0:15-07-04 11:12:03 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_SET_HASH_IP 
0:15-07-04 11:12:03 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_SET_HASH_IPMARK 
0:15-07-04 11:12:03 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_SET_HASH_IPPORT 
0:15-07-04 11:12:04 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_SET_HASH_IPPORTIP 
0:15-07-04 11:12:04 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_SET_HASH_IPPORTNET 
0:15-07-04 11:12:04 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_SET_HASH_MAC 
0:15-07-04 11:12:05 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_SET_HASH_NETPORTNET 
0:15-07-04 11:12:05 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_SET_HASH_NET 
0:15-07-04 11:12:06 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_SET_HASH_NETNET 
0:15-07-04 11:12:06 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_SET_HASH_NETPORT 
0:15-07-04 11:12:06 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_SET_HASH_NETIFACE 
0:15-07-04 11:12:07 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_SET_LIST_SET 
0:15-07-04 11:12:07 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_CONNTRACK_TIMEOUT 
0:15-07-04 11:12:08 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_CONNTRACK_TIMESTAMP 
0:15-07-04 11:12:08 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_CONNTRACK_EVENTS 
0:15-07-04 11:12:08 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_CONNTRACK_LABELS 
0:15-07-04 11:12:09 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_NETLINK_ACCT 
0:15-07-04 11:12:09 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_NETLINK_QUEUE_CT 
0:15-07-04 11:12:09 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_CT_PROTO_DCCP 
0:15-07-04 11:12:09 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_CT_PROTO_GRE 
0:15-07-04 11:12:10 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_CT_PROTO_SCTP 
0:15-07-04 11:12:10 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_CT_PROTO_UDPLITE 
0:15-07-04 11:12:10 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_CT_NETLINK_TIMEOUT 
0:15-07-04 11:12:11 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_CT_NETLINK_HELPER 
0:15-07-04 11:12:11 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_CONNTRACK_AMANDA 
0:15-07-04 11:12:11 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_CONNTRACK_H323 
0:15-07-04 11:12:12 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_CONNTRACK_BROADCAST 
0:15-07-04 11:12:12 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_CONNTRACK_NETBIOS_NS 
0:15-07-04 11:12:13 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_CONNTRACK_SNMP 
0:15-07-04 11:12:13 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_CONNTRACK_PPTP 
0:15-07-04 11:12:13 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_CONNTRACK_SANE 
0:15-07-04 11:12:14 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_CONNTRACK_TFTP 
0:15-07-04 11:12:14 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_LOG_COMMON 
0:15-07-04 11:12:14 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_NAT_PROTO_DCCP 
0:15-07-04 11:12:15 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_NAT_PROTO_UDPLITE 
0:15-07-04 11:12:15 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_NAT_PROTO_SCTP 
0:15-07-04 11:12:16 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_NAT_AMANDA 
0:15-07-04 11:12:16 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_NAT_TFTP 
0:15-07-04 11:12:16 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_TABLES 
0:15-07-04 11:12:17 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NF_TABLES_INET 
0:15-07-04 11:12:17 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NFT_COMPAT 
0:15-07-04 11:12:17 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NFT_EXTHDR 
0:15-07-04 11:12:18 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NFT_META 
0:15-07-04 11:12:18 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NFT_CT 
0:15-07-04 11:12:18 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NFT_LIMIT 
0:15-07-04 11:12:19 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NFT_NAT 
0:15-07-04 11:12:19 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NFT_QUEUE 
0:15-07-04 11:12:19 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NFT_REJECT 
0:15-07-04 11:12:20 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NFT_REJECT_INET 
0:15-07-04 11:12:20 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NFT_RBTREE 
0:15-07-04 11:12:20 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NFT_HASH 
0:15-07-04 11:12:21 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NFT_COUNTER 
0:15-07-04 11:12:21 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NFT_LOG 
0:15-07-04 11:12:21 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NFT_MASQ 
0:15-07-04 11:12:22 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_CONNMARK 
0:15-07-04 11:12:22 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_TARGET_AUDIT 
0:15-07-04 11:12:23 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_TARGET_CHECKSUM 
0:15-07-04 11:12:23 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_TARGET_CLASSIFY 
0:15-07-04 11:12:23 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_TARGET_CT 
0:15-07-04 11:12:24 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_TARGET_DSCP 
0:15-07-04 11:12:24 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_TARGET_HMARK 
0:15-07-04 11:12:25 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_TARGET_LED 
0:15-07-04 11:12:25 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_TARGET_LOG 
0:15-07-04 11:12:25 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_TARGET_NFQUEUE 
0:15-07-04 11:12:26 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_TARGET_RATEEST 
0:15-07-04 11:12:26 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_TARGET_TPROXY 
0:15-07-04 11:12:26 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_TARGET_TCPOPTSTRIP 
0:15-07-04 11:12:27 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_TARGET_TEE 
0:15-07-04 11:12:27 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_TARGET_TRACE 
0:15-07-04 11:12:27 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_TARGET_IDLETIMER 
0:15-07-04 11:12:28 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_BPF 
0:15-07-04 11:12:28 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_CLUSTER 
0:15-07-04 11:12:29 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_COMMENT 
0:15-07-04 11:12:29 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_CONNBYTES 
0:15-07-04 11:12:29 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_CONNLABEL 
0:15-07-04 11:12:30 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_CONNLIMIT 
0:15-07-04 11:12:30 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_CPU 
0:15-07-04 11:12:30 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_DCCP 
0:15-07-04 11:12:31 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_DEVGROUP 
0:15-07-04 11:12:31 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_DSCP 
0:15-07-04 11:12:31 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_ESP 
0:15-07-04 11:12:32 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_HASHLIMIT 
0:15-07-04 11:12:32 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_HELPER 
0:15-07-04 11:12:33 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_IPCOMP 
0:15-07-04 11:12:33 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_IPRANGE 
0:15-07-04 11:12:33 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_IPVS 
0:15-07-04 11:12:34 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_L2TP 
0:15-07-04 11:12:34 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_LENGTH 
0:15-07-04 11:12:34 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_LIMIT 
0:15-07-04 11:12:35 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_MAC 
0:15-07-04 11:12:35 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_MULTIPORT 
0:15-07-04 11:12:35 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_NFACCT 
0:15-07-04 11:12:36 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_OSF 
0:15-07-04 11:12:36 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_OWNER 
0:15-07-04 11:12:36 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_CGROUP 
0:15-07-04 11:12:37 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_PHYSDEV 
0:15-07-04 11:12:37 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_PKTTYPE 
0:15-07-04 11:12:37 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_QUOTA 
0:15-07-04 11:12:38 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_RATEEST 
0:15-07-04 11:12:38 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_REALM 
0:15-07-04 11:12:38 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_RECENT 
0:15-07-04 11:12:39 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_SCTP 
0:15-07-04 11:12:39 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_SOCKET 
0:15-07-04 11:12:39 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_STATISTIC 
0:15-07-04 11:12:40 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_STRING 
0:15-07-04 11:12:40 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_TCPMSS 
0:15-07-04 11:12:40 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_TIME 
0:15-07-04 11:12:41 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NETFILTER_XT_MATCH_U32 
0:15-07-04 11:12:41 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e IP_VS 
0:15-07-04 11:12:42 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e BRIDGE_NETFILTER 
0:15-07-04 11:12:42 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e CRYPTO_CRC32C 
0:15-07-04 11:12:42 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e CONFIGFS_FS 
0:15-07-04 11:12:43 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e EXPERT 
0:15-07-04 11:12:43 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e TARGET_CORE 
0:15-07-04 11:12:44 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e ISCSI_TARGET 
0:15-07-04 11:12:44 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e TCM_IBLOCK 
0:15-07-04 11:12:44 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e TCM_FILEIO 
0:15-07-04 11:12:45 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e TCM_PSCSI 
0:15-07-04 11:12:45 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e TCM_USER 
0:15-07-04 11:12:45 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e CONFIG_UIO 
0:15-07-04 11:12:46 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e LOOPBACK_TARGET 
0:15-07-04 11:12:46 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e TCM_FC 
0:15-07-04 11:12:47 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e LIBFC 
0:15-07-04 11:12:47 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e SCSI_FC_ATTRS 
0:15-07-04 11:12:47 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e SCSI_ISCSI_ATTRS 
0:15-07-04 11:12:48 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e ISCSI_TCP 
0:15-07-04 11:12:48 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e SCSI_LOWLEVEL 
0:15-07-04 11:12:48 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e SATA_AHCI_PLATFORM 
0:15-07-04 11:12:49 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e AHCI_XGENE 
0:15-07-04 11:12:49 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e GENERIC_PHY 
0:15-07-04 11:12:49 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e PHY_XGENE 
0:15-07-04 11:12:50 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NET_VENDOR_MELLANOX 
0:15-07-04 11:12:50 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e MLX4_EN 
0:15-07-04 11:12:51 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e MLX4_EN_DCB 
0:15-07-04 11:12:51 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e MLX4_EN_VXLAN 
0:15-07-04 11:12:51 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e MLX4_CORE 
0:15-07-04 11:12:52 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e MLX5_CORE 
0:15-07-04 11:12:52 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e NET_IP_TUNNEL 
0:15-07-04 11:12:52 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e VXLAN 
0:15-07-04 11:12:53 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e UIO 
0:15-07-04 11:12:53 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e UIO_PDRV_GENIRQ 
0:15-07-04 11:12:54 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e GPIO_DWAPB 
0:15-07-04 11:12:54 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e KEYBOARD_GPIO 
0:15-07-04 11:12:54 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e INPUT_POLLDEV 
0:15-07-04 11:12:55 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e KEYBOARD_GPIO_POLLED 
0:15-07-04 11:12:55 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -d DMA_CMA 
0:15-07-04 11:12:56 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e POWER_RESET 
0:15-07-04 11:12:56 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e POWER_RESET_GPIO 
0:15-07-04 11:12:56 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e POWER_RESET_SYSCON 
0:15-07-04 11:12:57 [220/232/232] [linux-armv8l64-generic] Running command:
scripts/config -e POWER_AVS 
0:15-07-04 11:12:57 [220/232/232] [linux-armv8l64-generic] Running command:
yes '' | make ARCH=arm64 oldconfig 
0:15-07-04 11:12:59 [220/232/232] [linux-armv8l64-generic] Running build-commands
0:15-07-04 11:12:59 [220/232/232] [linux-armv8l64-generic] Running command:
make vmlinux dtbs $MAKEFLAGS 
0:15-07-04 11:14:55 [220/232/232] [linux-armv8l64-generic] Running install-commands
0:15-07-04 11:14:55 [220/232/232] [linux-armv8l64-generic] Running command:
mkdir -p "$DESTDIR"/boot 
0:15-07-04 11:14:56 [220/232/232] [linux-armv8l64-generic] Running command:
make install dtbs_install INSTALL_PATH="$DESTDIR/boot" 
0:15-07-04 11:15:19 [220/232/232] [linux-armv8l64-generic] Running command:
cp arch/arm64/boot/Image "$DESTDIR/boot/vmlinux" 
0:15-07-04 11:15:19 [220/232/232] [linux-armv8l64-generic] Running strip-commands
0:15-07-04 11:15:19 [220/232/232] [linux-armv8l64-generic] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 11:15:19 [220/232/232] [linux-armv8l64-generic] Creating cache artifact 
0:15-07-04 11:15:32 [220/232/232] [linux-armv8l64-generic] Now cached as linux-armv8l64-generic.91b1c8f2143a0f16a296f0bfa7e311ab6f52e083b0956dd9681b3cf3db2de88b
0:15-07-04 11:15:42 [220/232/232] [linux-armv8l64-generic] Cleaned up /root/.cache/ybd/tmp/tmpdMmwUR
0:15-07-04 11:15:42 [220/232/232] [linux-armv8l64-generic] Elapsed time 00:05:10
0:15-07-04 11:15:42 [220/232/232] [bsp-armv8l64-generic] Installing linux-armv8l64-generic.91b1c8f2143a0f16a296f0bfa7e311ab6f52e083b0956dd9681b3cf3db2de88b 
0:15-07-04 11:15:46 [221/232/232] [bsp-armv8l64-generic] Start build 
0:15-07-04 11:15:47 [221/232/232] [bsp-armv8l64-generic] Logging build commands to /root/.cache/ybd/artifacts/bsp-armv8l64-generic.dbef88663d503b33f76fb90cd5ad2156509a2e95a6f464cd8877513b56ff1101.build-log.0 
0:15-07-04 11:15:47 [221/232/232] [bsp-armv8l64-generic] Running strip-commands
0:15-07-04 11:15:47 [221/232/232] [bsp-armv8l64-generic] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
WARNING: Unable to set filesystem_writable_paths=['bsp-armv8l64-generic.build', 'bsp-armv8l64-generic.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 11:15:47 [221/232/232] [bsp-armv8l64-generic] Creating cache artifact 
0:15-07-04 11:15:47 [221/232/232] [bsp-armv8l64-generic] Now cached as bsp-armv8l64-generic.dbef88663d503b33f76fb90cd5ad2156509a2e95a6f464cd8877513b56ff1101
0:15-07-04 11:15:49 [221/232/232] [bsp-armv8l64-generic] Cleaned up /root/.cache/ybd/tmp/tmp5Cchz3
0:15-07-04 11:15:49 [221/232/232] [bsp-armv8l64-generic] Elapsed time 00:05:16
0:15-07-04 11:15:49 [221/232/232] [build-system-armv8l64] Installing bsp-armv8l64-generic.dbef88663d503b33f76fb90cd5ad2156509a2e95a6f464cd8877513b56ff1101 
0:15-07-04 11:15:49 [221/232/232] [cloudinit-support] Starting assembly 
0:15-07-04 11:15:49 [221/232/232] [python-cheetah] Starting assembly 
0:15-07-04 11:15:49 [221/232/232] [python-cheetah] Installing foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360 
0:15-07-04 11:15:53 [221/232/232] [python-cheetah] Installing python-common.c21fc779cc7d2132ae5d2920abd7ed81d8c3024355a551b0b6208fad458a3e3c 
0:15-07-04 11:15:54 [222/232/232] [python-cheetah] Start build 
0:15-07-04 11:15:54 [222/232/232] [python-cheetah] Git checkout upstream:python-cheetah in /root/.cache/ybd/tmp/tmpiySDbq/python-cheetah.build 
0:15-07-04 11:15:54 [222/232/232] [python-cheetah] Upstream version 831aa6b9 v2.4.2-22-g831aa6b (v2.4.2 + 22 commits) 
0:15-07-04 11:15:54 [222/232/232] [python-cheetah] Logging build commands to /root/.cache/ybd/artifacts/python-cheetah.80db2fa1cf4d5a2355137ce2fc9b42704407fb53f844b86b16e6accc32b26384.build-log.0 
0:15-07-04 11:15:54 [222/232/232] [python-cheetah] Running build-commands
0:15-07-04 11:15:54 [222/232/232] [python-cheetah] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['python-cheetah.build', 'python-cheetah.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 11:15:56 [222/232/232] [python-cheetah] Running install-commands
0:15-07-04 11:15:56 [222/232/232] [python-cheetah] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 11:15:58 [222/232/232] [python-cheetah] Running strip-commands
0:15-07-04 11:15:58 [222/232/232] [python-cheetah] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 11:15:58 [222/232/232] [python-cheetah] Creating cache artifact 
0:15-07-04 11:15:59 [222/232/232] [python-cheetah] Now cached as python-cheetah.80db2fa1cf4d5a2355137ce2fc9b42704407fb53f844b86b16e6accc32b26384
0:15-07-04 11:16:01 [222/232/232] [python-cheetah] Cleaned up /root/.cache/ybd/tmp/tmpiySDbq
0:15-07-04 11:16:01 [222/232/232] [python-cheetah] Elapsed time 00:00:12
0:15-07-04 11:16:01 [222/232/232] [cloudinit-support] Installing python-cheetah.80db2fa1cf4d5a2355137ce2fc9b42704407fb53f844b86b16e6accc32b26384 
0:15-07-04 11:16:06 [222/232/232] [cloud-init] Starting assembly 
0:15-07-04 11:16:06 [222/232/232] [cloud-init] Installing python-common.c21fc779cc7d2132ae5d2920abd7ed81d8c3024355a551b0b6208fad458a3e3c 
0:15-07-04 11:16:10 [222/232/232] [cloud-init] Installing foundation.2bcd5cc3d2df784b06fc109537825694e4c064b1320e5d3a2f555e5d0f2cf360 
0:15-07-04 11:16:11 [222/232/232] [cloud-init] Installing python-cheetah.80db2fa1cf4d5a2355137ce2fc9b42704407fb53f844b86b16e6accc32b26384 
0:15-07-04 11:16:11 [223/232/232] [cloud-init] Start build 
0:15-07-04 11:16:11 [223/232/232] [cloud-init] Git checkout upstream:cloud-init in /root/.cache/ybd/tmp/tmpK7L44G/cloud-init.build 
0:15-07-04 11:16:11 [223/232/232] [cloud-init] Upstream version 130d51ac 0.7.3-18-g130d51a (0.7.3 + 18 commits) 
0:15-07-04 11:16:11 [223/232/232] [cloud-init] Logging build commands to /root/.cache/ybd/artifacts/cloud-init.21aa1361afe8d4c29bc0d2afb042267d021fcfe2762fdcdccd441737349d9b79.build-log.0 
0:15-07-04 11:16:11 [223/232/232] [cloud-init] Running build-commands
0:15-07-04 11:16:11 [223/232/232] [cloud-init] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['cloud-init.build', 'cloud-init.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 11:16:13 [223/232/232] [cloud-init] Running install-commands
0:15-07-04 11:16:13 [223/232/232] [cloud-init] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 11:16:15 [223/232/232] [cloud-init] Running post-install-commands
0:15-07-04 11:16:15 [223/232/232] [cloud-init] Running command:
mkdir -p "$DESTDIR"/lib/systemd/system 
0:15-07-04 11:16:15 [223/232/232] [cloud-init] Running command:
cp systemd/* "$DESTDIR"/lib/systemd/system/ 
0:15-07-04 11:16:16 [223/232/232] [cloud-init] Running strip-commands
0:15-07-04 11:16:16 [223/232/232] [cloud-init] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 11:16:16 [223/232/232] [cloud-init] Creating cache artifact 
0:15-07-04 11:16:17 [223/232/232] [cloud-init] Now cached as cloud-init.21aa1361afe8d4c29bc0d2afb042267d021fcfe2762fdcdccd441737349d9b79
0:15-07-04 11:16:19 [223/232/232] [cloud-init] Cleaned up /root/.cache/ybd/tmp/tmpK7L44G
0:15-07-04 11:16:19 [223/232/232] [cloud-init] Elapsed time 00:00:13
0:15-07-04 11:16:19 [223/232/232] [cloudinit-support] Installing cloud-init.21aa1361afe8d4c29bc0d2afb042267d021fcfe2762fdcdccd441737349d9b79 
0:15-07-04 11:16:19 [224/232/232] [cloudinit-support] Start build 
0:15-07-04 11:16:19 [224/232/232] [cloudinit-support] Logging build commands to /root/.cache/ybd/artifacts/cloudinit-support.19ff5f9f415e42590f273e6b7baa3ca024ea72e128f6805178f2e264c664cc2a.build-log.0 
0:15-07-04 11:16:19 [224/232/232] [cloudinit-support] Running strip-commands
0:15-07-04 11:16:19 [224/232/232] [cloudinit-support] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
WARNING: Unable to set filesystem_writable_paths=['cloudinit-support.build', 'cloudinit-support.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 11:16:19 [224/232/232] [cloudinit-support] Creating cache artifact 
0:15-07-04 11:16:19 [224/232/232] [cloudinit-support] Now cached as cloudinit-support.19ff5f9f415e42590f273e6b7baa3ca024ea72e128f6805178f2e264c664cc2a
0:15-07-04 11:16:21 [224/232/232] [cloudinit-support] Cleaned up /root/.cache/ybd/tmp/tmpS7PtGe
0:15-07-04 11:16:21 [224/232/232] [cloudinit-support] Elapsed time 00:00:32
0:15-07-04 11:16:21 [224/232/232] [build-system-armv8l64] Installing cloudinit-support.19ff5f9f415e42590f273e6b7baa3ca024ea72e128f6805178f2e264c664cc2a 
0:15-07-04 11:16:21 [224/232/232] [devtools] Starting assembly 
0:15-07-04 11:16:21 [224/232/232] [less] Starting assembly 
0:15-07-04 11:16:21 [224/232/232] [less] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 11:16:25 [224/232/232] [less] Installing python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5 
0:15-07-04 11:16:25 [225/232/232] [less] Start build 
0:15-07-04 11:16:26 [225/232/232] [less] Git checkout upstream:less in /root/.cache/ybd/tmp/tmpRDEg2z/less.build 
0:15-07-04 11:16:26 [225/232/232] [less] Upstream version 09a405d8 less-451 (less-451 + 0 commits) 
0:15-07-04 11:16:26 [225/232/232] [less] Logging build commands to /root/.cache/ybd/artifacts/less.03cd392527f5298c5b86a5149327f4706dfbc7d7781504df05d089405b3d76b9.build-log.0 
0:15-07-04 11:16:26 [225/232/232] [less] Running configure-commands
0:15-07-04 11:16:26 [225/232/232] [less] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['less.build', 'less.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 11:16:26 [225/232/232] [less] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 11:16:34 [225/232/232] [less] Running build-commands
0:15-07-04 11:16:34 [225/232/232] [less] Running command:
make 
0:15-07-04 11:16:36 [225/232/232] [less] Running install-commands
0:15-07-04 11:16:36 [225/232/232] [less] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 11:16:36 [225/232/232] [less] Running strip-commands
0:15-07-04 11:16:36 [225/232/232] [less] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 11:16:37 [225/232/232] [less] Creating cache artifact 
0:15-07-04 11:16:37 [225/232/232] [less] Now cached as less.03cd392527f5298c5b86a5149327f4706dfbc7d7781504df05d089405b3d76b9
0:15-07-04 11:16:39 [225/232/232] [less] Cleaned up /root/.cache/ybd/tmp/tmpRDEg2z
0:15-07-04 11:16:39 [225/232/232] [less] Elapsed time 00:00:17
0:15-07-04 11:16:39 [225/232/232] [devtools] Installing less.03cd392527f5298c5b86a5149327f4706dfbc7d7781504df05d089405b3d76b9 
0:15-07-04 11:16:43 [225/232/232] [pv] Starting assembly 
0:15-07-04 11:16:43 [225/232/232] [pv] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 11:16:46 [225/232/232] [pv] Installing python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5 
0:15-07-04 11:16:46 [226/232/232] [pv] Start build 
0:15-07-04 11:16:47 [226/232/232] [pv] Git checkout upstream:pv in /root/.cache/ybd/tmp/tmpEF_KXY/pv.build 
0:15-07-04 11:16:47 [226/232/232] [pv] Upstream version d6ce7cfe pv-1.3.4 (pv-1.3.4 + 0 commits) 
0:15-07-04 11:16:47 [226/232/232] [pv] Logging build commands to /root/.cache/ybd/artifacts/pv.5b2f9392189bf0fe6b6cfc8a0191b1b6dcb360d015ef97035383af6269da6826.build-log.0 
0:15-07-04 11:16:47 [226/232/232] [pv] Running configure-commands
0:15-07-04 11:16:47 [226/232/232] [pv] Running command:
export NOCONFIGURE=1; if [ -e autogen ]; then ./autogen; elif [ -e autogen.sh ]; then ./autogen.sh; elif [ ! -e ./configure ]; then autoreconf -ivf; fi 
WARNING: Unable to set filesystem_writable_paths=['pv.build', 'pv.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 11:16:47 [226/232/232] [pv] Running command:
./configure --prefix="$PREFIX" 
0:15-07-04 11:16:52 [226/232/232] [pv] Running build-commands
0:15-07-04 11:16:52 [226/232/232] [pv] Running command:
make 
0:15-07-04 11:16:53 [226/232/232] [pv] Running install-commands
0:15-07-04 11:16:53 [226/232/232] [pv] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 11:16:53 [226/232/232] [pv] Running strip-commands
0:15-07-04 11:16:53 [226/232/232] [pv] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 11:16:53 [226/232/232] [pv] Creating cache artifact 
0:15-07-04 11:16:54 [226/232/232] [pv] Now cached as pv.5b2f9392189bf0fe6b6cfc8a0191b1b6dcb360d015ef97035383af6269da6826
0:15-07-04 11:16:55 [226/232/232] [pv] Cleaned up /root/.cache/ybd/tmp/tmpEF_KXY
0:15-07-04 11:16:55 [226/232/232] [pv] Elapsed time 00:00:12
0:15-07-04 11:16:55 [226/232/232] [devtools] Installing pv.5b2f9392189bf0fe6b6cfc8a0191b1b6dcb360d015ef97035383af6269da6826 
0:15-07-04 11:16:55 [226/232/232] [git-review] Starting assembly 
0:15-07-04 11:16:55 [226/232/232] [git-review] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 11:16:59 [226/232/232] [git-review] Installing python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5 
0:15-07-04 11:16:59 [227/232/232] [git-review] Start build 
0:15-07-04 11:16:59 [227/232/232] [git-review] Git checkout upstream:git-review in /root/.cache/ybd/tmp/tmpteZwwz/git-review.build 
0:15-07-04 11:16:59 [227/232/232] [git-review] Upstream version 79262a52 1.24-51-g79262a5 (1.24 + 51 commits) 
0:15-07-04 11:16:59 [227/232/232] [git-review] Logging build commands to /root/.cache/ybd/artifacts/git-review.fbbf2d79ce8a54beb98a519d15bb3eaa7d1b1e4100a526a31212dabbe429f3b3.build-log.0 
0:15-07-04 11:16:59 [227/232/232] [git-review] Running build-commands
0:15-07-04 11:16:59 [227/232/232] [git-review] Running command:
python setup.py build 
WARNING: Unable to set filesystem_writable_paths=['git-review.build', 'git-review.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 11:17:01 [227/232/232] [git-review] Running install-commands
0:15-07-04 11:17:01 [227/232/232] [git-review] Running command:
python setup.py install --prefix "$PREFIX" --root "$DESTDIR" 
0:15-07-04 11:17:02 [227/232/232] [git-review] Running strip-commands
0:15-07-04 11:17:02 [227/232/232] [git-review] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 11:17:03 [227/232/232] [git-review] Creating cache artifact 
0:15-07-04 11:17:03 [227/232/232] [git-review] Now cached as git-review.fbbf2d79ce8a54beb98a519d15bb3eaa7d1b1e4100a526a31212dabbe429f3b3
0:15-07-04 11:17:04 [227/232/232] [git-review] Cleaned up /root/.cache/ybd/tmp/tmpteZwwz
0:15-07-04 11:17:04 [227/232/232] [git-review] Elapsed time 00:00:09
0:15-07-04 11:17:04 [227/232/232] [devtools] Installing git-review.fbbf2d79ce8a54beb98a519d15bb3eaa7d1b1e4100a526a31212dabbe429f3b3 
0:15-07-04 11:17:04 [227/232/232] [nano] Starting assembly 
0:15-07-04 11:17:04 [227/232/232] [nano] Installing python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5 
0:15-07-04 11:17:08 [228/232/232] [nano] Start build 
0:15-07-04 11:17:09 [228/232/232] [nano] Git checkout upstream:nano-tarball in /root/.cache/ybd/tmp/tmptMcVPE/nano.build 
0:15-07-04 11:17:09 [228/232/232] [nano] Upstream version fb040ea3 nano-2.4.0 (nano-2.4.0 + 0 commits) 
0:15-07-04 11:17:09 [228/232/232] [nano] Logging build commands to /root/.cache/ybd/artifacts/nano.4ecc16deda24f4ed3ea7f53dfa5bf87606c60ed6c8ccabf0768d885a7b9c3993.build-log.0 
0:15-07-04 11:17:09 [228/232/232] [nano] Running configure-commands
0:15-07-04 11:17:09 [228/232/232] [nano] Running command:
./configure --prefix="$PREFIX" --sysconfdir=/etc 
WARNING: Unable to set filesystem_writable_paths=['nano.build', 'nano.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 11:17:17 [228/232/232] [nano] Running build-commands
0:15-07-04 11:17:17 [228/232/232] [nano] Running command:
make 
0:15-07-04 11:17:20 [228/232/232] [nano] Running install-commands
0:15-07-04 11:17:20 [228/232/232] [nano] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 11:17:21 [228/232/232] [nano] Running post-install-commands
0:15-07-04 11:17:21 [228/232/232] [nano] Running command:
cat <<EOF >> nanorc
set smooth
include /usr/share/nano/c.nanorc
include /usr/share/nano/patch.nanorc
include /usr/share/nano/python.nanorc
include /usr/share/nano/sh.nanorc
EOF
 
0:15-07-04 11:17:22 [228/232/232] [nano] Running command:
mkdir -p "$DESTDIR"/etc 
0:15-07-04 11:17:22 [228/232/232] [nano] Running command:
install -m 644 nanorc "$DESTDIR"/etc/nanorc 
0:15-07-04 11:17:22 [228/232/232] [nano] Running strip-commands
0:15-07-04 11:17:22 [228/232/232] [nano] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 11:17:23 [228/232/232] [nano] Creating cache artifact 
0:15-07-04 11:17:24 [228/232/232] [nano] Now cached as nano.4ecc16deda24f4ed3ea7f53dfa5bf87606c60ed6c8ccabf0768d885a7b9c3993
0:15-07-04 11:17:26 [228/232/232] [nano] Cleaned up /root/.cache/ybd/tmp/tmptMcVPE
0:15-07-04 11:17:26 [228/232/232] [nano] Elapsed time 00:00:21
0:15-07-04 11:17:26 [228/232/232] [devtools] Installing nano.4ecc16deda24f4ed3ea7f53dfa5bf87606c60ed6c8ccabf0768d885a7b9c3993 
0:15-07-04 11:17:26 [228/232/232] [vim] Starting assembly 
0:15-07-04 11:17:26 [228/232/232] [vim] Installing core.c7bdae244dde781014af97167587aaa3511e6b0cb7160920d5591cb9617974e3 
0:15-07-04 11:17:29 [228/232/232] [vim] Installing python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5 
0:15-07-04 11:17:30 [229/232/232] [vim] Start build 
0:15-07-04 11:17:32 [229/232/232] [vim] Git checkout upstream:vim in /root/.cache/ybd/tmp/tmp2n_xGd/vim.build 
0:15-07-04 11:17:33 [229/232/232] [vim] Upstream version 07c2c067 v7-3-401-6-g07c2c06 (v7-3-401 + 6 commits) 
0:15-07-04 11:17:33 [229/232/232] [vim] Logging build commands to /root/.cache/ybd/artifacts/vim.9f8a7b5094980d84d48ea2ac08208ac0bd850ece27a4fea91ccde22c0c25c292.build-log.0 
0:15-07-04 11:17:33 [229/232/232] [vim] Running configure-commands
0:15-07-04 11:17:33 [229/232/232] [vim] Running command:
echo '#define SYS_VIMRC_FILE "/etc/vimrc"' >>src/feature.h 
WARNING: Unable to set filesystem_writable_paths=['vim.build', 'vim.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 11:17:34 [229/232/232] [vim] Running command:
./configure --prefix="$PREFIX" --enable-multibyte 
0:15-07-04 11:17:52 [229/232/232] [vim] Running build-commands
0:15-07-04 11:17:52 [229/232/232] [vim] Running command:
make 
0:15-07-04 11:18:08 [229/232/232] [vim] Running install-commands
0:15-07-04 11:18:08 [229/232/232] [vim] Running command:
make DESTDIR="$DESTDIR" install 
0:15-07-04 11:18:10 [229/232/232] [vim] Running command:
mkdir -p "$DESTDIR"/etc 
0:15-07-04 11:18:10 [229/232/232] [vim] Running command:
install -m 644 runtime/vimrc_example.vim "$DESTDIR"/etc/vimrc 
0:15-07-04 11:18:11 [229/232/232] [vim] Running strip-commands
0:15-07-04 11:18:11 [229/232/232] [vim] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 11:18:11 [229/232/232] [vim] Creating cache artifact 
0:15-07-04 11:18:24 [229/232/232] [vim] Now cached as vim.9f8a7b5094980d84d48ea2ac08208ac0bd850ece27a4fea91ccde22c0c25c292
0:15-07-04 11:18:26 [229/232/232] [vim] Cleaned up /root/.cache/ybd/tmp/tmp2n_xGd
0:15-07-04 11:18:26 [229/232/232] [vim] Elapsed time 00:01:00
0:15-07-04 11:18:26 [229/232/232] [devtools] Installing vim.9f8a7b5094980d84d48ea2ac08208ac0bd850ece27a4fea91ccde22c0c25c292 
0:15-07-04 11:18:27 [229/232/232] [screen] Starting assembly 
0:15-07-04 11:18:27 [229/232/232] [screen] Installing python-core.3c2a2db0f065b5db0d2a5cbe4d90d0535b0915b49fa92d178ae5186a515809b5 
0:15-07-04 11:18:31 [230/232/232] [screen] Start build 
0:15-07-04 11:18:31 [230/232/232] [screen] Git checkout upstream:screen in /root/.cache/ybd/tmp/tmp4toHE7/screen.build 
0:15-07-04 11:18:31 [230/232/232] [screen] Upstream version 7dd4a9e5 (No tag found) 
0:15-07-04 11:18:31 [230/232/232] [screen] Logging build commands to /root/.cache/ybd/artifacts/screen.f736612d9e422db468ccb8cac8b3fc7c199781ced6d609f6bc4bbeb106f60d9c.build-log.0 
0:15-07-04 11:18:31 [230/232/232] [screen] Running configure-commands
0:15-07-04 11:18:31 [230/232/232] [screen] Running command:
cd ./src && sh autogen.sh 
WARNING: Unable to set filesystem_writable_paths=['screen.build', 'screen.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 11:18:37 [230/232/232] [screen] Running command:
cd ./src && ./configure --prefix="$PREFIX" 
0:15-07-04 11:18:46 [230/232/232] [screen] Running build-commands
0:15-07-04 11:18:46 [230/232/232] [screen] Running command:
cd ./src && make 
0:15-07-04 11:19:27 [230/232/232] [screen] Running install-commands
0:15-07-04 11:19:27 [230/232/232] [screen] Running command:
cd ./src && make DESTDIR="$DESTDIR" install 
0:15-07-04 11:19:39 [230/232/232] [screen] Running strip-commands
0:15-07-04 11:19:39 [230/232/232] [screen] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
0:15-07-04 11:19:40 [230/232/232] [screen] Creating cache artifact 
0:15-07-04 11:19:42 [230/232/232] [screen] Now cached as screen.f736612d9e422db468ccb8cac8b3fc7c199781ced6d609f6bc4bbeb106f60d9c
0:15-07-04 11:19:43 [230/232/232] [screen] Cleaned up /root/.cache/ybd/tmp/tmp4toHE7
0:15-07-04 11:19:43 [230/232/232] [screen] Elapsed time 00:01:16
0:15-07-04 11:19:43 [230/232/232] [devtools] Installing screen.f736612d9e422db468ccb8cac8b3fc7c199781ced6d609f6bc4bbeb106f60d9c 
0:15-07-04 11:19:43 [231/232/232] [devtools] Start build 
0:15-07-04 11:19:43 [231/232/232] [devtools] Logging build commands to /root/.cache/ybd/artifacts/devtools.79bad0caa1afdef34470bb2d57565a5d922555015bb4af7e8c0e132baa218b74.build-log.0 
0:15-07-04 11:19:43 [231/232/232] [devtools] Running strip-commands
0:15-07-04 11:19:43 [231/232/232] [devtools] Running command:
find "$DESTDIR" -type f \
  '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
  -exec sh -ec \
  'read -n4 hdr <"$1" # check for elf header
   if [ "$hdr" != "$(printf \\x7fELF)" ]; then
       exit 0
   fi
   debugfile="$DESTDIR$PREFIX/lib/debug/$(basename "$1")"
   mkdir -p "$(dirname "$debugfile")"
   objcopy --only-keep-debug "$1" "$debugfile"
   chmod 644 "$debugfile"
   strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
   objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'
 
WARNING: Unable to set filesystem_writable_paths=['devtools.build', 'devtools.inst', '/dev', '/proc', '/tmp'] in a chroot sandbox, falling back to filesystem_writable_paths=all
0:15-07-04 11:19:44 [231/232/232] [devtools] Creating cache artifact 
0:15-07-04 11:19:44 [231/232/232] [devtools] Now cached as devtools.79bad0caa1afdef34470bb2d57565a5d922555015bb4af7e8c0e132baa218b74
0:15-07-04 11:19:45 [231/232/232] [devtools] Cleaned up /root/.cache/ybd/tmp/tmpdbHzsw
0:15-07-04 11:19:45 [231/232/232] [devtools] Elapsed time 00:03:23
0:15-07-04 11:19:45 [231/232/232] [build-system-armv8l64] Installing devtools.79bad0caa1afdef34470bb2d57565a5d922555015bb4af7e8c0e132baa218b74 
0:15-07-04 11:19:46 [232/232/232] [build-system-armv8l64] Start build 
0:15-07-04 11:19:46 [232/232/232] [build-system-armv8l64] Logging build commands to /root/.cache/ybd/artifacts/build-system-armv8l64.b60ff4e7ee165ce09e19b64f2ac3b90a750c44a5dbd9bef0c6b0fdf3a64307cb.build-log.0 
0:15-07-04 11:19:46 [232/232/232] [build-system-armv8l64] Running install-commands
0:15-07-04 11:19:46 [232/232/232] [build-system-armv8l64] Running command:
update-ca-certificates 
0:15-07-04 11:19:48 [232/232/232] [build-system-armv8l64] Creating cache artifact 
0:15-07-04 11:20:28 [232/232/232] [build-system-armv8l64] Now cached as build-system-armv8l64.b60ff4e7ee165ce09e19b64f2ac3b90a750c44a5dbd9bef0c6b0fdf3a64307cb
0:15-07-04 11:20:31 [232/232/232] [build-system-armv8l64] Cleaned up /root/.cache/ybd/tmp/tmpluhYoj
0:15-07-04 11:20:31 [232/232/232] [build-system-armv8l64] Elapsed time 04:08:01
0:15-07-04 11:20:31 [232/232/232] [build-system-armv8l64] Starting deployment 
0:15-07-04 11:20:31 [232/232/232] [build-system-armv8l64] Elapsed time 00:00:00
0:15-07-04 11:20:31 [232/232/232] [TOTAL] Elapsed time 04:08:13
root@ca001-001:/home/ubuntu/cida/definitions# 

